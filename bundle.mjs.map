{"version":3,"file":"bundle.mjs","sources":["src/js/config.js","src/js/math.js","src/js/View.js","src/js/Timer.js","src/js/logger.js","src/js/KeyboardManager.js","src/js/keyboard.js","src/js/Tile.js","src/js/LayerManager.js","src/js/Bounds.js","src/js/Entity.js","src/js/TileResolver.js","src/js/TileCollider.js","src/js/EntityCollider.js","src/js/Level.js","src/js/layers/background.js","src/js/layers/entities.js","src/js/loaders/utils.js","src/js/SpriteSheet.js","src/js/animation.js","src/js/loaders/sprites.js","src/js/loaders/level.js","src/js/Trait.js","src/js/traits/Walk.js","src/js/traits/Jump.js","src/js/traits/BePhysics.js","src/js/traits/BeSolid.js","src/js/traits/BeStomper.js","src/js/traits/BeKillable.js","src/js/entities/utils.js","src/js/entities/Mario.js","src/js/traits/Wander.js","src/js/entities/Goomba.js","src/js/entities/Koopa.js","src/js/entities/entities.js","src/js/Font.js","src/js/loaders/font.js","src/js/layers/dashboard.js","src/js/traits/BePlayerControl.js","src/js/main.js"],"sourcesContent":["export const CONFIG = {\n    RATE: 1 / 60,\n\n    VIEW_WIDTH: 256,\n    VIEW_HEIGHT: 240,\n\n    DEBUG_MARIO: false,\n    DEBUG_TILE_COLLISION: false,\n    DEBUG_VIEW_SCROLL: false\n};","export class Vector {\n    constructor(x, y) {\n        this.set(x, y);\n    }\n\n    set(x, y) {\n        this._x = x;\n        this._y = y;\n    }\n\n    clone() {\n        return new Vector(this._x, this._y);\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set x(x) {\n        this._x = x;\n    }\n\n    set y(y) {\n        this._y = y;\n    }\n\n\n}\n\nexport class Matrix {\n    constructor() {\n        this._grid = [];\n    }\n\n    set(x, y, value) {\n        if (!this._grid[x]) {\n            this._grid[x] = [];\n        }\n        this._grid[x][y] = value;\n    }\n\n    get(x, y) {\n        const col = this._grid[x];\n        return col ? col[y] : undefined;\n    }\n\n    forEach(callback) {\n        this._grid.forEach((column, x) => {\n            column.forEach((value, y) => callback(x, y, value));\n        });\n    }\n\n    forEachInColumn(x, callback) {\n        const column = this._grid[x];\n        if (column) {\n            column.forEach((value, y) => callback(x, y, value));\n        }\n    }\n\n}","import { Vector } from './math.js';\n\nexport class View {\n    constructor(width, height) {\n        this._pos = new Vector(0, 0);\n        this._size = new Vector(width, height);\n    }\n\n    /**\n     * @returns {Vector}\n     */\n    get pos() {\n        return this._pos;\n    }\n\n    /**\n     * @returns {Vector}\n     */\n    get size() {\n        return this._size;\n    }\n}","export class Timer {\n    constructor(rate = 1 / 60) {\n        this._rate = rate;\n        this._lastTime = 0;\n        this._accumulatedTime = 0;\n    }\n\n    _updateProxy(time) {\n        this._accumulatedTime += (time - this._lastTime) / 1000;\n\n        // temporary fix for not updating so often\n        if (this._accumulatedTime > 1) {\n            this._accumulatedTime = 1;\n        }\n\n        while (this._accumulatedTime > this._rate) {\n            this._accumulatedTime -= this._rate;\n\n            this.update(this._rate);\n        }\n        this._lastTime = time;\n\n        this._enqueue();\n    }\n\n    _enqueue() {\n        requestAnimationFrame(this._updateProxy.bind(this));\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    update(rate) {\n        // users should overwrite it\n        throw new Error(\"Users should attach a real update method\");\n    }\n\n    start() {\n        this._enqueue();\n    }\n\n}","/* eslint-disable no-console */\n\nexport const LEVEL_DEBUG = 0;\nexport const LEVEL_INFO = 1;\nexport const LEVEL_WARN = 2;\nexport const LEVEL_ERROR = 3;\n\n// const level = LEVEL_DEBUG;\nconst level = LEVEL_WARN;\n\nfunction isLog(levelNeeded) {\n    return level <= levelNeeded;\n}\n\nfunction log(levelNeeded, logFunc, logFuncArguments) {\n    if (isLog(levelNeeded)) {\n        logFunc.apply(null, logFuncArguments);\n    }\n}\n\n/* Check functions */\n\nexport function isLogDbg() {\n    isLog(LEVEL_DEBUG);\n}\n\nexport function isLogInfo() {\n    isLog(LEVEL_INFO);\n}\nexport function isLogWarn() {\n    isLog(LEVEL_WARN);\n}\n\nexport function isLogError() {\n    isLog(LEVEL_ERROR);\n}\n\n/* Log functions */\n\nexport function logDbg() {\n    log(LEVEL_DEBUG, console.log, arguments);\n}\n\nexport function logInfo() {\n    log(LEVEL_INFO, console.info, arguments);\n}\nexport function logWarn() {\n    log(LEVEL_WARN, console.warn, arguments);\n}\n\nexport function logError() {\n    log(LEVEL_ERROR, console.error, arguments);\n}","import * as logger from './logger.js';\n\nexport const KEY_STATE_RELEASED = 0;\nexport const KEY_STATE_PRESSED = 1;\n\nexport class KeyboardManager {\n    constructor() {\n        // keyCode to registered callback\n        this._keyMap = new Map();\n\n        // down-up state for a key\n        this._keyState = new Map();\n\n        this._started = false;\n    }\n\n    start(window) {\n        if (this._started) {\n            logger.logWarn(\"KeyboardManager is already started\");\n            return;\n        }\n\n        logger.logDbg(\"KeyboardManager is started\");\n\n        ['keydown', 'keyup'].forEach(eventName => {\n            window.addEventListener(eventName, event => {\n                this._handleEvent(event);\n            });\n        });\n    }\n\n    register(key, callback) {\n        this._keyMap.set(key, callback);\n        // this._keyState.set(key, KEY_STATE_RELEASED);\n    }\n\n    _handleEvent(event) {\n        const key = event.keyCode;\n\n        const callback = this._keyMap.get(key);\n        if (!callback) {\n            // not interested in this key\n            return;\n        }\n\n        // no browser's default action on any registered keys\n        event.preventDefault();\n\n        const newState = event.type === \"keydown\" ? KEY_STATE_PRESSED : KEY_STATE_RELEASED;\n        if (this._keyState.get(key) !== newState) {\n            callback(newState);\n            this._keyState.set(key, newState);\n        }\n\n    }\n\n}","// constants for the keyboard control - these are keyCode \nconst KEY_LEFT = 65;     // A\nconst KEY_RIGHT = 68;    // D\nconst KEY_TURBO = 79;    // O\nconst KEY_JUMP = 80;     // P\n\n/**\n * \n * @param {Entity} mario \n * @param {KeyboardManager} keyboardManager \n */\nexport function setupMarioKeyboard(mario, keyboardManager) {\n    keyboardManager.register(KEY_JUMP, keyState => {\n        if (keyState) {\n            mario.jump.start();\n        } else {\n            mario.jump.cancel();\n        }\n    });\n    keyboardManager.register(KEY_LEFT, keyState => {\n        mario.walk.left(!!keyState);\n    });\n    keyboardManager.register(KEY_RIGHT, keyState => {\n        mario.walk.right(!!keyState);\n    });\n    keyboardManager.register(KEY_TURBO, keyState => {\n        mario.walk.turbo(!!keyState);\n    });\n}","export class Tile {\n    /**\n     * @param {{tile: String, type: String}} tileSpec \n     */\n    constructor(tileSpec) {\n        this._name = tileSpec.name;\n        this._type = tileSpec.type;\n    }\n\n    /**\n     * @property\n     * @returns {String}\n     */\n    get name() {\n        return this._name;\n    }\n\n    /**\n     * @property\n     * @returns {String}\n     */\n    get type() {\n        return this._type;\n    }\n}","export class LayerManager {\n    constructor() {\n        this._layers = [];\n    }\n\n    /**\n     * @param {(context: CanvasRenderingContext2D, view: View) => void} layer \n     */\n    add(layer) {\n        this._layers.push(layer);\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} context \n     * @param {View} view \n     */\n    draw(context, view) {\n        this._layers.forEach(layer => layer(context, view));\n    }\n}","export class Bounds {\n    /**\n     * \n     * @param {Vector} pos \n     * @param {Vector} size \n     * @param {Vector} offset \n     */\n    constructor(pos, size, offset) {\n        this.pos = pos;\n        this.size = size;\n        this.offset = offset;\n    }\n\n    get bottom() {\n        return this.pos.y + this.size.y + this.offset.y;\n    }\n\n    set bottom(y) {\n        this.pos.y = y - (this.size.y + this.offset.y);\n    }\n\n    get top() {\n        return this.pos.y + this.offset.y;\n    }\n\n    set top(y) {\n        this.pos.y = y - this.offset.y;\n    }\n\n    get left() {\n        return this.pos.x + this.offset.x;\n    }\n\n    set left(x) {\n        this.pos.x = x - this.offset.x;\n    }\n\n    get right() {\n        return this.pos.x + this.size.x + this.offset.x;\n    }\n\n    set right(x) {\n        this.pos.x = x - (this.size.x + this.offset.x);\n    }\n\n    overlaps(otherBounds) {\n        return this.bottom > otherBounds.top &&\n            this.top < otherBounds.bottom &&\n            this.right > otherBounds.left &&\n            this.left < otherBounds.right;\n    }\n}","import { Vector } from './math.js';\nimport { Bounds } from './Bounds.js';\n\nexport class Entity {\n    constructor(name) {\n        this.NAME = name;\n        // current possition\n        this._pos = new Vector(0, 0);\n        // current velocity\n        this._vel = new Vector(0, 0);\n        // current size\n        this._size = new Vector(0, 0);\n        // current offset (allow drawn size to be different that the real size)\n        this._offset = new Vector(0, 0);\n\n        // it wil make all calculations \n        this._bounds = new Bounds(this._pos, this._size, this._offset);\n\n        this._lifetime = 0;\n\n        this._traits = [];\n\n        this._animations = new Map();\n    }\n\n    /**\n     * @returns {Bounds}\n     */\n    get bounds() {\n        return this._bounds;\n    }\n\n    /**\n     * @returns {Vector}\n     */\n    get pos() {\n        return this._pos;\n    }\n\n    /**\n     * @returns {Vector}\n     */\n    get vel() {\n        return this._vel;\n    }\n\n    /**\n     * @returns {Vector}\n     */\n    get size() {\n        return this._size;\n    }\n\n    /**\n     * @returns {Vector}\n     */\n    get offset() {\n        return this._offset;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get lifetime() {\n        return this._lifetime;\n    }\n\n    /**\n     * \n     * @param {Trait} trait \n     */\n    registerTrait(trait) {\n        // remember all registered trait\n        this._traits.push(trait);\n\n        // expose it by its name to the entity\n        this[trait.NAME] = trait;\n    }\n\n    /**\n     * Register an animation. It can be bound to a {@link Trait} instance.\n     * It also allow a {@link Trait} to have multiple animations\n     * Like main \"walk\", \"walk-run\", \"walk-break\", \"walk-turbo\", etc...\n     * @param {String} animName \n     * @param {(progress: Number)} animation \n     */\n    registerAnimation(animName, animation) {\n        const idx = animName.indexOf('-');\n        let mainName = animName;\n        let subName = animName;\n        if (idx > 0) {\n            mainName = animName.substring(0, idx);\n            subName = animName.substring(idx + 1);\n        }\n        let animations = this._animations.get(mainName);\n        if (!animations) {\n            animations = new Map();\n            this._animations.set(mainName, animations);\n        }\n        animations.set(subName, animation);\n    }\n\n    /**\n     * Move all registered animations from the {@link SpriteSheet} object to the entity\n     * @param {SpriteSheet} sprites \n     */\n    registerAnimationsFromSprites(sprites) {\n        sprites.forEachAnimation((animation, name) => {\n            this.registerAnimation(name, animation);\n        });\n    }\n\n    /**\n     * \n     * @param {Level} level \n     */\n    animate(level) {\n        return Array.from(this._animations).reduce((accum, [animName, animations]) => {\n            // check to see if there's such Trait registered and if there is then\n            // call it's animation method,\n            // if not then use the level's total time as a progress for a animation\n            // that is not connected to a Trait\n\n            const trait = this[animName];\n            if (trait) {\n                let { tile, mirrored } = trait.animate(this, animations, level.getTotalTime());\n                if (accum.tile === undefined) {\n                    accum.tile = tile;\n                }\n                if (accum.mirrored === undefined) {\n                    accum.mirrored = mirrored;\n                }\n            } else {\n                throw new Error(`Unsupported standalone animation ${animName}`);\n                // not used for now - all animation for an entity are connnected to a Trait.\n                // thus if needed a \"standalone\" animation then a specific Trait can be created\n                // just for it\n            }\n\n            return accum;\n        }, { tile: undefined, mirrored: undefined });\n    }\n\n    /**\n     * \n     * @param {Number} rate\n     * @param {Level} level  \n     */\n    update(rate, level) {\n        this._traits.forEach(trait => trait.update(this, rate, level));\n\n        // increase also the overall lifetime of the entity\n        this._lifetime += rate;\n    }\n\n    /**\n     * \n     * @param {CanvasRenderingContext2D} context \n     * @param {Level} level \n     */\n    // eslint-disable-next-line no-unused-vars\n    draw(context, level) {\n        throw new Error(\"Each Entity should overwrite this abstract method\");\n    }\n\n    finalize() {\n        this._traits.forEach(trait => trait.finalize());\n    }\n\n    /**\n     * Called when the entity was \"obstructed\" by a \"ground\" tile\n     * @param {{tile:Tile, x1:Number, x2:Number, y1:Number, y2:Number}} obstacle\n     * @param {Number} direction \n     */\n    obstructedBy(obstacle, direction) {\n        this._traits.forEach(trait => trait.obstructed(this, obstacle, direction));\n    }\n\n    /**\n     * Called when the entity has \"collided\" with another entity.\n     * @param {Entity} other \n     */\n    collidedWith(other) {\n        this._traits.forEach(trait => trait.collided(this, other));\n    }\n\n}\n\n/**\n * Collide directon TOP\n * @constant\n * @static\n */\nEntity.COLLIDE_TOP = Symbol(1);\n/**\n * Collide directon BOTTOM\n * @constant\n * @static\n */\nEntity.COLLIDE_BOTTOM = Symbol(2);\n/**\n * Collide directon LEFT\n * @constant\n * @static\n */\nEntity.COLLIDE_LEFT = Symbol(3);\n/**\n * Collide directon RIGHT\n * @constant\n * @static\n */\nEntity.COLLIDE_RIGHT = Symbol(4);","export class TileResolver {\n    /**\n     * @param {Matrix} tiles \n     * @param {Number} tileSize \n     */\n    constructor(tiles, tileSize) {\n        this._tiles = tiles;\n        this._tileSize = tileSize;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getTileSize() {\n        return this._tileSize;\n    }\n\n    toIndex(pos) {\n        return Math.floor(pos / this._tileSize);\n    }\n\n    toIndexRange(pos1, pos2) {\n        // this method is axis agnostic\n        const posMax = Math.ceil(pos2 / this._tileSize) * this._tileSize;\n\n        const indexRange = [];\n        let pos = pos1;\n        do {\n            indexRange.push(this.toIndex(pos));\n            pos += this._tileSize;\n        } while (pos < posMax);\n\n        return indexRange;\n    }\n\n    getByIndex(indexX, indexY) {\n        const tile = this._tiles.get(indexX, indexY);\n        if (tile) {\n            const x1 = indexX * this._tileSize;\n            const x2 = x1 + this._tileSize;\n            const y1 = indexY * this._tileSize;\n            const y2 = y1 + this._tileSize;\n            return {\n                tile, x1, x2, y1, y2\n            };\n        }\n        return null;\n    }\n\n    getByPosition(posX, posY) {\n        return this.getByIndex(this.toIndex(posX), this.toIndex(posY));\n    }\n\n    getByRange(posX1, posX2, posY1, posY2) {\n        const tiles = [];\n\n        this.toIndexRange(posX1, posX2).forEach(indexX => {\n            this.toIndexRange(posY1, posY2).forEach(indexY => {\n                const tile = this.getByIndex(indexX, indexY);\n                if (tile) {\n                    tiles.push(tile);\n                }\n            });\n        });\n\n        return tiles;\n    }\n\n}","import { Entity } from './Entity.js';\nimport { TileResolver } from './TileResolver.js';\n\nexport class TileCollider {\n    /**\n     * @param {Matrix} tiles \n     * @param {Number} tileSize \n     */\n    constructor(tiles, tileSize) {\n        this._tiles = new TileResolver(tiles, tileSize);\n    }\n\n    /**\n     * @returns {TileResolver}\n     */\n    getTileResolver() {\n        return this._tiles;\n    }\n\n    /**\n     * @param {Entity} entity \n     */\n    checkX(entity) {\n        // this will optimise to search for collisions only on the borders of the entity\n        // not also inside it as we don't need them\n        let posX;\n        if (entity.vel.x === 0) {\n            // we are not moving at all - don't do any checks\n            return;\n        } else if (entity.vel.x > 0) {\n            // moving forward/right\n            posX = entity.bounds.right;\n        } else {\n            // moving backwards/left\n            posX = entity.bounds.left;\n        }\n\n        const matches = this._tiles.getByRange(posX, posX,\n            entity.bounds.top, entity.bounds.bottom);\n\n        matches.forEach(match => {\n            // check if collided with a ground\n            if (match.tile.type !== 'ground') {\n                return;\n            }\n\n            // check if the entity is going right\n            if (entity.vel.x > 0) {\n                if (entity.bounds.right > match.x1) {\n                    entity.obstructedBy(match, Entity.COLLIDE_RIGHT);\n                }\n            }\n            // else if going left\n            else if (entity.vel.x < 0) {\n                if (entity.bounds.left < match.x2) {\n                    entity.obstructedBy(match, Entity.COLLIDE_LEFT);\n                }\n            }\n        });\n    }\n\n    /**\n     * @param {Entity} entity \n     */\n    checkY(entity) {\n        let posY;\n        if (entity.vel.y === 0) {\n            // we are not moving at all - don't do any checks\n            return;\n        } else if (entity.vel.y > 0) {\n            // moving down\n            posY = entity.bounds.bottom;\n        } else {\n            // moving up\n            posY = entity.bounds.top;\n        }\n\n        const matches = this._tiles.getByRange(entity.bounds.left, entity.bounds.right,\n            posY, posY);\n\n        matches.forEach(match => {\n            // check if collided with a ground\n            if (match.tile.type !== 'ground') {\n                return;\n            }\n\n            // check if the entity is going down (falling)\n            if (entity.vel.y > 0) {\n                if (entity.bounds.bottom > match.y1) {\n                    entity.obstructedBy(match, Entity.COLLIDE_BOTTOM);\n                }\n            }\n            // else if going up (jumping)\n            else if (entity.vel.y < 0) {\n                if (entity.bounds.top < match.y2) {\n                    entity.obstructedBy(match, Entity.COLLIDE_TOP);\n                }\n            }\n        });\n    }\n}","import { Entity } from './Entity.js';\n\nexport class EntityCollider {\n    /**\n     * \n     * @param {Set<Entity>} entities \n     */\n    constructor(entities) {\n        this._entities = entities;\n    }\n\n    /**\n     * \n     * @param {Entity} entity \n     */\n    check(entity) {\n        this._entities.forEach(candidate => {\n            // skip the same entity\n            if (candidate === entity) {\n                return;\n            }\n\n            if (entity.bounds.overlaps(candidate.bounds)) {\n                // notify both entities for the collision between them\n                entity.collidedWith(candidate);\n                candidate.collidedWith(entity);\n            }\n        });\n    }\n\n}","import { LayerManager } from './LayerManager.js';\nimport { Entity } from './Entity.js';\nimport { TileCollider } from './TileCollider.js';\nimport { EntityCollider } from './EntityCollider.js';\n\nconst PROPS_DEFAULT = { gravity: 0, time: 300 };\n\nexport class Level {\n    /**\n     * \n     * @param {String} name \n     * @param {Matrix} tiles \n     * @param {Number} tileSize \n     * @param {{gravity:Number, time:Number, ...}} props \n     */\n    constructor(name, tiles, tileSize, props = {}) {\n        this.NAME = name;\n        this._tileCollider = new TileCollider(tiles, tileSize);\n        this._layerManager = new LayerManager();\n        this._entities = new Set();\n\n        this._entityCollider = new EntityCollider(this._entities);\n\n        this._props = { ...PROPS_DEFAULT, ...props };\n\n        // compute the width and height from the tiles and tileSize\n        let maxX = 0, maxY = 0;\n        tiles.forEach((x, y, tile) => {\n            maxX = Math.max(maxX, x);\n            maxY = Math.max(maxY, y);\n            tile._name == 0;\n        });\n        this._width = maxX * tileSize;\n        this._height = maxY * tileSize;\n\n        this._totalTime = 0;\n    }\n\n    /**\n     * @returns {TileCollider}\n     */\n    getTileCollider() {\n        return this._tileCollider;\n    }\n\n    /**\n     * \n     * @param {(progress: Entity)} callback \n     */\n    forEachEntity(callback) {\n        this._entities.forEach(entity => callback(entity));\n    }\n\n    /**\n     * @param {(context: CanvasRenderingContext2D, view: View) => void} layer \n     */\n    addLayer(layer) {\n        this._layerManager.add(layer);\n    }\n\n    /**\n     * @param {Entity} entity \n     */\n    addEntity(entity) {\n        this._entities.add(entity);\n    }\n\n    /**\n     * @param {Entity} entity\n     * @returns {Boolean} \n     */\n    removeEntity(entity) {\n        return this._entities.delete(entity);\n    }\n\n    /**\n     * \n     * @param {Entity} entity\n     * @returns {Boolean} \n     */\n    hasEntity(entity) {\n        return this._entities.has(entity);\n    }\n\n    getMario() {\n        return [...this._entities].find(entity => entity.NAME === 'mario');\n    }\n\n    /**\n     * \n     * @param {*} name \n     */\n    getProp(name) {\n        return this._props[name];\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getTotalTime() {\n        return this._totalTime;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getWidth() {\n        return this._width;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    getHeight() {\n        return this._height;\n    }\n\n    /**\n     * @param {Number} rate \n     */\n    update(rate) {\n        this._entities.forEach(entity => {\n            entity.update(rate, this);\n\n            // add some gravity to all entities\n            // NOTE !!! : applying the gravity SHOULD be after the tile collision check have been made\n            if (this._props.gravity) {\n                entity.vel.y += this._props.gravity * rate;\n            }\n        });\n\n        // check if entities collide with each other\n        // NOTE !!! : it SHOULD be after all entities have been passed through the first loop\n        this._entities.forEach(entity => {\n            this._entityCollider.check(entity);\n        });\n\n        // finally execute all queued tasks,\n        // in order to avoid updates in from the traits depending on the order they are registered\n        this._entities.forEach(entity => entity.finalize());\n\n        this._totalTime += rate;\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} context \n     * @param {View} view \n     */\n    draw(context, view) {\n        this._layerManager.draw(context, view);\n    }\n\n}","import * as logger from '../logger.js';\nimport { CONFIG } from '../config.js';\nimport { TileResolver } from '../TileResolver.js';\n\n/**\n * Note - this will redraw the whole level every time\n * @param {Level} level \n * @param {Matrix} tiles \n * @param {SpriteSheet} sprites\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \n */\nexport function ___createBackgroundLayer(level, tiles, tileSize, sprites) {\n    // create a static/cached background image buffer from the level's tiles\n    const buffer = document.createElement('canvas');\n    buffer.width = level.getWidth();\n    buffer.height = level.getHeight();\n    const imageContext = buffer.getContext('2d');\n\n    tiles.forEach((x, y, tile) => {\n        sprites.drawTile(tile.name, imageContext, x, y);\n    });\n\n    return function (context, view) {\n        logger.logDbg(\"Background layer\");\n        context.drawImage(buffer, -view.pos.x, -view.pos.y);\n    };\n}\n\n/**\n * OPTIMIZATION - this will draw NEW columns only when only on demand (when needed while scrolling)\n * Note - old already drawn columns are already buffered\n * Note - with this case we still have a very huge buffer (as we've set the whole level's size) \n * in memory.\n * @param {Level} level\n * @param {Matrix} tiles \n * @param {SpriteSheet} sprites\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \n */\nexport function __createBackgroundLayer(level, tiles, tileSize, sprites) {\n    const tileResolver = new TileResolver(tiles, tileSize);\n\n    // create a static/cached background image buffer from the level's tiles\n    const buffer = document.createElement('canvas');\n    buffer.width = level.getWidth();\n    buffer.height = level.getHeight();\n    const bufferContext = buffer.getContext('2d');\n\n    function redraw(indexStart, indexEnd) {\n        for (let x = indexStart; x <= indexEnd; x++) {\n            tiles.forEachInColumn(x, (x, y, tile) => {\n                sprites.drawTile(tile.name, bufferContext, x, y);\n            });\n        }\n    }\n\n    let drawnIndexEnd = 0;\n    return function (context, view) {\n        logger.logDbg(\"Background layer\");\n\n        // redraw just the needed view\n        const drawWidth = tileResolver.toIndex(view.size.x);\n        const drawIndexStart = tileResolver.toIndex(view.pos.x);\n        const drawIndexEnd = drawIndexStart + drawWidth;\n        if (drawnIndexEnd < drawIndexEnd) {\n            drawnIndexEnd = drawIndexEnd;\n            logger.logDbg(\"Background layer - draw news column up to \", drawnIndexEnd);\n            redraw(drawIndexStart, drawIndexEnd);\n        }\n\n\n        context.drawImage(buffer, -view.pos.x, -view.pos.y);\n    };\n}\n\n/**\n * OPTIMIZATION - keep a small buffer in memory - just as needed to draw the view\n * so a little wider than view's size\n * ALso - we can redraw ONLY when there's a change in view's position\n * @param {Level} level \n * @param {Matrix} tiles\n * @param {SpriteSheet} sprites\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \n */\nexport function _createBackgroundLayer(level, tiles, tileSize, sprites) {\n    const tileResolver = new TileResolver(tiles, tileSize);\n\n    // create a static/cached background image buffer from the level's tiles\n    const buffer = document.createElement('canvas');\n    buffer.width = CONFIG.VIEW_WIDTH + tileSize;\n    buffer.height = CONFIG.VIEW_HEIGHT;\n    const bufferContext = buffer.getContext('2d');\n\n\n    function redraw(indexStart, indexEnd) {\n        let hasTileAnimations = false;\n        for (let x = indexStart; x <= indexEnd; x++) {\n            tiles.forEachInColumn(x, (x, y, tile) => {\n                const tileName = tile.name;\n                if (sprites.isTileAnim(tileName)) {\n                    // animate the tile\n                    sprites.drawTileAnim(tileName, bufferContext, x - indexStart, y, level.getTotalTime());\n                    hasTileAnimations = true;\n                } else {\n                    // normal tie tile draw\n                    sprites.drawTile(tileName, bufferContext, x - indexStart, y);\n                }\n            });\n        }\n        return hasTileAnimations;\n    }\n\n    let lastIndexStart, lastIndexEnd, hasTileAnimations;\n\n    return function (context, view) {\n        logger.logDbg(\"Background layer\");\n\n        // redraw just the needed view an ONLY when needed\n        const drawWidth = tileResolver.toIndex(view.size.x);\n        const drawIndexStart = tileResolver.toIndex(view.pos.x);\n        const drawIndexEnd = drawIndexStart + drawWidth;\n\n        // redraw if there are animations or view's positions has changed\n        if (hasTileAnimations ||\n            (lastIndexStart !== drawIndexStart && lastIndexEnd !== drawIndexEnd)) {\n            logger.logDbg(\"Background layer redrawing\");\n            hasTileAnimations = redraw(drawIndexStart, drawIndexEnd);\n            lastIndexStart = drawIndexStart;\n            lastIndexEnd = drawIndexEnd;\n        }\n\n        context.drawImage(buffer, -view.pos.x % tileSize, -view.pos.y);\n    };\n}\n\n/**\n * OPTIMIZATION - keep a small buffer in memory - just as needed to draw the view\n * so a little wider than view's size\n * ALso - we can redraw ONLY when there's a change in view's position\n * @param {Level} level \n * @param {Matrix} tiles\n * @param {SpriteSheet} sprites\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \n */\nexport function createBackgroundLayer(level, tiles, tileSize, sprites) {\n    const tileResolver = new TileResolver(tiles, tileSize);\n\n    // create a static/cached background image buffer from the level's tiles\n    const buffer = document.createElement('canvas');\n    buffer.width = CONFIG.VIEW_WIDTH + tileSize;\n    buffer.height = CONFIG.VIEW_HEIGHT;\n    const bufferContext = buffer.getContext('2d');\n\n\n    function redraw(indexStart, indexEnd) {\n        bufferContext.clearRect(0, 0, buffer.width, buffer.height);\n        for (let x = indexStart; x <= indexEnd; x++) {\n            tiles.forEachInColumn(x, (x, y, tile) => {\n                const tileName = tile.name;\n                if (sprites.isTileAnim(tileName)) {\n                    // animate the tile\n                    sprites.drawTileAnim(tileName, bufferContext, x - indexStart, y, level.getTotalTime());\n                } else {\n                    // normal tie tile draw\n                    sprites.drawTile(tileName, bufferContext, x - indexStart, y);\n                }\n            });\n        }\n    }\n\n    return function (context, view) {\n        logger.logDbg(\"Background layer\");\n\n        // redraw just the needed view an ONLY when needed\n        const drawWidth = tileResolver.toIndex(view.size.x);\n        const drawIndexStart = tileResolver.toIndex(view.pos.x);\n        const drawIndexEnd = drawIndexStart + drawWidth;\n\n        logger.logDbg(\"Background layer redrawing\");\n        redraw(drawIndexStart, drawIndexEnd);\n\n        context.drawImage(buffer, -view.pos.x % tileSize, -view.pos.y);\n    };\n}","import * as logger from '../logger.js';\n\n/**\n * @param {Level} level \n * @param {Number} maxEntityWidth \n * @param {Number} maxEntityHeight\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \n */\nexport function createEntitiesLayer(level, maxEntityWidth = 64, maxEntityHeight = 64) {\n    // create a middle image buffer in which each entity will be drawn first\n    const buffer = document.createElement('canvas');\n    buffer.width = maxEntityWidth;\n    buffer.height = maxEntityHeight;\n    const bufferContext = buffer.getContext('2d');\n\n    return function (context, view) {\n        logger.logDbg(\"Entities layer\");\n\n        const { x, y } = view.pos;\n        level.forEachEntity(entity => {\n            // draw the entity tile in the buffer image after it's been cleared\n            bufferContext.clearRect(0, 0, maxEntityWidth, maxEntityHeight);\n            entity.draw(bufferContext, level);\n\n            // draw the buffer image in the main canvas\n            context.drawImage(buffer, entity.pos.x - x, entity.pos.y - y);\n        });\n    };\n}","export function loadImage(name) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.addEventListener('load', () => resolve(image));\n        image.addEventListener('error', () => reject(image));\n        image.src = name;\n    });\n}\n\nconst loadJson = (url) => {\n    return fetch(url).then(r => r.json());\n};\n\nexport function loadDataLevel(name) {\n    return loadData(`levels/${name}`);\n}\n\nexport function loadData(name) {\n    return loadJson(`data/${name}.json`);\n}","import * as logger from './logger.js';\n\nexport class SpriteSheet {\n\n    constructor(image, mirrored = false, tileWidth, tileHeight) {\n        this._image = image;\n        this._tileWidth = tileWidth;\n        this._tileHeight = tileHeight;\n        this._mirrored = mirrored;\n\n        this._tiles = new Map();\n        this._animations = new Map();\n    }\n\n    register(tile, x, y, width, height) {\n        const mirrors = this._mirrored ? [false, true] : [false];\n\n        const tileImages = mirrors.map(mirrored => {\n            const tileImage = document.createElement('canvas');\n            width = width || this._tileWidth;\n            height = height || this._tileHeight;\n            tileImage.width = width;\n            tileImage.height = height;\n\n            const tileImageCtx = tileImage.getContext('2d');\n\n            // flip the image\n            if (mirrored) {\n                tileImageCtx.scale(-1, 1);\n                tileImageCtx.translate(-width, 0);\n            }\n\n            tileImageCtx.drawImage(this._image,\n                x, y,\n                width, height,\n                0, 0,\n                width, height);\n            return tileImage;\n        });\n\n        if (this._mirrored) {\n            // if mirrored then register both tile images as a coupl\n            this._tiles.set(tile, tileImages);\n        } else {\n            // if not mirrored then register the single tile image\n            this._tiles.set(tile, tileImages[0]);\n        }\n    }\n\n    registerTile(tile, indexX, indexY) {\n        this.register(tile, indexX * this._tileWidth, indexY * this._tileHeight);\n    }\n\n    registerAnimation(tile, animation) {\n        this._animations.set(tile, animation);\n    }\n\n    /**\n     * @param {(animation:Function, name:String)=>void} callback \n     */\n    forEachAnimation(callback) {\n        this._animations.forEach(callback);\n    }\n\n    draw(tile, context, x, y, mirrored = false) {\n        const tileImage = this._tiles.get(tile);\n        if (tileImage) {\n            let image = tileImage;\n            if (this._mirrored) {\n                // if sprites is mirror this means that 2 image tiles are registered for each name\n                // so we have to draw the desired one\n                image = tileImage[mirrored ? 1 : 0];\n            }\n            context.drawImage(image, x, y);\n\n            return [image.width, image.height];\n        }\n        \n        logger.logWarn(`No tile set for ${tile}`);\n        return [0, 0];\n    }\n\n    drawTile(tile, context, indexX, indexY, mirrored) {\n        this.draw(tile, context, indexX * this._tileWidth, indexY * this._tileHeight, mirrored);\n    }\n\n    drawTileAnim(tile, context, indexX, indexY, progress, mirrored) {\n        const animation = this._animations.get(tile);\n        if (animation) {\n            tile = animation(progress);\n        } else {\n            logger.logWarn(`No animation set for ${tile}`);\n        }\n        this.draw(tile, context, indexX * this._tileWidth, indexY * this._tileHeight, mirrored);\n    }\n\n    isTileAnim(tile) {\n        return this._animations.has(tile);\n    }\n\n}\n\n","export function createAnimation(frames, frameRate = 5) {\n    // the frameRate is used to reduce the 'progress' if needed as otherwise the frames\n    // will be changing too fast\n\n    if (frames instanceof Array) {\n        // progress - this has various meanings depending on the context\n        // it could be distance when walking\n        // or simple time (seconds)\n        return function (progress) {\n            const frameIndex = Math.floor(progress / frameRate) % frames.length;\n            return frames[frameIndex];\n        };\n    }\n\n    // if just a single frame specified then return a \"fixed\" function\n    return function (/*progress*/) {\n        return frames;\n    };\n\n}","import { SpriteSheet } from '../SpriteSheet.js';\nimport { loadImage, loadData } from './utils.js';\nimport { createAnimation } from '../animation.js';\n\n/**\n * @param {String} name \n * @param {Boolean} mirrored\n * @returns {Promise<SpriteSheet>}\n */\nexport function loadSprites(name, mirrored = false) {\n    return loadData(`sprites/${name}`).\n        then(spritesSpec => Promise.all([spritesSpec, loadImage(spritesSpec.spritesURL)])).\n        then(([spritesSpec, spritesImage]) => {\n            const sprites = new SpriteSheet(spritesImage, mirrored,\n                spritesSpec.tileWidth, spritesSpec.tileHeight);\n\n            spritesSpec.tiles.forEach(tileSpec => {\n                // the specific tile's width and height are optional in the tileSpec\n                // if missing then the global spritesSpec.tileWidth/spritesSpec.tileHeight will be used\n\n                // a tile can be specified by index (when sprite is with fixed size grid)\n                // or by pos and size (optional)\n                const { name, index } = tileSpec;\n\n                if (index) {\n                    const [indexX, indexY] = index;\n                    sprites.registerTile(name, indexX, indexY);\n                } else {\n                    // pos is obligatory then, but size is again optional\n                    const [x, y] = tileSpec.pos;\n\n                    let width, height;\n                    if (tileSpec.size) {\n                        width = tileSpec.size[0];\n                        height = tileSpec.size[1];\n                    }\n                    sprites.register(name, x, y, width, height);\n                }\n\n\n            });\n\n            // if defined animations for any tile\n            if (spritesSpec.animations) {\n                spritesSpec.animations.forEach(animSpec => {\n                    const animation = createAnimation(animSpec.frames, animSpec.frameRate);\n                    sprites.registerAnimation(animSpec.name, animation);\n                });\n            }\n\n            return sprites;\n        });\n}","import * as logger from '../logger.js';\nimport { Tile } from '../Tile.js';\nimport { Level } from '../Level.js';\nimport { Matrix } from '../math.js';\nimport { createBackgroundLayer } from '../layers/background.js';\nimport { createEntitiesLayer } from '../layers/entities.js';\nimport { loadDataLevel } from './utils.js';\nimport { loadSprites } from './sprites.js';\n\nfunction* expandSpan(xStart, xLen, yStart, yLen) {\n    const xEnd = xStart + xLen;\n    const yEnd = yStart + yLen;\n    for (let x = xStart; x < xEnd; ++x) {\n        for (let y = yStart; y < yEnd; ++y) {\n            yield { x, y };\n        }\n    }\n}\n\nfunction expandRange(range) {\n    if (range.length === 4) {\n        const [xStart, xLen, yStart, yLen] = range;\n        return expandSpan(xStart, xLen, yStart, yLen);\n\n    } else if (range.length === 3) {\n        const [xStart, xLen, yStart] = range;\n        return expandSpan(xStart, xLen, yStart, 1);\n\n    } else if (range.length === 2) {\n        const [xStart, yStart] = range;\n        return expandSpan(xStart, 1, yStart, 1);\n    }\n    throw new Error(`Unsupported range params length ${range.length}`);\n}\n\nfunction* expandRanges(ranges) {\n    // for (const range of ranges) {\n    //     for (const item of expandRange(range)) {\n    //         yield item;\n    //     }\n    // }\n\n    // this is the same but with Yield Delegation construct\n    for (const range of ranges) {\n        yield* expandRange(range);\n    }\n}\n\n\nfunction* expandTiles(tiles, patterns) {\n\n    function* walkTiles(tiles, offsetX, offsetY) {\n        for (const tile of tiles) {\n            for (const { x, y } of expandRanges(tile.ranges)) {\n                // take in mind the 'offset'\n                const realX = x + offsetX;\n                const realY = y + offsetY;\n\n                // check if want to draw a pattern (a block of predefined tiles)\n                // e.g. like \"little\" backgrounds over the main\n                const patternName = tile.pattern;\n                if (patternName) {\n                    const patternSpec = patterns[patternName];\n                    if (patternSpec) {\n                        // Note - patterns can have patterns - e.g. recursion\n                        yield* walkTiles(patternSpec.tiles, realX, realY);\n                    } else {\n                        logger.logWarn(`No pattern defined with name ${patternName}`);\n                    }\n                } else {\n                    yield {\n                        x: realX, y: realY, tile: new Tile(tile)\n                    };\n                }\n            }\n        }\n    }\n\n    yield* walkTiles(tiles, 0, 0);\n}\n\nfunction createGrid(tiles, patterns) {\n    const grid = new Matrix();\n    for (const { x, y, tile } of expandTiles(tiles, patterns)) {\n        grid.set(x, y, tile);\n    }\n\n    return grid;\n}\n\n\n// in order to get the 'entityFactory' from main.js will wrap 'loadLevel' in\n// another function that creates it\nexport function createLoadLevel(entityFactory) {\n    // now this entityFactory has multiple factory functions can be called multiple times\n    // e.g. : entityFactory = {mario, goomba, koopa, ... }\n\n\n    /**\n     * @param {String} name \n     * @returns {Promise<Level>}\n     */\n    function loadLevel(name) {\n        return loadDataLevel(name).\n            then(levelSpec => Promise.all([levelSpec, loadSprites(levelSpec.sprites)])).\n            then(([levelSpec, backgroundSprites]) => {\n                // parse the level's background tiles, entities and other props\n                const { layers, patterns, entities, props } = levelSpec;\n\n                // TODO: tileSize should be get from the backgroundSprites.getWidth()/getHeight()\n                const tileSize = 16;\n\n                // create the main collision grid\n                const mergedTiles = layers.reduce((mergedTiles, layerSpec) => {\n                    return mergedTiles.concat(layerSpec.tiles);\n                }, []);\n                const grid = createGrid(mergedTiles, patterns);\n\n                // create the level\n                const level = new Level(name, grid, tileSize, props);\n\n                // create all background layers - the drawing ones\n                layers.forEach(layerSpec => {\n                    const tiles = createGrid(layerSpec.tiles, patterns);\n                    level.addLayer(createBackgroundLayer(level, tiles, tileSize, backgroundSprites));\n                });\n\n\n                // attach entities to the Level\n                // Note that Mario will be additionally attached in 'main.js'\n                entities.forEach(entitySpec => {\n                    const { name, pos: [x, y] } = entitySpec;\n                    const createEntity = entityFactory[name];\n                    const entity = createEntity();\n                    level.addEntity(entity);\n                    entity.pos.set(x, y);\n                });\n\n                // create and add the entity layer\n                level.addLayer(createEntitiesLayer(level));\n\n                return level;\n            });\n    }\n    return loadLevel;\n}","import { Tile } from './Tile.js';\n\nexport class Trait {\n    constructor(name, isBehavior = false) {\n        this.NAME = name;\n        this._isBehavior = isBehavior;\n        this._queuedTasks = [];\n    }\n\n    finalize() {\n        // perform each queued tasks\n        this._queuedTasks.forEach(task => task());\n        this._queuedTasks.length = 0;\n    }\n\n    /**\n     * Queue up a task to be executed when the {@see finalize} method is called\n     * @param {Function} task \n     */\n    queueTask(task) {\n        this._queuedTasks.push(task);\n    }\n\n    /**\n     * \n     * @param {Entity} entity \n     * @param {Number} rate\n     * @param {Level} level \n     */\n    // eslint-disable-next-line no-unused-vars\n    update(entity, rate, level) {\n        if (!this._isBehavior) {\n            throw new Error(\"Abstract method 'update' is not implemented\");\n        }\n    }\n\n    /**\n     * \n     * @param {Entity} entity \n     * @param {Map<name:String, (progress: Number)>} animations \n     * @param {Number} levelTotalTime \n     */\n    // should return an object { tile, mirrored }\n    // with the next frame/tile name to be drawn, and whether or not it's mirrored in the sprites\n    // eslint-disable-next-line no-unused-vars\n    animate(entity, animations, levelTotalTime) {\n        if (!this._isBehavior) {\n            throw new Error(\"Abstract method 'animate' is not implemented\");\n        }\n    }\n\n    /**\n     * \n     * @param {Entity} entity \n     * @param {{tile:Tile, x1:Number, x2:Number, y1:Number, y2:Number}} obstacle \n     * @param {Number} direction \n     */\n    // eslint-disable-next-line no-unused-vars\n    obstructed(entity, obstacle, direction) {\n        // keep empty , inheritors may overwrite it they need to\n    }\n\n    /**\n     * \n     * @param {Entity} entity \n     * @param {Entity} otherEntity \n     */\n    // eslint-disable-next-line no-unused-vars\n    collided(entity, otherEntity) {\n        // keep empty , inheritors may overwrite it they need to\n    }\n}","import { Trait } from '../Trait.js';\n\nconst DRAG_FACTOR_NORMAL = 1 / 1000;\nconst DRAG_FACTOR_TURBO = 1 / 5000;\n\nexport class WalkTrait extends Trait {\n    constructor(accelerate = true) {\n        super('walk');\n\n        this._accelerate = accelerate;\n\n        this._direction = 0;\n\n        // used if WalkTrait.IS_ACCELERATING is false\n        this._velocity = 100;\n\n        // used if WalkTrait.IS_ACCELERATING is true\n        this._acceleration = 400;\n        this._deacceleration = 300;\n        this._dragFactor = DRAG_FACTOR_NORMAL;\n\n        // the distance \"walked\" when in single \"walking\" phase\n        this._distance = 0;\n\n        // by default let the heading (last direction) be right\n        this._heading = 1;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get direction() {\n        return this._direction;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get distance() {\n        return this._distance;\n    }\n\n    /**\n     * The direction to where the entity is heading - \"left or right\" of course\n     * @returns {Number}\n     */\n    get heading() {\n        return this._heading;\n    }\n\n    /**\n     * Starts or stops moving left\n     * @param {boolean} startAction \n     */\n    left(startAction) {\n        this._direction += startAction ? -1 : 1;\n    }\n\n    /**\n     * Starts or stops moving right\n     * @param {boolean} startAction \n     */\n    right(startAction) {\n        this._direction += startAction ? 1 : -1;\n    }\n\n    /**\n     * Starts or stops \"turbo\" (faster running)\n     * @param {boolean} startAction \n     */\n    turbo(startAction) {\n        this._dragFactor = startAction ? DRAG_FACTOR_TURBO : DRAG_FACTOR_NORMAL;\n    }\n\n    /**\n     * @param {Entity} entity\n     * @param {Number} rate\n     * @param {Level} level  \n     */\n    update(entity, rate) {\n        // update just the 'x' coordinate of the velocity/acceleration\n        if (this._accelerate) {\n            this._updateAcceleration(entity, rate);\n        } else {\n            this._updateConstantVelocity(entity, rate);\n        }\n    }\n\n    _updateConstantVelocity(entity, rate) {\n        // this will be with static velocity\n        entity.vel.x = this._direction * this._velocity;\n\n        if (this._direction !== 0) {\n            // measure the distance \"walked\" after the last stop\n            this._distance += Math.abs(entity.vel.x) * rate;\n            // also remember where the entity is heading last\n            this._heading = this._direction;\n        } else {\n            this._distance = 0;\n        }\n    }\n\n    _updateAcceleration(entity, rate) {\n        if (this._direction !== 0) {\n            // this will be with incrementing speed - e.g. accelerating\n            entity.vel.x += this._direction * (this._acceleration * rate);\n\n            // also remember where the entity is heading last\n            // but don't allow to turn while jumping\n            if (!entity.jump || !entity.jump.falling) {\n                // check if there's Jump trait also\n                this._heading = this._direction;\n            }\n        } else if (entity.vel.x !== 0) {\n            // if stopped walking (e.g. this._direction is 0)\n            // but it's still moving because of the acceleration\n            // then apply some DEacceleration that will stop him completely\n\n            // this will in fact speed up the drag\n            const deaccel = Math.min(Math.abs(entity.vel.x), this._deacceleration * rate);\n            entity.vel.x -= entity.vel.x > 0 ? deaccel : -deaccel;\n        } else {\n            this._distance = 0;\n        }\n\n        if (entity.vel.x !== 0) {\n            // this will add some drag - the higher the velocity the greater the drag\n            // it will be always with the opposite sign (+/- ) the velocity, so we'll be always\n            // subtracting from the velocity - so real drag\n\n            // note - put the drag \n            // 1. while moving (e.g a slowing little by little and thus applying a max speed)\n            // 2. even if stopped walking (e.g. this._direction is 0) - this will allow to \"slide\" a little as it has some inercia \n            const drag = this._dragFactor * entity.vel.x * Math.abs(entity.vel.x);\n            entity.vel.x -= drag;\n        }\n\n        // measure the distance \"walked\" after the last stop\n        this._distance += Math.abs(entity.vel.x) * rate;\n    }\n\n    /**\n     * @param {Entity} entity \n     * @param {(progress: Number)} animation\n     * @param {Number} levelTotalTime \n     */\n    animate(entity, animations, levelTotalTime) {\n        let tile;\n        if (this.distance > 0) {\n            if ((entity.vel.x > 0 && this.direction < 0) ||\n                (entity.vel.x < 0 && this.direction > 0)) {\n                // when \"breaking\" - e.g. changing the direction\n\n                // use the 'break' animation\n                const animation = animations.get('break');\n                if (animation) {\n                    tile = animation(levelTotalTime);\n                }\n            } else {\n                // use main animation - it for sure exists\n                const animation = animations.get(this.NAME);\n                tile = animation(this.distance);\n            }\n        }\n        const mirrored = this.heading < 0;\n\n        return { tile, mirrored };\n\n    }\n\n}","import { Trait } from '../Trait.js';\nimport { Entity } from '../Entity.js';\n\nexport class JumpTrait extends Trait {\n    constructor() {\n        super('jump');\n\n        this._duration = 0.3;\n        this._velocity = 200;\n        this._engagedTime = 0;\n\n        // state to indicate whether we can jump - it can only from when touched a 'ground'\n        // this means that there will be needed a 2 step-update in order to animate\n        this._ready = 0;\n\n        // allow a grace time in which we can jump, e.g.\n        // next jump can occur while falling and start\n        // is pressed when very close to the ground (allow a grace period)\n        this._requestTime = 0;\n        this._gracePeriod = 0.2; // seconds\n\n        // the faster we walk/run the higher the jump\n        this._speedBoost = 0.3;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    get falling() {\n        return this._ready < 0;\n    }\n\n    start() {\n        this._requestTime = this._gracePeriod;\n    }\n\n    cancel() {\n        this._engagedTime = 0;\n        this._requestTime = 0;\n    }\n\n    /**\n     * @param {Entity} entity\n     * @param {Number} rate\n     * @param {Level} level  \n     */\n    update(entity, rate) {\n        // check if we've pressed to 'start'\n        // then we'll start to look for an opportunaty to jump\n        if (this._requestTime > 0) {\n            if (this._ready > 0) {\n                this._engagedTime = this._duration;\n                this._requestTime = 0;\n            } else {\n                this._requestTime -= rate;\n            }\n        }\n\n        if (this._engagedTime > 0) {\n            // update just the 'y' coordinate\n            // the faster we run the more speed we gain and thus higher jump\n            entity.vel.y = -(this._velocity + Math.abs(entity.vel.x) * this._speedBoost);\n            this._engagedTime -= rate;\n        }\n\n        this._ready--;\n    }\n\n    obstructed(entity, obstacle, direction) {\n        switch (direction) {\n            case Entity.COLLIDE_BOTTOM:\n                // make ready to jump\n                this._ready = 1;\n                break;\n            case Entity.COLLIDE_TOP:\n                // stop the jumping \n                this.cancel();\n                break;\n        }\n    }\n\n    /**\n     * @param {Entity} entity \n     * @param {Map<name:String, (progress: Number)>} animations\n     * @param {Number} levelTotalTime \n     */\n    animate(entity, animations, levelTotalTime) {\n        let tile;\n\n        // catch the case when jumping\n        if (this.falling) {\n            // get the main animation - it for sure exists\n            const animation = animations.get(this.NAME);\n            tile = animation(levelTotalTime);\n        }\n\n        return { tile };\n    }\n}","import { Trait } from '../Trait.js';\nimport { Entity } from '../Entity.js';\n\nexport class BePhysicsTrait extends Trait {\n    constructor(gravity = 1500) {\n        super('physics');\n\n        this._gravity = gravity;\n        this._enabled = true;\n    }\n\n    disable() {\n        this._enabled = false;\n    }\n\n    /**\n     * @param {Entity} entity\n     * @param {Number} rate\n     * @param {Level} level  \n     */\n    update(entity, rate, level) {\n        // NOTE !!! : the x an y positions SHOULD be updated separately\n        // before checking for collisions \n        entity.pos.x += entity.vel.x * rate;\n        level.getTileCollider().checkX(entity);\n\n        entity.pos.y += entity.vel.y * rate;\n        level.getTileCollider().checkY(entity);\n\n        if (this._gravity) {\n            // NOTE !!! : applying the gravity SHOULD be after the tile collision check have been made\n            entity.vel.y += this._gravity * rate;\n        }\n    }\n\n}","import { Trait } from '../Trait.js';\nimport { Entity } from '../Entity.js';\n\nexport class BeSolidTrait extends Trait {\n    constructor() {\n        super('solid', true);\n\n        this._enabled = true;\n    }\n\n    disable() {\n        this._enabled = false;\n    }\n\n    obstructed(entity, obstacle, direction) {\n        if (!this._enabled) {\n            return;\n        }\n\n        switch (direction) {\n            case Entity.COLLIDE_BOTTOM:\n                entity.bounds.bottom = obstacle.y1;\n                entity.vel.y = 0;\n                break;\n            case Entity.COLLIDE_TOP:\n                entity.bounds.top = obstacle.y2;\n                entity.vel.y = 0;\n                break;\n            case Entity.COLLIDE_RIGHT:\n                entity.bounds.right = obstacle.x1;\n                entity.vel.x = 0;\n                break;\n            case Entity.COLLIDE_LEFT:\n                entity.bounds.left = obstacle.x2;\n                entity.vel.x = 0;\n                break;\n        }\n    }\n\n}","import { Trait } from '../Trait.js';\n\nexport class BeStomperTrait extends Trait {\n    constructor() {\n        super('stomper', true);\n\n        this._bounceVelocity = 400;\n\n        /**\n         * @param {Function[]}\n         */\n        this._stompListeners = [];\n    }\n\n    /**\n     * \n     * @param {Function} callback \n     */\n    addListener(callback) {\n        this._stompListeners.push(callback);\n    }\n\n    /**\n     * @param {Entity} us \n     * @param {Entity} otherEntity \n     */\n    collided(us, otherEntity) {\n        if (!otherEntity.killable || otherEntity.killable.dead) {\n            return;\n        }\n\n        if (us.pos.y < otherEntity.pos.y) {\n            this.onStomp(us, otherEntity);\n            this._stompListeners.forEach(callback => callback(us, otherEntity));\n        }\n    }\n\n    /**\n     * @param {Entity} us \n     * @param {Entity} otherEntity \n     */\n    onStomp(us, otherEntity) {\n        // go to the top of the other entity, not to collide agin with it on the next check\n        us.bounds.bottom = otherEntity.bounds.top;\n\n        // make the stomper bounce\n        us.vel.y = -this._bounceVelocity;\n    }\n\n}","import { Trait } from '../Trait.js';\n\nexport class BeKillableTrait extends Trait {\n    /**\n     * \n     * @param {Number} deadTimeRemove 2 seconds by default\n     */\n    constructor(deadTimeRemove = 2) {\n        super('killable', true);\n        this._dead = false;\n        this._deadTimeRemove = deadTimeRemove;\n\n        this._deadTime = 0;\n    }\n\n    get dead() {\n        return this._dead;\n    }\n\n    kill() {\n        this.queueTask(() => { \n            this._dead = true; \n        });\n    }\n\n    revive() {\n        this.queueTask(() => {\n            this._dead = false;\n            this._deadTime = 0;\n        });\n    }\n\n    /**\n     * @param {Entity} entity\n     * @param {Number} rate\n     * @param {Level} level  \n     */\n    update(entity, rate, level) {\n        // keep the entity for a while and then remove it from the level\n        if (this._dead) {\n            this._deadTime += rate;\n\n            if (this._deadTime >= this._deadTimeRemove) {\n                this.queueTask(() => {\n                    level.removeEntity(entity);\n                });\n            }\n        }\n    }\n\n}","/**\n * Common utility function that will be used when creating each entity.\n * It creates a 'draw' method that will be attached to each entity.\n * @param {SpriteSheet} sprites \n * @param {String} defaultTile \n */\nexport function createDraw(sprites, defaultTile) {\n\n    // the real draw function that will bve attached the entities\n    return function draw(context, level) {\n        const { tile, mirrored } = this.animate(level);\n        // if no tile to animate then draw the default \"idle\" one,\n        // tileSize is array with [width, height]\n        const tileSize = sprites.draw(tile || defaultTile, context, 0, 0, mirrored);\n\n        // TODO: The drawn tile size is not necessary the \"real\" size of the entity\n        // set the size of the entity to the size of the real drawn tile\n        // this.size.set(...tileSize);\n    };\n\n}","import { Entity } from '../Entity.js';\nimport { WalkTrait as Walk } from '../traits/Walk.js';\nimport { JumpTrait as Jump } from '../traits/Jump.js';\nimport { BePhysicsTrait as BePhysics } from '../traits/BePhysics.js';\nimport { BeSolidTrait as BeSolid } from '../traits/BeSolid.js';\nimport { BeStomperTrait as BeStomper } from '../traits/BeStomper.js';\nimport { BeKillableTrait as BeKillable } from '../traits/BeKillable.js';\nimport { loadSprites } from '../loaders/sprites.js';\nimport { createDraw } from './utils.js';\n\n// loadMario() will be async\nexport function loadMario() {\n    return loadSprites('mario', true).\n        then(createMarioFactory);\n}\n\n/**\n * return a synchronous create function\n * @param {SpriteSheet} sprites \n */\nfunction createMarioFactory(sprites) {\n    // moved all the support/stateless functionality out of the createMario scope\n    // as they are needed to be created only ones \n\n    // create the draw method - common/static/stateless for all Goomba entities\n    const draw = createDraw(sprites, 'idle');\n\n    // createMario() will be synchronous\n    return function mario() {\n        const entity = new Entity('mario');\n        entity.size.set(14, 16);\n\n        entity.registerTrait(new BePhysics());\n        entity.registerTrait(new BeSolid());\n        entity.registerTrait(new BeStomper());\n        entity.registerTrait(new BeKillable(0));\n        entity.registerTrait(new Walk());\n        entity.registerTrait(new Jump());\n\n        entity.registerAnimationsFromSprites(sprites);\n\n        entity.draw = draw;\n\n        return entity;\n    };\n}","import { Trait } from '../Trait.js';\nimport { Entity } from '../Entity.js';\n\nexport class WanderTrait extends Trait {\n    constructor(velocity = -30, panicVelocity = 90) {\n        super('wander');\n        if (velocity === 0) {\n            throw new Error('Cannot have wander trait with 0 velocity');\n        }\n\n        this._paused = false;\n\n        this._velocity = velocity;\n        this._panicVelocity = Math.abs(panicVelocity); // prevent if passed negative number\n\n        // the distance \"walked\" when in single \"walking\" phase\n        this._distance = 0;\n    }\n\n    /**\n    * @returns {Number}\n    */\n    get velocity() {\n        return this._velocity;\n    }\n\n    /**\n     * @param {Number} velocity\n     */\n    set velocity(velocity) {\n        this._velocity = velocity;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get distance() {\n        return this._distance;\n    }\n\n    /**\n     * @param {Boolean} paused \n     */\n    pause(paused = true) {\n        this._paused = paused;\n    }\n\n    /**\n     * @param {Entity} entity\n     * @param {Number} rate\n     * @param {Level} level  \n     */\n    update(entity, rate) {\n        if (this._paused) {\n            return;\n        }\n\n        // update just the 'x' coordinate of the velocity\n        entity.vel.x = this._velocity;\n\n        // measure the distance \"walked\" after the last stop\n        this._distance += Math.abs(entity.vel.x) * rate;\n    }\n\n    /**\n     * @param {Entity} entity \n     * @param {(progress: Number)} animation\n     */\n    animate(entity, animations) {\n        let tile;\n        if (this.distance > 0) {\n            // use main animation - it for sure exists\n            const animation = animations.get(this.NAME);\n            tile = animation(entity.lifetime);\n        }\n\n        return { tile, mirrored: entity.vel.x < 0 };\n    }\n\n    obstructed(entity, obstacle, direction) {\n        switch (direction) {\n            case Entity.COLLIDE_LEFT:\n            case Entity.COLLIDE_RIGHT:\n                this._distance = 0;\n                this._velocity = -this._velocity;\n                break;\n        }\n    }\n}","import { Entity } from '../Entity.js';\nimport { Trait } from '../Trait.js';\nimport { WanderTrait as Wander } from '../traits/Wander.js';\nimport { BePhysicsTrait as BePhysics } from '../traits/BePhysics.js';\nimport { BeSolidTrait as BeSolid } from '../traits/BeSolid.js';\nimport { BeKillableTrait as BeKillable } from '../traits/BeKillable.js';\nimport { loadSprites } from '../loaders/sprites.js';\nimport { createDraw } from './utils.js';\n\nexport function loadGoomba() {\n    return loadSprites('goomba', true).\n        then(createGoombaFactory);\n}\n\n\n/**\n * return a synchronous create function\n * @param {SpriteSheet} sprites \n */\nfunction createGoombaFactory(sprites) {\n\n    // create the draw method - common/static/stateless for all Goomba entities\n    const defDraw = createDraw(sprites, 'walk-1');\n    const draw = function (context, level) {\n        if (this.killable.dead) {\n            sprites.draw('flat', context, 0, 0);\n            return;\n        }\n        defDraw.call(this, context, level);\n    };\n\n    return function goomba() {\n        const entity = new Entity('goomba');\n        entity.size.set(16, 16);\n\n        entity.registerTrait(new Behavior());\n        entity.registerTrait(new BePhysics());\n        entity.registerTrait(new BeSolid());\n        entity.registerTrait(new BeKillable());\n        entity.registerTrait(new Wander());\n\n        entity.registerAnimationsFromSprites(sprites);\n\n        entity.draw = draw;\n\n        return entity;\n    };\n}\n\nclass Behavior extends Trait {\n    constructor() {\n        super('behavior', true);\n    }\n\n    collided(goomba, otherEntity) {\n        if (goomba.killable.dead) {\n            // we are already dead - don't interact again on next collisions\n            return;\n        }\n\n        // don't check if the other entity is 'Mario'\n        // but if the other entity has a special feature,\n        // in this case for a trait named 'stomper'\n        if (otherEntity.stomper) {\n            // Goomba is killed only if the stomper (like Mario) is falling on it\n            if (otherEntity.pos.y < goomba.pos.y) {\n                // make us stop moving\n                goomba.vel.x = 0;\n                goomba.wander.pause();\n\n                // make us killed\n                goomba.killable.kill();\n            } else {\n                // make the stomper killed\n                if (otherEntity.killable) {\n                    otherEntity.killable.kill();\n                }\n            }\n        }\n    }\n\n}","import { Entity } from '../Entity.js';\nimport { Trait } from '../Trait.js';\nimport { WanderTrait as Wander } from '../traits/Wander.js';\nimport { BePhysicsTrait as BePhysics } from '../traits/BePhysics.js';\nimport { BeSolidTrait as BeSolid } from '../traits/BeSolid.js';\nimport { BeKillableTrait as BeKillable } from '../traits/BeKillable.js';\nimport { loadSprites } from '../loaders/sprites.js';\nimport { createDraw } from './utils.js';\n\nexport function loadKoopa() {\n    return loadSprites('koopa', true).\n        then(createKoopaFactory);\n}\n\n/**\n * return a synchronous create function\n * @param {SpriteSheet} sprites \n */\nfunction createKoopaFactory(sprites) {\n\n    // create the draw method - common/static/stateless for all Koopa entities\n    const draw = createDraw(sprites, 'walk-1');\n\n    return function koopa() {\n        const entity = new Entity('koopa');\n        entity.size.set(16, 16);\n        entity.offset.y = 8;\n\n        entity.registerTrait(new Behavior());\n        entity.registerTrait(new BePhysics());\n        entity.registerTrait(new BeSolid());\n        entity.registerTrait(new BeKillable());\n        entity.registerTrait(new Wander(30));\n\n        entity.registerAnimationsFromSprites(sprites);\n\n        entity.draw = draw;\n\n        return entity;\n    };\n}\n\nconst STATE_WALKING = Symbol();\nconst STATE_HIDING = Symbol();\nconst STATE_PANICING = Symbol();\n\nclass Behavior extends Trait {\n    constructor() {\n        super('behavior', true);\n\n        this._unhideTime = 5;\n        this._hidingTime = 0;\n\n        this._panicVelocity = 300;\n        this._wanderVelocity = null;\n\n        this._state = STATE_WALKING;\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    get hiding() {\n        return this._state === STATE_HIDING ||\n            this._state === STATE_PANICING;\n    }\n\n    _hide(koopa) {\n        koopa.vel.x = 0;\n        koopa.wander.pause();\n        if (this._wanderVelocity === null) {\n            this._wanderVelocity = koopa.wander.velocity;\n        }\n\n        this._state = STATE_HIDING;\n        this._hidingTime = 0;\n    }\n\n    _unhide(koopa) {\n        koopa.wander.pause(false);\n        if (this._wanderVelocity !== null) {\n            koopa.wander.velocity = this._wanderVelocity;\n        }\n        this._state = STATE_WALKING;\n    }\n\n    _handleStopm(koopa, otherEntity) {\n        if (this._state === STATE_WALKING ||\n            this._state === STATE_PANICING) {\n            // make us hide\n            this._hide(koopa);\n        } else {\n            // make us killed\n            koopa.killable.kill();\n            // make it not 'collidable'\n            koopa.solid.disable();\n            // make the koopa's shell bounce up a little and continue\n            koopa.wander.pause(false);\n            koopa.vel.y = -200;\n        }\n    }\n\n    _handleNudge(koopa, otherEntity) {\n        if (this._state === STATE_WALKING) {\n            // make the stomper killed\n            if (otherEntity.killable) {\n                otherEntity.killable.kill();\n            }\n        } else if (this._state === STATE_HIDING) {\n            // make the stomper kick the koopa's shell\n            koopa.wander.velocity = this._panicVelocity * Math.sign(otherEntity.vel.x);\n            koopa.wander.pause(false);\n            this._state = STATE_PANICING;\n        } else {\n            // TODO: kill the stomper only if not in the same direction\n            if (otherEntity.killable) {\n                otherEntity.killable.kill();\n            }\n        }\n    }\n\n    collided(koopa, otherEntity) {\n        if (koopa.killable.dead) {\n            // we are already dead - don't interact again on next collisions\n            return;\n        }\n\n        if (otherEntity.stomper) {\n            // Koopa is hided first and after that killed\n            if (otherEntity.pos.y < koopa.pos.y) {\n                this._handleStopm(koopa, otherEntity);\n            } else {\n                this._handleNudge(koopa, otherEntity);\n            }\n        }\n    }\n\n    update(koopa, rate) {\n        if (this._state === STATE_HIDING && !koopa.killable.dead) {\n            this._hidingTime += rate;\n\n            if (this._hidingTime >= this._unhideTime) {\n                this._unhide(koopa);\n            }\n        }\n    }\n\n    /**\n     * @param {Entity} entity \n     * @param {(progress: Number)} animation\n     */\n    animate(entity, animations) {\n        let tile = this.hiding ? 'hiding' : undefined;\n        if (this._state === STATE_HIDING) {\n            if (this._hidingTime > 3) {\n                // use 'wake' animation - it for sure exists\n                const animation = animations.get('wake');\n                if (animation) {\n                    tile = animation(this._hidingTime);\n                }\n            }\n        }\n\n        return { tile };\n    }\n\n}","import { loadMario } from './Mario.js';\nimport { loadGoomba } from './Goomba.js';\nimport { loadKoopa } from './Koopa.js';\n\nexport function loadEntities() {\n\n    // the aim is to have mfactory methods like:\n    // entityFactory.mario()\n    // entityFactory.goomba()\n    // entityFactory.koopa()\n\n    // I. simple version relying on the fact that each 'loadXXX' \n    // that resolves to a factory function that is named\n    // specifically like this: \"mari/goomba/koopa/....\"\n    const entityFactory = {};\n    return Promise.all([loadMario(), loadGoomba(), loadKoopa()]).\n        then(factories => {\n            factories.forEach(factory => entityFactory[factory.name] = factory);\n\n            return entityFactory;\n        });\n\n\n    // II. a different solution - specifically name the factories\n    // const entityFactory = {};\n    // function addAs(name) {\n    //     return factory => entityFactory[name] = factory;\n    // }\n    // return Promise.all([\n    //     loadMario().then(addAs('mario')),\n    //     loadGoomba().then(addAs('goomba')),\n    //     loadKoopa().then(addAs('koopa'))]).\n    //     then(() => entityFactory);\n}\n","import { SpriteSheet } from './SpriteSheet.js';\n\nexport class Font {\n\n    /**\n     * \n     * @param {SpriteSheet} sprites \n     * @param {Number} lineHeight \n     */\n    constructor(sprites, lineHeight) {\n        this._sprites = sprites;\n        this._lineHeight = lineHeight;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    /**\n     * \n     * @param {Sting} text \n     * @param {CanvasRenderingContext2D} context \n     * @param {Number} x \n     * @param {Number} y \n     */\n    print(text, context, x, y) {\n        let offsetX = 0;\n        for (let char of text) {\n            const [charWidth] = this._sprites.draw(char, context, x + offsetX, y);\n            offsetX += charWidth;\n        }\n    }\n\n}","import { Font } from '../Font.js';\nimport { SpriteSheet } from '../SpriteSheet.js';\nimport { loadImage } from './utils.js';\n\nconst CHARS = ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';\nconst CHAR_SIZE = 8;\n\n/**\n * @returns {Promise<Font>}\n */\nexport function loadFont() {\n    return loadImage('img/font.png')\n        .then(image => {\n            const fontSprite = new SpriteSheet(image, false, CHAR_SIZE, CHAR_SIZE);\n            const rowLen = image.width;\n\n            // register all characters ()\n            for (let [index, char] of [...CHARS].entries()) {\n                const x = (index * CHAR_SIZE) % rowLen;\n                const y = Math.floor(index * CHAR_SIZE / rowLen) * CHAR_SIZE;\n                fontSprite.register(char, x, y);\n            }\n\n            return new Font(fontSprite, CHAR_SIZE);\n        });\n}","import * as logger from '../logger.js';\nimport { Font } from '../Font.js';\nimport { Level } from '../Level.js';\n\n\nfunction pad(number, len = 6) {\n    return ('' + Math.floor(number)).padStart(len, '0');\n}\n\n/**\n * @param {Font} font\n * @param {Entity} playerEnv \n * @param {Level} level \n * @returns {(context: CanvasRenderingContext2D) => void} \n */\nexport function createDashboardLayer(font, playerEnv, level) {\n\n    const LINE1 = font.lineHeight;\n    const LINE2 = font.lineHeight * 2;\n\n    /**\n     * @param {CanvasRenderingContext2D} context\n     */\n    return function (context) {\n        logger.logDbg(\"Dashboard layer\");\n\n        const { score, coins, remainTime } = playerEnv.control;\n\n        font.print('MARIO', context, 16, LINE1);\n        font.print(pad(score, 6), context, 16, LINE2);\n\n        // NOTE - the '@' and 'x' are replaced in the 'font.png'\n        // similar trick like font-icon\n        font.print('@x' + pad(coins, 2), context, 96, LINE2);\n\n        font.print('WORLD', context, 152, LINE1);\n        font.print(level.NAME, context, 160, LINE2);\n\n        font.print('TIME', context, 208, LINE1);\n        font.print(pad(remainTime, 3), context, 216, LINE2);\n    };\n}","import { Trait } from '../Trait.js';\n\nexport class BePlayerControlTrait extends Trait {\n    /**\n     * @param {Entity} player\n     * @param {Number} playerTime\n     */\n    constructor(player, playerTime = -1) {\n        super('control', true);\n\n        this._player = player;\n        this._checkpoint = this._player.pos.clone();\n\n        this._playerTime = playerTime;\n        this._remainTime = this._playerTime;\n        this._timeSpeed = 2;\n\n        this._score = 0;\n        this._coins = 0;\n\n        // add a stomper listener\n        this._player.stomper.addListener(() => this._score += 100);\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get score() {\n        return this._score;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get coins() {\n        return this._coins;\n    }\n\n    /**\n     * @returns {Number}\n     */\n    get remainTime() {\n        return this._remainTime;\n    }\n\n    /**\n     * @param {Entity} entity\n     * @param {Number} rate\n     * @param {Level} level  \n     */\n    update(entity, rate, level) {\n        // revive the killed entity\n        if (!level.hasEntity(this._player)) {\n            this._player.killable.revive();\n            this._player.pos.set(this._checkpoint.x, this._checkpoint.y);\n            level.addEntity(this._player);\n\n            // reset again the player's remaining time\n            this._remainTime = this._playerTime;\n        } else {\n\n            // update player's remaining time (if there's such a need)\n            if (this._playerTime > 0) {\n                this._remainTime -= rate * this._timeSpeed;\n            }\n        }\n    }\n\n}","import { CONFIG } from './config.js';\nimport { View } from './View.js';\nimport { Timer } from './Timer.js';\nimport { KeyboardManager } from './KeyboardManager.js';\nimport { setupMarioKeyboard } from './keyboard.js';\nimport { createLoadLevel } from './loaders/level.js';\nimport { loadEntities } from './entities/entities.js';\nimport { setupMouseControl } from './debug.js';\nimport { loadFont } from './loaders/font.js';\nimport {\n    createDebugTileCollisionLayer,\n    createDebugEntityLayer,\n    createDebugViewLayer\n} from './layers/debug.js';\nimport { createDashboardLayer } from './layers/dashboard.js';\n\nimport { Entity } from './Entity.js';\nimport { BePlayerControlTrait as BePlayerControl } from './traits/BePlayerControl.js';\n\n// FIXME: temporary this is here\n/**\n * \n * @param {Entity} player \n * @param {Level} level\n * @returns {Entity}\n */\nfunction createPlayerEnvironment(player, level) {\n    // create a fictitious entity\n    const playerEnv = new Entity();\n    playerEnv.draw = () => { };\n    playerEnv.registerTrait(new BePlayerControl(player, level.getProp('time')));\n    level.addEntity(playerEnv);\n    return playerEnv;\n}\n\nasync function main(canvas) {\n    const context = canvas.getContext('2d');\n    context.imageSmoothingEnabled = false;\n    context.mozImageSmoothingEnabled = false;\n    context.webkitImageSmoothingEnabled = false;\n\n    const keyboardManager = new KeyboardManager();\n\n    const entityFactory = await loadEntities();\n    const loadLevel = createLoadLevel(entityFactory);\n    const level = await loadLevel('1_1');\n\n    const view = new View(CONFIG.VIEW_WIDTH, CONFIG.VIEW_HEIGHT);\n\n    const mario = level.getMario();\n\n    // setup the keyboard actions for Mario\n    // adn start the keyboard manager\n    setupMarioKeyboard(mario, keyboardManager);\n    keyboardManager.start(window);\n\n    // DEBUG: add Mario easy replacement if needed\n    if (CONFIG.DEBUG_MARIO) {\n        setupMouseControl(mario, canvas, view);\n    }\n\n    // DEBUG: add visual collisions if needed\n    if (CONFIG.DEBUG_TILE_COLLISION) {\n        level.addLayer(createDebugTileCollisionLayer(level));\n        level.addLayer(createDebugEntityLayer(level));\n    }\n\n    if (CONFIG.DEBUG_VIEW_SCROLL) {\n        level.addLayer(createDebugViewLayer(view));\n    }\n\n    // FIXME: temporary this is here\n    const playerEnv = createPlayerEnvironment(mario, level);\n\n    const font = await loadFont();\n    level.addLayer(createDashboardLayer(font, playerEnv, level));\n\n    const timer = new Timer(CONFIG.RATE);\n    timer.update = function (rate) {\n        // update all level entities (including Mario)\n        level.update(rate);\n\n\n        // move the camera/view together with Mario\n        // TODO: Don't position Mario always in the center, allow some margin left and right\n        view.pos.x = Math.max(0, mario.pos.x - view.size.x / 2);\n\n        // draw next frame\n        level.draw(context, view);\n    };\n\n    timer.start();\n}\n\nconst canvas = document.getElementById('screen');\nmain(canvas);"],"names":["logger.logWarn","logger.logDbg","BePhysics","BeSolid","BeStomper","BeKillable","Walk","Jump","Wander","Behavior","BePlayerControl"],"mappings":"AAAO,MAAM,MAAM,GAAG;AACtB,IAAI,IAAI,EAAE,CAAC,GAAG,EAAE;AAChB;AACA,IAAI,UAAU,EAAE,GAAG;AACnB,IAAI,WAAW,EAAE,GAAG;AACpB;AACA,IAAI,WAAW,EAAE,KAAK;AACtB,IAAI,oBAAoB,EAAE,KAAK;AAC/B,IAAI,iBAAiB,EAAE,KAAK;AAC5B,CAAC;;ACTM,MAAM,MAAM,CAAC;AACpB,IAAI,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB,KAAK;AACL;AACA,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;AACd,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACpB,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACpB,KAAK;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5C,KAAK;AACL;AACA,IAAI,IAAI,CAAC,GAAG;AACZ,QAAQ,OAAO,IAAI,CAAC,EAAE,CAAC;AACvB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,GAAG;AACZ,QAAQ,OAAO,IAAI,CAAC,EAAE,CAAC;AACvB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;AACb,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACpB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;AACb,QAAQ,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACpB,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA,AAAO,MAAM,MAAM,CAAC;AACpB,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AACxB,KAAK;AACL;AACA,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;AACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;AAC5B,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AAC/B,SAAS;AACT,QAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;AACjC,KAAK;AACL;AACA,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE;AACd,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAClC,QAAQ,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AACxC,KAAK;AACL;AACA,IAAI,OAAO,CAAC,QAAQ,EAAE;AACtB,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK;AAC1C,YAAY,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAChE,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA,IAAI,eAAe,CAAC,CAAC,EAAE,QAAQ,EAAE;AACjC,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACrC,QAAQ,IAAI,MAAM,EAAE;AACpB,YAAY,MAAM,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;AAChE,SAAS;AACT,KAAK;AACL;AACA;;CAAC,DC7DM,MAAM,IAAI,CAAC;AAClB,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE;AAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;;CAAC,DCrBM,MAAM,KAAK,CAAC;AACnB,IAAI,WAAW,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,EAAE;AAC/B,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B,QAAQ,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAClC,KAAK;AACL;AACA,IAAI,YAAY,CAAC,IAAI,EAAE;AACvB,QAAQ,IAAI,CAAC,gBAAgB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;AAChE;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE;AACvC,YAAY,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AACtC,SAAS;AACT;AACA,QAAQ,OAAO,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,EAAE;AACnD,YAAY,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,KAAK,CAAC;AAChD;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,SAAS;AACT,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B;AACA,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;AACxB,KAAK;AACL;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5D,KAAK;AACL;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB;AACA,QAAQ,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AACpE,KAAK;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;AACxB,KAAK;AACL;AACA;;ACvCA;AACA;AACA,AAAO,MAAM,WAAW,GAAG,CAAC,CAAC;AAC7B,AACO,MAAM,UAAU,GAAG,CAAC,CAAC;AAC5B,AACA;AACA;AACA,MAAM,KAAK,GAAG,UAAU,CAAC;AACzB;AACA,SAAS,KAAK,CAAC,WAAW,EAAE;AAC5B,IAAI,OAAO,KAAK,IAAI,WAAW,CAAC;AAChC,CAAC;AACD;AACA,SAAS,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE;AACrD,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC,EAAE;AAC5B,QAAQ,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AAC9C,KAAK;AACL,CAAC;AACD,AAiBA;AACA;AACA;AACA,AAAO,SAAS,MAAM,GAAG;AACzB,IAAI,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AAC7C,CAAC;AACD,AAIO,SAAS,OAAO,GAAG;AAC1B,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC7C,CAAC;;AC9CM,MAAM,kBAAkB,GAAG,CAAC,CAAC;AACpC,AAAO,MAAM,iBAAiB,GAAG,CAAC,CAAC;AACnC;AACA,AAAO,MAAM,eAAe,CAAC;AAC7B,IAAI,WAAW,GAAG;AAClB;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;AACjC;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,KAAK,CAAC,MAAM,EAAE;AAClB,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAYA,OAAc,CAAC,oCAAoC,CAAC,CAAC;AACjE,YAAY,OAAO;AACnB,SAAS;AACT;AACA,QAAQC,MAAa,CAAC,4BAA4B,CAAC,CAAC;AACpD;AACA,QAAQ,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI;AAClD,YAAY,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,IAAI;AACxD,gBAAgB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACzC,aAAa,CAAC,CAAC;AACf,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE;AAC5B,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AACxC;AACA,KAAK;AACL;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC;AAClC;AACA,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/C,QAAQ,IAAI,CAAC,QAAQ,EAAE;AACvB;AACA,YAAY,OAAO;AACnB,SAAS;AACT;AACA;AACA,QAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B;AACA,QAAQ,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,KAAK,SAAS,GAAG,iBAAiB,GAAG,kBAAkB,CAAC;AAC3F,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;AAClD,YAAY,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC/B,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;AAC9C,SAAS;AACT;AACA,KAAK;AACL;AACA;;ACxDA;AACA,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpB,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,AAAO,SAAS,kBAAkB,CAAC,KAAK,EAAE,eAAe,EAAE;AAC3D,IAAI,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,IAAI;AACnD,QAAQ,IAAI,QAAQ,EAAE;AACtB,YAAY,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;AAC/B,SAAS,MAAM;AACf,YAAY,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;AAChC,SAAS;AACT,KAAK,CAAC,CAAC;AACP,IAAI,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,IAAI;AACnD,QAAQ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AACpC,KAAK,CAAC,CAAC;AACP,IAAI,eAAe,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,IAAI;AACpD,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AACrC,KAAK,CAAC,CAAC;AACP,IAAI,eAAe,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,IAAI;AACpD,QAAQ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AACrC,KAAK,CAAC,CAAC;AACP;;CAAC,DC5BM,MAAM,IAAI,CAAC;AAClB;AACA;AACA;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1B,QAAQ,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;AACnC,QAAQ,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;;CAAC,DCxBM,MAAM,YAAY,CAAC;AAC1B,IAAI,WAAW,GAAG;AAClB,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,GAAG,CAAC,KAAK,EAAE;AACf,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;AACxB,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AAC5D,KAAK;AACL;;CAAC,DCnBM,MAAM,MAAM,CAAC;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;AACnC,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACxD,KAAK;AACL;AACA,IAAI,IAAI,MAAM,CAAC,CAAC,EAAE;AAClB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C,KAAK;AACL;AACA,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE;AACf,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACvC,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C,KAAK;AACL;AACA,IAAI,IAAI,IAAI,CAAC,CAAC,EAAE;AAChB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACvC,KAAK;AACL;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACxD,KAAK;AACL;AACA,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;AACjB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvD,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,WAAW,EAAE;AAC1B,QAAQ,OAAO,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG;AAC5C,YAAY,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,MAAM;AACzC,YAAY,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI;AACzC,YAAY,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC;AAC1C,KAAK;AACL;;CAAC,DChDM,MAAM,MAAM,CAAC;AACpB,IAAI,WAAW,CAAC,IAAI,EAAE;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC;AACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrC;AACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACvE;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAC1B;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,GAAG,GAAG;AACd,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,KAAK,EAAE;AACzB;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjC;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE;AAC3C,QAAQ,MAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAC1C,QAAQ,IAAI,QAAQ,GAAG,QAAQ,CAAC;AAChC,QAAQ,IAAI,OAAO,GAAG,QAAQ,CAAC;AAC/B,QAAQ,IAAI,GAAG,GAAG,CAAC,EAAE;AACrB,YAAY,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AAClD,YAAY,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AAClD,SAAS;AACT,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACxD,QAAQ,IAAI,CAAC,UAAU,EAAE;AACzB,YAAY,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;AACnC,YAAY,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AACvD,SAAS;AACT,QAAQ,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AAC3C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,6BAA6B,CAAC,OAAO,EAAE;AAC3C,QAAQ,OAAO,CAAC,gBAAgB,CAAC,CAAC,SAAS,EAAE,IAAI,KAAK;AACtD,YAAY,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACpD,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,KAAK,EAAE;AACnB,QAAQ,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;AAC/F,gBAAgB,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;AAC9C,oBAAoB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;AACtC,iBAAiB;AACjB,gBAAgB,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAE;AAClD,oBAAoB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC9C,iBAAiB;AACjB,aAAa,MAAM;AACnB,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,iCAAiC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChF;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,OAAO,KAAK,CAAC;AACzB,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE;AACxB,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACvE;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE;AACzB,QAAQ,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;AAC7E,KAAK;AACL;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE;AACtC,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC;AACnF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,KAAK,EAAE;AACxB,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACnE,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC;;iCAAC,jCCnN1B,MAAM,YAAY,CAAC;AAC1B;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE;AACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,WAAW,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,OAAO,CAAC,GAAG,EAAE;AACjB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AAChD,KAAK;AACL;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE;AAC7B;AACA,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;AACzE;AACA,QAAQ,MAAM,UAAU,GAAG,EAAE,CAAC;AAC9B,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC;AACvB,QAAQ,GAAG;AACX,YAAY,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/C,YAAY,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC;AAClC,SAAS,QAAQ,GAAG,GAAG,MAAM,EAAE;AAC/B;AACA,QAAQ,OAAO,UAAU,CAAC;AAC1B,KAAK;AACL;AACA,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE;AAC/B,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACrD,QAAQ,IAAI,IAAI,EAAE;AAClB,YAAY,MAAM,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/C,YAAY,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,YAAY,MAAM,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/C,YAAY,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AAC3C,YAAY,OAAO;AACnB,gBAAgB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACpC,aAAa,CAAC;AACd,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL;AACA,IAAI,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE;AAC9B,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;AACvE,KAAK;AACL;AACA,IAAI,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAC3C,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC;AACzB;AACA,QAAQ,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI;AAC1D,YAAY,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI;AAC9D,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC7D,gBAAgB,IAAI,IAAI,EAAE;AAC1B,oBAAoB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL;AACA;;CAAC,DCjEM,MAAM,YAAY,CAAC;AAC1B;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE;AACjC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB;AACA;AACA,QAAQ,IAAI,IAAI,CAAC;AACjB,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAChC;AACA,YAAY,OAAO;AACnB,SAAS,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AACrC;AACA,YAAY,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;AACvC,SAAS,MAAM;AACf;AACA,YAAY,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACtC,SAAS;AACT;AACA,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI;AACzD,YAAY,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrD;AACA,QAAQ,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;AACjC;AACA,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC9C,gBAAgB,OAAO;AACvB,aAAa;AACb;AACA;AACA,YAAY,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AAClC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,EAAE;AACpD,oBAAoB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;AACrE,iBAAiB;AACjB,aAAa;AACb;AACA,iBAAiB,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AACvC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE;AACnD,oBAAoB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;AACpE,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE;AACnB,QAAQ,IAAI,IAAI,CAAC;AACjB,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAChC;AACA,YAAY,OAAO;AACnB,SAAS,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AACrC;AACA,YAAY,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;AACxC,SAAS,MAAM;AACf;AACA,YAAY,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;AACrC,SAAS;AACT;AACA,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK;AACtF,YAAY,IAAI,EAAE,IAAI,CAAC,CAAC;AACxB;AACA,QAAQ,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI;AACjC;AACA,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC9C,gBAAgB,OAAO;AACvB,aAAa;AACb;AACA;AACA,YAAY,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AAClC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,EAAE,EAAE;AACrD,oBAAoB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,cAAc,CAAC,CAAC;AACtE,iBAAiB;AACjB,aAAa;AACb;AACA,iBAAiB,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;AACvC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,EAAE;AAClD,oBAAoB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;AACnE,iBAAiB;AACjB,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL;;CAAC,DClGM,MAAM,cAAc,CAAC;AAC5B;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1B,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,MAAM,EAAE;AAClB,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,IAAI;AAC5C;AACA,YAAY,IAAI,SAAS,KAAK,MAAM,EAAE;AACtC,gBAAgB,OAAO;AACvB,aAAa;AACb;AACA,YAAY,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AAC1D;AACA,gBAAgB,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;AAC/C,gBAAgB,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC/C,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA;;CAAC,DCzBD,MAAM,aAAa,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;AAChD;AACA,AAAO,MAAM,KAAK,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,GAAG,EAAE,EAAE;AACnD,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC/D,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAE,CAAC;AAChD,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AACnC;AACA,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClE;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,aAAa,EAAE,GAAG,KAAK,EAAE,CAAC;AACrD;AACA;AACA,QAAQ,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC;AAC/B,QAAQ,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK;AACtC,YAAY,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACrC,YAAY,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACrC,YAAY,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;AAC5B,SAAS,CAAC,CAAC;AACX,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,QAAQ,CAAC;AACtC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,QAAQ,CAAC;AACvC;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,eAAe,GAAG;AACtB,QAAQ,OAAO,IAAI,CAAC,aAAa,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,CAAC,QAAQ,EAAE;AAC5B,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3D,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE;AACpB,QAAQ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,MAAM,EAAE;AACtB,QAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,CAAC,MAAM,EAAE;AACzB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,MAAM,EAAE;AACtB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC1C,KAAK;AACL;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC;AAC3E,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,IAAI,EAAE;AAClB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE;AACjB,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI;AACzC,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtC;AACA;AACA;AACA,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;AACrC,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;AAC3D,aAAa;AACb,SAAS,CAAC,CAAC;AACX;AACA;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI;AACzC,YAAY,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX;AACA;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5D;AACA,QAAQ,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE;AACxB,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC/C,KAAK;AACL;AACA;;CAAC,DClBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AAAO,SAAS,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE;AACvE,IAAI,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3D;AACA;AACA,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpD,IAAI,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,QAAQ,CAAC;AAChD,IAAI,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;AACvC,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAClD;AACA;AACA,IAAI,SAAS,MAAM,CAAC,UAAU,EAAE,QAAQ,EAAE;AAC1C,QAAQ,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AACnE,QAAQ,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,EAAE;AACrD,YAAY,KAAK,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,KAAK;AACrD,gBAAgB,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3C,gBAAgB,IAAI,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AAClD;AACA,oBAAoB,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;AAC3G,iBAAiB,MAAM;AACvB;AACA,oBAAoB,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC;AACjF,iBAAiB;AACjB,aAAa,CAAC,CAAC;AACf,SAAS;AACT,KAAK;AACL;AACA,IAAI,OAAO,UAAU,OAAO,EAAE,IAAI,EAAE;AACpC,QAAQA,MAAa,CAAC,kBAAkB,CAAC,CAAC;AAC1C;AACA;AACA,QAAQ,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC5D,QAAQ,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChE,QAAQ,MAAM,YAAY,GAAG,cAAc,GAAG,SAAS,CAAC;AACxD;AACA,QAAQA,MAAa,CAAC,4BAA4B,CAAC,CAAC;AACpD,QAAQ,MAAM,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAC7C;AACA,QAAQ,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACvE,KAAK,CAAC;AACN;;CAAC,DCpLD;AACA;AACA;AACA;AACA;AACA;AACA,AAAO,SAAS,mBAAmB,CAAC,KAAK,EAAE,cAAc,GAAG,EAAE,EAAE,eAAe,GAAG,EAAE,EAAE;AACtF;AACA,IAAI,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpD,IAAI,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC;AAClC,IAAI,MAAM,CAAC,MAAM,GAAG,eAAe,CAAC;AACpC,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAClD;AACA,IAAI,OAAO,UAAU,OAAO,EAAE,IAAI,EAAE;AACpC,QAAQA,MAAa,CAAC,gBAAgB,CAAC,CAAC;AACxC;AACA,QAAQ,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;AAClC,QAAQ,KAAK,CAAC,aAAa,CAAC,MAAM,IAAI;AACtC;AACA,YAAY,aAAa,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;AAC3E,YAAY,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9C;AACA;AACA,YAAY,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1E,SAAS,CAAC,CAAC;AACX,KAAK,CAAC;AACN;;CAAC,DC5BM,SAAS,SAAS,CAAC,IAAI,EAAE;AAChC,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5C,QAAQ,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAClC,QAAQ,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7D,QAAQ,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7D,QAAQ,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC;AACzB,KAAK,CAAC,CAAC;AACP,CAAC;AACD;AACA,MAAM,QAAQ,GAAG,CAAC,GAAG,KAAK;AAC1B,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1C,CAAC,CAAC;AACF;AACA,AAAO,SAAS,aAAa,CAAC,IAAI,EAAE;AACpC,IAAI,OAAO,QAAQ,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC;AACD;AACA,AAAO,SAAS,QAAQ,CAAC,IAAI,EAAE;AAC/B,IAAI,OAAO,QAAQ,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACzC;;CAAC,DCjBM,MAAM,WAAW,CAAC;AACzB;AACA,IAAI,WAAW,CAAC,KAAK,EAAE,QAAQ,GAAG,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE;AAChE,QAAQ,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AACpC,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACtC,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;AAChC,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AACrC,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE;AACxC,QAAQ,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACjE;AACA,QAAQ,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI;AACnD,YAAY,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC/D,YAAY,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC;AAC7C,YAAY,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC;AAChD,YAAY,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;AACpC,YAAY,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;AACtC;AACA,YAAY,MAAM,YAAY,GAAG,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5D;AACA;AACA,YAAY,IAAI,QAAQ,EAAE;AAC1B,gBAAgB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,gBAAgB,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAClD,aAAa;AACb;AACA,YAAY,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM;AAC9C,gBAAgB,CAAC,EAAE,CAAC;AACpB,gBAAgB,KAAK,EAAE,MAAM;AAC7B,gBAAgB,CAAC,EAAE,CAAC;AACpB,gBAAgB,KAAK,EAAE,MAAM,CAAC,CAAC;AAC/B,YAAY,OAAO,SAAS,CAAC;AAC7B,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;AAC5B;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AAC9C,SAAS,MAAM;AACf;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,SAAS;AACT,KAAK;AACL;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE;AACvC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;AACjF,KAAK;AACL;AACA,IAAI,iBAAiB,CAAC,IAAI,EAAE,SAAS,EAAE;AACvC,QAAQ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC9C,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,gBAAgB,CAAC,QAAQ,EAAE;AAC/B,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,GAAG,KAAK,EAAE;AAChD,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAChD,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,IAAI,KAAK,GAAG,SAAS,CAAC;AAClC,YAAY,IAAI,IAAI,CAAC,SAAS,EAAE;AAChC;AACA;AACA,gBAAgB,KAAK,GAAG,SAAS,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACpD,aAAa;AACb,YAAY,OAAO,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3C;AACA,YAAY,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;AAC/C,SAAS;AACT;AACA,QAAQD,OAAc,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAClD,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtB,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;AACtD,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAChG,KAAK;AACL;AACA,IAAI,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACpE,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrD,QAAQ,IAAI,SAAS,EAAE;AACvB,YAAY,IAAI,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;AACvC,SAAS,MAAM;AACf,YAAYA,OAAc,CAAC,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3D,SAAS;AACT,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAChG,KAAK;AACL;AACA,IAAI,UAAU,CAAC,IAAI,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C,KAAK;AACL;AACA,CAAC;;ACpGM,SAAS,eAAe,CAAC,MAAM,EAAE,SAAS,GAAG,CAAC,EAAE;AACvD;AACA;AACA;AACA,IAAI,IAAI,MAAM,YAAY,KAAK,EAAE;AACjC;AACA;AACA;AACA,QAAQ,OAAO,UAAU,QAAQ,EAAE;AACnC,YAAY,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;AAChF,YAAY,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC;AACtC,SAAS,CAAC;AACV,KAAK;AACL;AACA;AACA,IAAI,OAAO,wBAAwB;AACnC,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK,CAAC;AACN;AACA;;CAAC,DCfD;AACA;AACA;AACA;AACA;AACA,AAAO,SAAS,WAAW,CAAC,IAAI,EAAE,QAAQ,GAAG,KAAK,EAAE;AACpD,IAAI,OAAO,QAAQ,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;AACtC,QAAQ,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1F,QAAQ,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,KAAK;AAC9C,YAAY,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,YAAY,EAAE,QAAQ;AAClE,gBAAgB,WAAW,CAAC,SAAS,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC;AAC/D;AACA,YAAY,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,QAAQ,CAAC;AACjD;AACA,gBAAgB,IAAI,KAAK,EAAE;AAC3B,oBAAoB,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;AACnD,oBAAoB,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC/D,iBAAiB,MAAM;AACvB;AACA,oBAAoB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;AAChD;AACA,oBAAoB,IAAI,KAAK,EAAE,MAAM,CAAC;AACtC,oBAAoB,IAAI,QAAQ,CAAC,IAAI,EAAE;AACvC,wBAAwB,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjD,wBAAwB,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClD,qBAAqB;AACrB,oBAAoB,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AAChE,iBAAiB;AACjB;AACA;AACA,aAAa,CAAC,CAAC;AACf;AACA;AACA,YAAY,IAAI,WAAW,CAAC,UAAU,EAAE;AACxC,gBAAgB,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,IAAI;AAC3D,oBAAoB,MAAM,SAAS,GAAG,eAAe,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC3F,oBAAoB,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACxE,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb;AACA,YAAY,OAAO,OAAO,CAAC;AAC3B,SAAS,CAAC,CAAC;AACX;;CAAC,DC3CD,UAAU,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;AACjD,IAAI,MAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;AAC/B,IAAI,MAAM,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC;AAC/B,IAAI,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;AACxC,QAAQ,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,EAAE;AAC5C,YAAY,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AAC3B,SAAS;AACT,KAAK;AACL,CAAC;AACD;AACA,SAAS,WAAW,CAAC,KAAK,EAAE;AAC5B,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,QAAQ,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;AACnD,QAAQ,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AACtD;AACA,KAAK,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACnC,QAAQ,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;AAC7C,QAAQ,OAAO,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACnD;AACA,KAAK,MAAM,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACnC,QAAQ,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;AACvC,QAAQ,OAAO,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AAChD,KAAK;AACL,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,gCAAgC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC;AACD;AACA,UAAU,YAAY,CAAC,MAAM,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;AAChC,QAAQ,OAAO,WAAW,CAAC,KAAK,CAAC,CAAC;AAClC,KAAK;AACL,CAAC;AACD;AACA;AACA,UAAU,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE;AACvC;AACA,IAAI,UAAU,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;AACjD,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,YAAY,KAAK,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AAC9D;AACA,gBAAgB,MAAM,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC;AAC1C,gBAAgB,MAAM,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC;AAC1C;AACA;AACA;AACA,gBAAgB,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;AACjD,gBAAgB,IAAI,WAAW,EAAE;AACjC,oBAAoB,MAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC;AAC9D,oBAAoB,IAAI,WAAW,EAAE;AACrC;AACA,wBAAwB,OAAO,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AAC1E,qBAAqB,MAAM;AAC3B,wBAAwBA,OAAc,CAAC,CAAC,6BAA6B,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AACtF,qBAAqB;AACrB,iBAAiB,MAAM;AACvB,oBAAoB,MAAM;AAC1B,wBAAwB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC;AAChE,qBAAqB,CAAC;AACtB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,OAAO,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC,CAAC;AACD;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE;AACrC,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;AAC9B,IAAI,KAAK,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;AAC/D,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7B,KAAK;AACL;AACA,IAAI,OAAO,IAAI,CAAC;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA,AAAO,SAAS,eAAe,CAAC,aAAa,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,SAAS,CAAC,IAAI,EAAE;AAC7B,QAAQ,OAAO,aAAa,CAAC,IAAI,CAAC;AAClC,YAAY,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACvF,YAAY,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,iBAAiB,CAAC,KAAK;AACrD;AACA,gBAAgB,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,SAAS,CAAC;AACxE;AACA;AACA,gBAAgB,MAAM,QAAQ,GAAG,EAAE,CAAC;AACpC;AACA;AACA,gBAAgB,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,SAAS,KAAK;AAC9E,oBAAoB,OAAO,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/D,iBAAiB,EAAE,EAAE,CAAC,CAAC;AACvB,gBAAgB,MAAM,IAAI,GAAG,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC/D;AACA;AACA,gBAAgB,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACrE;AACA;AACA,gBAAgB,MAAM,CAAC,OAAO,CAAC,SAAS,IAAI;AAC5C,oBAAoB,MAAM,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AACxE,oBAAoB,KAAK,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,iBAAiB,CAAC,CAAC,CAAC;AACrG,iBAAiB,CAAC,CAAC;AACnB;AACA;AACA;AACA;AACA,gBAAgB,QAAQ,CAAC,OAAO,CAAC,UAAU,IAAI;AAC/C,oBAAoB,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,UAAU,CAAC;AAC7D,oBAAoB,MAAM,YAAY,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;AAC7D,oBAAoB,MAAM,MAAM,GAAG,YAAY,EAAE,CAAC;AAClD,oBAAoB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC5C,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,iBAAiB,CAAC,CAAC;AACnB;AACA;AACA,gBAAgB,KAAK,CAAC,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3D;AACA,gBAAgB,OAAO,KAAK,CAAC;AAC7B,aAAa,CAAC,CAAC;AACf,KAAK;AACL,IAAI,OAAO,SAAS,CAAC;AACrB;;CAAC,DC/IM,MAAM,KAAK,CAAC;AACnB,IAAI,WAAW,CAAC,IAAI,EAAE,UAAU,GAAG,KAAK,EAAE;AAC1C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACtC,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,QAAQ,GAAG;AACf;AACA,QAAQ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;AAClD,QAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,IAAI,EAAE;AACpB,QAAQ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAChC,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC/B,YAAY,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;AAC3E,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE;AAChD,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC/B,YAAY,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;AAC5E,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC5C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,MAAM,EAAE,WAAW,EAAE;AAClC;AACA,KAAK;AACL;;CAAC,DCrED,MAAM,kBAAkB,GAAG,CAAC,GAAG,IAAI,CAAC;AACpC,MAAM,iBAAiB,GAAG,CAAC,GAAG,IAAI,CAAC;AACnC;AACA,AAAO,MAAM,SAAS,SAAS,KAAK,CAAC;AACrC,IAAI,WAAW,CAAC,UAAU,GAAG,IAAI,EAAE;AACnC,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC;AACtB;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACtC;AACA,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAC5B;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AAC7B;AACA;AACA,QAAQ,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC;AACjC,QAAQ,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;AACnC,QAAQ,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;AAC9C;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B;AACA;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,SAAS,GAAG;AACpB,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC;AAC7B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,WAAW,EAAE;AACtB,QAAQ,IAAI,CAAC,UAAU,IAAI,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAChD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,WAAW,EAAE;AACvB,QAAQ,IAAI,CAAC,UAAU,IAAI,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAChD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,WAAW,EAAE;AACvB,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,iBAAiB,GAAG,kBAAkB,CAAC;AAChF,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;AACzB;AACA,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC9B,YAAY,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACnD,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACvD,SAAS;AACT,KAAK;AACL;AACA,IAAI,uBAAuB,CAAC,MAAM,EAAE,IAAI,EAAE;AAC1C;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AACxD;AACA,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;AACnC;AACA,YAAY,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC5D;AACA,YAAY,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;AAC5C,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC/B,SAAS;AACT,KAAK;AACL;AACA,IAAI,mBAAmB,CAAC,MAAM,EAAE,IAAI,EAAE;AACtC,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;AACnC;AACA,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;AAC1E;AACA;AACA;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE;AACtD;AACA,gBAAgB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC;AAChD,aAAa;AACb,SAAS,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC;AAC1F,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,OAAO,CAAC;AAClE,SAAS,MAAM;AACf,YAAY,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC/B,SAAS;AACT;AACA,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClF,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;AACjC,SAAS;AACT;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE;AAChD,QAAQ,IAAI,IAAI,CAAC;AACjB,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AAC/B,YAAY,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC;AACvD,iBAAiB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE;AAC1D;AACA;AACA;AACA,gBAAgB,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC1D,gBAAgB,IAAI,SAAS,EAAE;AAC/B,oBAAoB,IAAI,GAAG,SAAS,CAAC,cAAc,CAAC,CAAC;AACrD,iBAAiB;AACjB,aAAa,MAAM;AACnB;AACA,gBAAgB,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5D,gBAAgB,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChD,aAAa;AACb,SAAS;AACT,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;AAC1C;AACA,QAAQ,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;AAClC;AACA,KAAK;AACL;AACA;;CAAC,DCvKM,MAAM,SAAS,SAAS,KAAK,CAAC;AACrC,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC;AACtB;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AAC7B,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAC9B;AACA;AACA;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAC9B,QAAQ,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;AAChC;AACA;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,OAAO,GAAG;AAClB,QAAQ,OAAO,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,KAAK,GAAG;AACZ,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AAC9C,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAC9B,QAAQ,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;AACzB;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;AACnC,YAAY,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACjC,gBAAgB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;AACnD,gBAAgB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtC,aAAa,MAAM;AACnB,gBAAgB,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC;AAC1C,aAAa;AACb,SAAS;AACT;AACA,QAAQ,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;AACnC;AACA;AACA,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;AACzF,YAAY,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC;AACtC,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;AACtB,KAAK;AACL;AACA,IAAI,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC5C,QAAQ,QAAQ,SAAS;AACzB,YAAY,KAAK,MAAM,CAAC,cAAc;AACtC;AACA,gBAAgB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAChC,gBAAgB,MAAM;AACtB,YAAY,KAAK,MAAM,CAAC,WAAW;AACnC;AACA,gBAAgB,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9B,gBAAgB,MAAM;AACtB,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE;AAChD,QAAQ,IAAI,IAAI,CAAC;AACjB;AACA;AACA,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B;AACA,YAAY,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxD,YAAY,IAAI,GAAG,SAAS,CAAC,cAAc,CAAC,CAAC;AAC7C,SAAS;AACT;AACA,QAAQ,OAAO,EAAE,IAAI,EAAE,CAAC;AACxB,KAAK;AACL;;CAAC,DC/FM,MAAM,cAAc,SAAS,KAAK,CAAC;AAC1C,IAAI,WAAW,CAAC,OAAO,GAAG,IAAI,EAAE;AAChC,QAAQ,KAAK,CAAC,SAAS,CAAC,CAAC;AACzB;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAChC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,KAAK;AACL;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAChC;AACA;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AAC5C,QAAQ,KAAK,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC/C;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AAC5C,QAAQ,KAAK,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC/C;AACA,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B;AACA,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACjD,SAAS;AACT,KAAK;AACL;AACA;;CAAC,DChCM,MAAM,YAAY,SAAS,KAAK,CAAC;AACxC,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,KAAK;AACL;AACA,IAAI,OAAO,GAAG;AACd,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC5C,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC5B,YAAY,OAAO;AACnB,SAAS;AACT;AACA,QAAQ,QAAQ,SAAS;AACzB,YAAY,KAAK,MAAM,CAAC,cAAc;AACtC,gBAAgB,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC;AACnD,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,gBAAgB,MAAM;AACtB,YAAY,KAAK,MAAM,CAAC,WAAW;AACnC,gBAAgB,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,EAAE,CAAC;AAChD,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,gBAAgB,MAAM;AACtB,YAAY,KAAK,MAAM,CAAC,aAAa;AACrC,gBAAgB,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC;AAClD,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,gBAAgB,MAAM;AACtB,YAAY,KAAK,MAAM,CAAC,YAAY;AACpC,gBAAgB,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,EAAE,CAAC;AACjD,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,gBAAgB,MAAM;AACtB,SAAS;AACT,KAAK;AACL;AACA;;CAAC,DCrCM,MAAM,cAAc,SAAS,KAAK,CAAC;AAC1C,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC/B;AACA,QAAQ,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;AACnC;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1B,QAAQ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE;AAC9B,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE;AAChE,YAAY,OAAO;AACnB,SAAS;AACT;AACA,QAAQ,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1C,YAAY,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;AAC1C,YAAY,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC,CAAC;AAChF,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,EAAE,EAAE,WAAW,EAAE;AAC7B;AACA,QAAQ,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC;AAClD;AACA;AACA,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;AACzC,KAAK;AACL;AACA;;CAAC,DC/CM,MAAM,eAAe,SAAS,KAAK,CAAC;AAC3C;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,cAAc,GAAG,CAAC,EAAE;AACpC,QAAQ,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAChC,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,QAAQ,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;AAC9C;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC;AAC1B,KAAK;AACL;AACA,IAAI,IAAI,GAAG;AACX,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM;AAC7B,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAC9B,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA,IAAI,MAAM,GAAG;AACb,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM;AAC7B,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC/B,YAAY,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC/B,SAAS,CAAC,CAAC;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAChC;AACA,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;AACxB,YAAY,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;AACnC;AACA,YAAY,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,eAAe,EAAE;AACxD,gBAAgB,IAAI,CAAC,SAAS,CAAC,MAAM;AACrC,oBAAoB,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;AAC/C,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA,AAAO,SAAS,UAAU,CAAC,OAAO,EAAE,WAAW,EAAE;AACjD;AACA;AACA,IAAI,OAAO,SAAS,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE;AACzC,QAAQ,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvD;AACA;AACA,QAAQ,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,WAAW,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;AACpF;AACA;AACA;AACA;AACA,KAAK,CAAC;AACN;AACA;;CAAC,DCVD;AACA,AAAO,SAAS,SAAS,GAAG;AAC5B,IAAI,OAAO,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACjC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,OAAO,EAAE;AACrC;AACA;AACA;AACA;AACA,IAAI,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;AAC7C;AACA;AACA,IAAI,OAAO,SAAS,KAAK,GAAG;AAC5B,QAAQ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC;AACA,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIE,cAAS,EAAE,CAAC,CAAC;AAC9C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,YAAO,EAAE,CAAC,CAAC;AAC5C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,cAAS,EAAE,CAAC,CAAC;AAC9C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,eAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,SAAI,EAAE,CAAC,CAAC;AACzC,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,SAAI,EAAE,CAAC,CAAC;AACzC;AACA,QAAQ,MAAM,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;AACtD;AACA,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK,CAAC;AACN;;CAAC,DC1CM,MAAM,WAAW,SAAS,KAAK,CAAC;AACvC,IAAI,WAAW,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE,aAAa,GAAG,EAAE,EAAE;AACpD,QAAQ,KAAK,CAAC,QAAQ,CAAC,CAAC;AACxB,QAAQ,IAAI,QAAQ,KAAK,CAAC,EAAE;AAC5B,YAAY,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;AACxE,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,QAAQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;AACtD;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,CAAC,QAAQ,EAAE;AAC3B,QAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,QAAQ,GAAG;AACnB,QAAQ,OAAO,IAAI,CAAC,SAAS,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,EAAE;AACzB,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;AACzB,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE;AAC1B,YAAY,OAAO;AACnB,SAAS;AACT;AACA;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;AACtC;AACA;AACA,QAAQ,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACxD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE;AAChC,QAAQ,IAAI,IAAI,CAAC;AACjB,QAAQ,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AAC/B;AACA,YAAY,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxD,YAAY,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC9C,SAAS;AACT;AACA,QAAQ,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;AACpD,KAAK;AACL;AACA,IAAI,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC5C,QAAQ,QAAQ,SAAS;AACzB,YAAY,KAAK,MAAM,CAAC,YAAY,CAAC;AACrC,YAAY,KAAK,MAAM,CAAC,aAAa;AACrC,gBAAgB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACnC,gBAAgB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;AACjD,gBAAgB,MAAM;AACtB,SAAS;AACT,KAAK;AACL;;CAAC,DC/EM,SAAS,UAAU,GAAG;AAC7B,IAAI,OAAO,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC;AACtC,QAAQ,IAAI,CAAC,mBAAmB,CAAC,CAAC;AAClC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,OAAO,EAAE;AACtC;AACA;AACA,IAAI,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAClD,IAAI,MAAM,IAAI,GAAG,UAAU,OAAO,EAAE,KAAK,EAAE;AAC3C,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AAChC,YAAY,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChD,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AAC3C,KAAK,CAAC;AACN;AACA,IAAI,OAAO,SAAS,MAAM,GAAG;AAC7B,QAAQ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC5C,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC;AACA,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;AAC7C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIL,cAAS,EAAE,CAAC,CAAC;AAC9C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,YAAO,EAAE,CAAC,CAAC;AAC5C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIE,eAAU,EAAE,CAAC,CAAC;AAC/C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIG,WAAM,EAAE,CAAC,CAAC;AAC3C;AACA,QAAQ,MAAM,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;AACtD;AACA,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK,CAAC;AACN,CAAC;AACD;AACA,MAAM,QAAQ,SAAS,KAAK,CAAC;AAC7B,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAChC,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,MAAM,EAAE,WAAW,EAAE;AAClC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;AAClC;AACA,YAAY,OAAO;AACnB,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,IAAI,WAAW,CAAC,OAAO,EAAE;AACjC;AACA,YAAY,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;AAClD;AACA,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACjC,gBAAgB,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AACtC;AACA;AACA,gBAAgB,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AACvC,aAAa,MAAM;AACnB;AACA,gBAAgB,IAAI,WAAW,CAAC,QAAQ,EAAE;AAC1C,oBAAoB,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAChD,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;CAAC,DCxEM,SAAS,SAAS,GAAG;AAC5B,IAAI,OAAO,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC;AACrC,QAAQ,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACjC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,OAAO,EAAE;AACrC;AACA;AACA,IAAI,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC/C;AACA,IAAI,OAAO,SAAS,KAAK,GAAG;AAC5B,QAAQ,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAC3C,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5B;AACA,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,UAAQ,EAAE,CAAC,CAAC;AAC7C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIP,cAAS,EAAE,CAAC,CAAC;AAC9C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIC,YAAO,EAAE,CAAC,CAAC;AAC5C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIE,eAAU,EAAE,CAAC,CAAC;AAC/C,QAAQ,MAAM,CAAC,aAAa,CAAC,IAAIG,WAAM,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C;AACA,QAAQ,MAAM,CAAC,6BAA6B,CAAC,OAAO,CAAC,CAAC;AACtD;AACA,QAAQ,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK,CAAC;AACN,CAAC;AACD;AACA,MAAM,aAAa,GAAG,MAAM,EAAE,CAAC;AAC/B,MAAM,YAAY,GAAG,MAAM,EAAE,CAAC;AAC9B,MAAM,cAAc,GAAG,MAAM,EAAE,CAAC;AAChC;AACA,MAAMC,UAAQ,SAAS,KAAK,CAAC;AAC7B,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAChC;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AAC7B,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AAC7B;AACA,QAAQ,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;AAClC,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AACpC;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;AACpC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG;AACjB,QAAQ,OAAO,IAAI,CAAC,MAAM,KAAK,YAAY;AAC3C,YAAY,IAAI,CAAC,MAAM,KAAK,cAAc,CAAC;AAC3C,KAAK;AACL;AACA,IAAI,KAAK,CAAC,KAAK,EAAE;AACjB,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACxB,QAAQ,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;AAC7B,QAAQ,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;AAC3C,YAAY,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC;AACzD,SAAS;AACT;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;AACnC,QAAQ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AAC7B,KAAK;AACL;AACA,IAAI,OAAO,CAAC,KAAK,EAAE;AACnB,QAAQ,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClC,QAAQ,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;AAC3C,YAAY,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;AACzD,SAAS;AACT,QAAQ,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC;AACpC,KAAK;AACL;AACA,IAAI,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE;AACrC,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,aAAa;AACzC,YAAY,IAAI,CAAC,MAAM,KAAK,cAAc,EAAE;AAC5C;AACA,YAAY,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9B,SAAS,MAAM;AACf;AACA,YAAY,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAClC;AACA,YAAY,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AAClC;AACA,YAAY,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtC,YAAY,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AAC/B,SAAS;AACT,KAAK;AACL;AACA,IAAI,YAAY,CAAC,KAAK,EAAE,WAAW,EAAE;AACrC,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,aAAa,EAAE;AAC3C;AACA,YAAY,IAAI,WAAW,CAAC,QAAQ,EAAE;AACtC,gBAAgB,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC5C,aAAa;AACb,SAAS,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,EAAE;AACjD;AACA,YAAY,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACvF,YAAY,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtC,YAAY,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;AACzC,SAAS,MAAM;AACf;AACA,YAAY,IAAI,WAAW,CAAC,QAAQ,EAAE;AACtC,gBAAgB,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;AAC5C,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE;AACjC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE;AACjC;AACA,YAAY,OAAO;AACnB,SAAS;AACT;AACA,QAAQ,IAAI,WAAW,CAAC,OAAO,EAAE;AACjC;AACA,YAAY,IAAI,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;AACjD,gBAAgB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACtD,aAAa,MAAM;AACnB,gBAAgB,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE;AACxB,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE;AAClE,YAAY,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC;AACrC;AACA,YAAY,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,EAAE;AACtD,gBAAgB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACpC,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE;AAChC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAC;AACtD,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY,EAAE;AAC1C,YAAY,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;AACtC;AACA,gBAAgB,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACzD,gBAAgB,IAAI,SAAS,EAAE;AAC/B,oBAAoB,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACvD,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,QAAQ,OAAO,EAAE,IAAI,EAAE,CAAC;AACxB,KAAK;AACL;AACA;;CAAC,DClKM,SAAS,YAAY,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,aAAa,GAAG,EAAE,CAAC;AAC7B,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE,UAAU,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC;AAChE,QAAQ,IAAI,CAAC,SAAS,IAAI;AAC1B,YAAY,SAAS,CAAC,OAAO,CAAC,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;AAChF;AACA,YAAY,OAAO,aAAa,CAAC;AACjC,SAAS,CAAC,CAAC;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC/BM,MAAM,IAAI,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,OAAO,EAAE,UAAU,EAAE;AACrC,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAChC,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE;AAC/B,QAAQ,IAAI,OAAO,GAAG,CAAC,CAAC;AACxB,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B,YAAY,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;AAClF,YAAY,OAAO,IAAI,SAAS,CAAC;AACjC,SAAS;AACT,KAAK;AACL;AACA;;CAAC,DChCD,MAAM,KAAK,GAAG,mGAAmG,CAAC;AAClH,MAAM,SAAS,GAAG,CAAC,CAAC;AACpB;AACA;AACA;AACA;AACA,AAAO,SAAS,QAAQ,GAAG;AAC3B,IAAI,OAAO,SAAS,CAAC,cAAc,CAAC;AACpC,SAAS,IAAI,CAAC,KAAK,IAAI;AACvB,YAAY,MAAM,UAAU,GAAG,IAAI,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACnF,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;AACvC;AACA;AACA,YAAY,KAAK,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE;AAC5D,gBAAgB,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,SAAS,IAAI,MAAM,CAAC;AACvD,gBAAgB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,GAAG,MAAM,CAAC,GAAG,SAAS,CAAC;AAC7E,gBAAgB,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChD,aAAa;AACb;AACA,YAAY,OAAO,IAAI,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC;AACnD,SAAS,CAAC,CAAC;AACX;;CAAC,DCpBD,SAAS,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,EAAE;AAC9B,IAAI,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACxD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AAAO,SAAS,oBAAoB,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;AAC7D;AACA,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;AAClC,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACtC;AACA;AACA;AACA;AACA,IAAI,OAAO,UAAU,OAAO,EAAE;AAC9B,QAAQR,MAAa,CAAC,iBAAiB,CAAC,CAAC;AACzC;AACA,QAAQ,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,SAAS,CAAC,OAAO,CAAC;AAC/D;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AAChD,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AACtD;AACA;AACA;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AAC7D;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AACjD,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AACpD;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAChD,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;AAC5D,KAAK,CAAC;AACN;;CAAC,DCvCM,MAAM,oBAAoB,SAAS,KAAK,CAAC;AAChD;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,MAAM,EAAE,UAAU,GAAG,CAAC,CAAC,EAAE;AACzC,QAAQ,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC/B;AACA,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;AAC9B,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;AACpD;AACA,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AACtC,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AAC5C,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AAC5B;AACA,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB;AACA;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;AACnE,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG;AACrB,QAAQ,OAAO,IAAI,CAAC,WAAW,CAAC;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAChC;AACA,QAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;AAC5C,YAAY,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC3C,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;AACzE,YAAY,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC1C;AACA;AACA,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AAChD,SAAS,MAAM;AACf;AACA;AACA,YAAY,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;AACtC,gBAAgB,IAAI,CAAC,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;AAC3D,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;;CAAC,DCjDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,uBAAuB,CAAC,MAAM,EAAE,KAAK,EAAE;AAChD;AACA,IAAI,MAAM,SAAS,GAAG,IAAI,MAAM,EAAE,CAAC;AACnC,IAAI,SAAS,CAAC,IAAI,GAAG,MAAM,GAAG,CAAC;AAC/B,IAAI,SAAS,CAAC,aAAa,CAAC,IAAIS,oBAAe,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAChF,IAAI,KAAK,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;AAC/B,IAAI,OAAO,SAAS,CAAC;AACrB,CAAC;AACD;AACA,eAAe,IAAI,CAAC,MAAM,EAAE;AAC5B,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC5C,IAAI,OAAO,CAAC,qBAAqB,GAAG,KAAK,CAAC;AAC1C,IAAI,OAAO,CAAC,wBAAwB,GAAG,KAAK,CAAC;AAC7C,IAAI,OAAO,CAAC,2BAA2B,GAAG,KAAK,CAAC;AAChD;AACA,IAAI,MAAM,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;AAClD;AACA,IAAI,MAAM,aAAa,GAAG,MAAM,YAAY,EAAE,CAAC;AAC/C,IAAI,MAAM,SAAS,GAAG,eAAe,CAAC,aAAa,CAAC,CAAC;AACrD,IAAI,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,KAAK,CAAC,CAAC;AACzC;AACA,IAAI,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;AACjE;AACA,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;AACnC;AACA;AACA;AACA,IAAI,kBAAkB,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;AAC/C,IAAI,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAClC,AAeA;AACA;AACA,IAAI,MAAM,SAAS,GAAG,uBAAuB,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC5D;AACA,IAAI,MAAM,IAAI,GAAG,MAAM,QAAQ,EAAE,CAAC;AAClC,IAAI,KAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AACjE;AACA,IAAI,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzC,IAAI,KAAK,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE;AACnC;AACA,QAAQ,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3B;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAChE;AACA;AACA,QAAQ,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAClC,KAAK,CAAC;AACN;AACA,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;AAClB,CAAC;AACD;AACA,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AACjD,IAAI,CAAC,MAAM,CAAC"}