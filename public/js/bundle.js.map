{"version":3,"sources":["webpack:///webpack/bootstrap 721479dfeae6f27f3fa7","webpack:///./src/js/Entity.js","webpack:///./src/js/Trait.js","webpack:///./src/js/logger.js","webpack:///./src/js/loaders/sprites.js","webpack:///./src/js/math.js","webpack:///./src/js/loaders/utils.js","webpack:///./src/js/SpriteSheet.js","webpack:///./src/js/traits/BePhysics.js","webpack:///./src/js/traits/BeSolid.js","webpack:///./src/js/traits/BeKillable.js","webpack:///./src/js/entities/utils.js","webpack:///./src/js/config.js","webpack:///./src/js/Tile.js","webpack:///./src/js/Level.js","webpack:///./src/js/TileResolver.js","webpack:///./src/js/traits/Wander.js","webpack:///./src/js/Font.js","webpack:///./src/js/main.js","webpack:///./src/js/View.js","webpack:///./src/js/Timer.js","webpack:///./src/js/KeyboardManager.js","webpack:///./src/js/keyboard.js","webpack:///./src/js/loaders/level.js","webpack:///./src/js/LayerManager.js","webpack:///./src/js/Bounds.js","webpack:///./src/js/TileCollider.js","webpack:///./src/js/EntityCollider.js","webpack:///./src/js/layers/background.js","webpack:///./src/js/layers/entities.js","webpack:///./src/js/animation.js","webpack:///./src/js/entities/entities.js","webpack:///./src/js/entities/Mario.js","webpack:///./src/js/traits/Walk.js","webpack:///./src/js/traits/Jump.js","webpack:///./src/js/traits/BeStomper.js","webpack:///./src/js/entities/Goomba.js","webpack:///./src/js/entities/Koopa.js","webpack:///./src/js/debug.js","webpack:///./src/js/loaders/font.js","webpack:///./src/js/layers/debug.js","webpack:///./src/js/layers/dashboard.js","webpack:///./src/js/traits/BePlayerControl.js"],"names":["Entity","name","NAME","_pos","_vel","_size","_offset","_bounds","_lifetime","_traits","_animations","Map","trait","push","animName","animation","idx","indexOf","mainName","subName","substring","animations","get","set","sprites","forEachAnimation","registerAnimation","level","Array","from","reduce","accum","animate","getTotalTime","tile","mirrored","undefined","Error","rate","forEach","update","context","finalize","obstacle","direction","obstructed","other","collided","COLLIDE_TOP","Symbol","COLLIDE_BOTTOM","COLLIDE_LEFT","COLLIDE_RIGHT","Trait","isBehavior","_isBehavior","_queuedTasks","task","length","entity","levelTotalTime","otherEntity","isLogDbg","isLogInfo","isLogWarn","isLogError","logDbg","logInfo","logWarn","logError","LEVEL_DEBUG","LEVEL_INFO","LEVEL_WARN","LEVEL_ERROR","isLog","levelNeeded","log","logFunc","logFuncArguments","apply","console","arguments","info","warn","error","loadSprites","then","Promise","all","spritesSpec","spritesURL","spritesImage","tileWidth","tileHeight","tiles","tileSpec","index","indexX","indexY","registerTile","pos","x","y","width","height","size","register","animSpec","frames","frameRate","Vector","_x","_y","Matrix","_grid","value","col","callback","column","loadImage","loadDataLevel","loadData","resolve","reject","image","Image","addEventListener","src","loadJson","url","fetch","r","json","logger","SpriteSheet","_image","_tileWidth","_tileHeight","_mirrored","_tiles","mirrors","tileImages","map","tileImage","document","createElement","tileImageCtx","getContext","scale","translate","drawImage","draw","progress","has","BePhysicsTrait","gravity","_gravity","_enabled","vel","getTileCollider","checkX","checkY","BeSolidTrait","bounds","bottom","y1","top","y2","right","x1","left","x2","BeKillableTrait","deadTimeRemove","_dead","_deadTimeRemove","_deadTime","queueTask","removeEntity","createDraw","defaultTile","tileSize","CONFIG","RATE","VIEW_WIDTH","VIEW_HEIGHT","DEBUG_MARIO","DEBUG_TILE_COLLISION","DEBUG_VIEW_SCROLL","Tile","_name","_type","type","PROPS_DEFAULT","time","Level","props","_tileCollider","_layerManager","_entities","Set","_entityCollider","_props","maxX","maxY","Math","max","_width","_height","_totalTime","layer","add","delete","find","check","view","TileResolver","_tileSize","floor","pos1","pos2","posMax","ceil","indexRange","toIndex","posX","posY","getByIndex","posX1","posX2","posY1","posY2","toIndexRange","WanderTrait","velocity","panicVelocity","_paused","_velocity","_panicVelocity","abs","_distance","paused","distance","lifetime","Font","lineHeight","_sprites","_lineHeight","text","offsetX","char","charWidth","canvas","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","keyboardManager","entityFactory","loadLevel","mario","getMario","start","window","addLayer","playerEnv","createPlayerEnvironment","font","timer","main","player","registerTrait","getProp","addEntity","getElementById","View","Timer","_rate","_lastTime","_accumulatedTime","_enqueue","requestAnimationFrame","_updateProxy","bind","KEY_STATE_RELEASED","KEY_STATE_PRESSED","KeyboardManager","_keyMap","_keyState","_started","eventName","_handleEvent","event","key","keyCode","preventDefault","newState","setupMarioKeyboard","KEY_LEFT","KEY_RIGHT","KEY_TURBO","KEY_JUMP","keyState","jump","cancel","walk","turbo","createLoadLevel","expandSpan","expandRanges","expandTiles","xStart","xLen","yStart","yLen","xEnd","yEnd","expandRange","range","ranges","patterns","walkTiles","offsetY","realX","realY","patternName","pattern","patternSpec","createGrid","grid","levelSpec","backgroundSprites","layers","entities","mergedTiles","layerSpec","concat","entitySpec","createEntity","LayerManager","_layers","Bounds","offset","otherBounds","TileCollider","matches","getByRange","match","obstructedBy","EntityCollider","candidate","overlaps","collidedWith","___createBackgroundLayer","__createBackgroundLayer","_createBackgroundLayer","createBackgroundLayer","buffer","getWidth","getHeight","imageContext","drawTile","tileResolver","bufferContext","redraw","indexStart","indexEnd","forEachInColumn","drawnIndexEnd","drawWidth","drawIndexStart","drawIndexEnd","hasTileAnimations","tileName","isTileAnim","drawTileAnim","lastIndexStart","lastIndexEnd","clearRect","createEntitiesLayer","maxEntityWidth","maxEntityHeight","forEachEntity","createAnimation","frameIndex","loadEntities","factories","factory","loadMario","createMarioFactory","registerAnimationsFromSprites","DRAG_FACTOR_NORMAL","DRAG_FACTOR_TURBO","WalkTrait","accelerate","_accelerate","_direction","_acceleration","_deacceleration","_dragFactor","_heading","startAction","_updateAcceleration","_updateConstantVelocity","falling","deaccel","min","drag","heading","JumpTrait","_duration","_engagedTime","_ready","_requestTime","_gracePeriod","_speedBoost","BeStomperTrait","_bounceVelocity","_stompListeners","us","killable","dead","onStomp","loadGoomba","createGoombaFactory","defDraw","call","goomba","Behavior","stomper","wander","pause","kill","loadKoopa","createKoopaFactory","koopa","STATE_WALKING","STATE_HIDING","STATE_PANICING","_unhideTime","_hidingTime","_wanderVelocity","_state","_hide","solid","disable","sign","_handleStopm","_handleNudge","_unhide","hiding","setupMouseControl","lastMouseEvent","buttons","loadFont","CHARS","CHAR_SIZE","fontSprite","rowLen","entries","createDebugTileCollisionLayer","createDebugEntityLayer","createDebugViewLayer","getTileResolver","getTileSize","collisionTiles","getIndexByORIG","strokeStyle","beginPath","rect","stroke","viewToDraw","createDashboardLayer","pad","number","len","padStart","LINE1","LINE2","control","score","coins","remainTime","print","BePlayerControlTrait","playerTime","_player","_checkpoint","clone","_playerTime","_remainTime","_timeSpeed","_score","_coins","addListener","hasEntity","revive"],"mappings":"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","file":"./public/js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 721479dfeae6f27f3fa7","import { Vector } from './math.js';\r\nimport { Bounds } from './Bounds.js';\r\n\r\nexport class Entity {\r\n    constructor(name) {\r\n        this.NAME = name;\r\n        // current possition\r\n        this._pos = new Vector(0, 0);\r\n        // current velocity\r\n        this._vel = new Vector(0, 0);\r\n        // current size\r\n        this._size = new Vector(0, 0);\r\n        // current offset (allow drawn size to be different that the real size)\r\n        this._offset = new Vector(0, 0);\r\n\r\n        // it wil make all calculations \r\n        this._bounds = new Bounds(this._pos, this._size, this._offset);\r\n\r\n        this._lifetime = 0;\r\n\r\n        this._traits = [];\r\n\r\n        this._animations = new Map();\r\n    }\r\n\r\n    /**\r\n     * @returns {Bounds}\r\n     */\r\n    get bounds() {\r\n        return this._bounds;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vector}\r\n     */\r\n    get pos() {\r\n        return this._pos;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vector}\r\n     */\r\n    get vel() {\r\n        return this._vel;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vector}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vector}\r\n     */\r\n    get offset() {\r\n        return this._offset;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get lifetime() {\r\n        return this._lifetime;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Trait} trait \r\n     */\r\n    registerTrait(trait) {\r\n        // remember all registered trait\r\n        this._traits.push(trait);\r\n\r\n        // expose it by its name to the entity\r\n        this[trait.NAME] = trait;\r\n    }\r\n\r\n    /**\r\n     * Register an animation. It can be bound to a {@link Trait} instance.\r\n     * It also allow a {@link Trait} to have multiple animations\r\n     * Like main \"walk\", \"walk-run\", \"walk-break\", \"walk-turbo\", etc...\r\n     * @param {String} animName \r\n     * @param {(progress: Number)} animation \r\n     */\r\n    registerAnimation(animName, animation) {\r\n        const idx = animName.indexOf('-');\r\n        let mainName = animName;\r\n        let subName = animName;\r\n        if (idx > 0) {\r\n            mainName = animName.substring(0, idx);\r\n            subName = animName.substring(idx + 1);\r\n        }\r\n        let animations = this._animations.get(mainName);\r\n        if (!animations) {\r\n            animations = new Map();\r\n            this._animations.set(mainName, animations);\r\n        }\r\n        animations.set(subName, animation);\r\n    }\r\n\r\n    /**\r\n     * Move all registered animations from the {@link SpriteSheet} object to the entity\r\n     * @param {SpriteSheet} sprites \r\n     */\r\n    registerAnimationsFromSprites(sprites) {\r\n        sprites.forEachAnimation((animation, name) => {\r\n            this.registerAnimation(name, animation);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Level} level \r\n     */\r\n    animate(level) {\r\n        return Array.from(this._animations).reduce((accum, [animName, animations]) => {\r\n            // check to see if there's such Trait registered and if there is then\r\n            // call it's animation method,\r\n            // if not then use the level's total time as a progress for a animation\r\n            // that is not connected to a Trait\r\n\r\n            const trait = this[animName];\r\n            if (trait) {\r\n                let { tile, mirrored } = trait.animate(this, animations, level.getTotalTime());\r\n                if (accum.tile === undefined) {\r\n                    accum.tile = tile;\r\n                }\r\n                if (accum.mirrored === undefined) {\r\n                    accum.mirrored = mirrored;\r\n                }\r\n            } else {\r\n                throw new Error(`Unsupported standalone animation ${animName}`);\r\n                // not used for now - all animation for an entity are connnected to a Trait.\r\n                // thus if needed a \"standalone\" animation then a specific Trait can be created\r\n                // just for it\r\n            }\r\n\r\n            return accum;\r\n        }, { tile: undefined, mirrored: undefined });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} rate\r\n     * @param {Level} level  \r\n     */\r\n    update(rate, level) {\r\n        this._traits.forEach(trait => trait.update(this, rate, level));\r\n\r\n        // increase also the overall lifetime of the entity\r\n        this._lifetime += rate;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {CanvasRenderingContext2D} context \r\n     * @param {Level} level \r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    draw(context, level) {\r\n        throw new Error(\"Each Entity should overwrite this abstract method\");\r\n    }\r\n\r\n    finalize() {\r\n        this._traits.forEach(trait => trait.finalize());\r\n    }\r\n\r\n    /**\r\n     * Called when the entity was \"obstructed\" by a \"ground\" tile\r\n     * @param {{tile:Tile, x1:Number, x2:Number, y1:Number, y2:Number}} obstacle\r\n     * @param {Number} direction \r\n     */\r\n    obstructedBy(obstacle, direction) {\r\n        this._traits.forEach(trait => trait.obstructed(this, obstacle, direction));\r\n    }\r\n\r\n    /**\r\n     * Called when the entity has \"collided\" with another entity.\r\n     * @param {Entity} other \r\n     */\r\n    collidedWith(other) {\r\n        this._traits.forEach(trait => trait.collided(this, other));\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Collide directon TOP\r\n * @constant\r\n * @static\r\n */\r\nEntity.COLLIDE_TOP = Symbol(1);\r\n/**\r\n * Collide directon BOTTOM\r\n * @constant\r\n * @static\r\n */\r\nEntity.COLLIDE_BOTTOM = Symbol(2);\r\n/**\r\n * Collide directon LEFT\r\n * @constant\r\n * @static\r\n */\r\nEntity.COLLIDE_LEFT = Symbol(3);\r\n/**\r\n * Collide directon RIGHT\r\n * @constant\r\n * @static\r\n */\r\nEntity.COLLIDE_RIGHT = Symbol(4);\n\n\n// WEBPACK FOOTER //\n// ./src/js/Entity.js","import { Tile } from './Tile.js';\r\n\r\nexport class Trait {\r\n    constructor(name, isBehavior = false) {\r\n        this.NAME = name;\r\n        this._isBehavior = isBehavior;\r\n        this._queuedTasks = [];\r\n    }\r\n\r\n    finalize() {\r\n        // perform each queued tasks\r\n        this._queuedTasks.forEach(task => task());\r\n        this._queuedTasks.length = 0;\r\n    }\r\n\r\n    /**\r\n     * Queue up a task to be executed when the {@see finalize} method is called\r\n     * @param {Function} task \r\n     */\r\n    queueTask(task) {\r\n        this._queuedTasks.push(task);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} entity \r\n     * @param {Number} rate\r\n     * @param {Level} level \r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    update(entity, rate, level) {\r\n        if (!this._isBehavior) {\r\n            throw new Error(\"Abstract method 'update' is not implemented\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} entity \r\n     * @param {Map<name:String, (progress: Number)>} animations \r\n     * @param {Number} levelTotalTime \r\n     */\r\n    // should return an object { tile, mirrored }\r\n    // with the next frame/tile name to be drawn, and whether or not it's mirrored in the sprites\r\n    // eslint-disable-next-line no-unused-vars\r\n    animate(entity, animations, levelTotalTime) {\r\n        if (!this._isBehavior) {\r\n            throw new Error(\"Abstract method 'animate' is not implemented\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} entity \r\n     * @param {{tile:Tile, x1:Number, x2:Number, y1:Number, y2:Number}} obstacle \r\n     * @param {Number} direction \r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    obstructed(entity, obstacle, direction) {\r\n        // keep empty , inheritors may overwrite it they need to\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} entity \r\n     * @param {Entity} otherEntity \r\n     */\r\n    // eslint-disable-next-line no-unused-vars\r\n    collided(entity, otherEntity) {\r\n        // keep empty , inheritors may overwrite it they need to\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Trait.js","/* eslint-disable no-console */\r\n\r\nexport const LEVEL_DEBUG = 0;\r\nexport const LEVEL_INFO = 1;\r\nexport const LEVEL_WARN = 2;\r\nexport const LEVEL_ERROR = 3;\r\n\r\n// const level = LEVEL_DEBUG;\r\nconst level = LEVEL_WARN;\r\n\r\nfunction isLog(levelNeeded) {\r\n    return level <= levelNeeded;\r\n}\r\n\r\nfunction log(levelNeeded, logFunc, logFuncArguments) {\r\n    if (isLog(levelNeeded)) {\r\n        logFunc.apply(null, logFuncArguments);\r\n    }\r\n}\r\n\r\n/* Check functions */\r\n\r\nexport function isLogDbg() {\r\n    isLog(LEVEL_DEBUG);\r\n}\r\n\r\nexport function isLogInfo() {\r\n    isLog(LEVEL_INFO);\r\n}\r\nexport function isLogWarn() {\r\n    isLog(LEVEL_WARN);\r\n}\r\n\r\nexport function isLogError() {\r\n    isLog(LEVEL_ERROR);\r\n}\r\n\r\n/* Log functions */\r\n\r\nexport function logDbg() {\r\n    log(LEVEL_DEBUG, console.log, arguments);\r\n}\r\n\r\nexport function logInfo() {\r\n    log(LEVEL_INFO, console.info, arguments);\r\n}\r\nexport function logWarn() {\r\n    log(LEVEL_WARN, console.warn, arguments);\r\n}\r\n\r\nexport function logError() {\r\n    log(LEVEL_ERROR, console.error, arguments);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/logger.js","import { SpriteSheet } from '../SpriteSheet.js';\r\nimport { loadImage, loadData } from './utils.js';\r\nimport { createAnimation } from '../animation.js';\r\n\r\n/**\r\n * @param {String} name \r\n * @param {Boolean} mirrored\r\n * @returns {Promise<SpriteSheet>}\r\n */\r\nexport function loadSprites(name, mirrored = false) {\r\n    return loadData(`sprites/${name}`).\r\n        then(spritesSpec => Promise.all([spritesSpec, loadImage(spritesSpec.spritesURL)])).\r\n        then(([spritesSpec, spritesImage]) => {\r\n            const sprites = new SpriteSheet(spritesImage, mirrored,\r\n                spritesSpec.tileWidth, spritesSpec.tileHeight);\r\n\r\n            spritesSpec.tiles.forEach(tileSpec => {\r\n                // the specific tile's width and height are optional in the tileSpec\r\n                // if missing then the global spritesSpec.tileWidth/spritesSpec.tileHeight will be used\r\n\r\n                // a tile can be specified by index (when sprite is with fixed size grid)\r\n                // or by pos and size (optional)\r\n                const { name, index } = tileSpec;\r\n\r\n                if (index) {\r\n                    const [indexX, indexY] = index;\r\n                    sprites.registerTile(name, indexX, indexY);\r\n                } else {\r\n                    // pos is obligatory then, but size is again optional\r\n                    const [x, y] = tileSpec.pos;\r\n\r\n                    let width, height;\r\n                    if (tileSpec.size) {\r\n                        width = tileSpec.size[0];\r\n                        height = tileSpec.size[1];\r\n                    }\r\n                    sprites.register(name, x, y, width, height);\r\n                }\r\n\r\n\r\n            });\r\n\r\n            // if defined animations for any tile\r\n            if (spritesSpec.animations) {\r\n                spritesSpec.animations.forEach(animSpec => {\r\n                    const animation = createAnimation(animSpec.frames, animSpec.frameRate);\r\n                    sprites.registerAnimation(animSpec.name, animation);\r\n                });\r\n            }\r\n\r\n            return sprites;\r\n        });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/loaders/sprites.js","export class Vector {\r\n    constructor(x, y) {\r\n        this.set(x, y);\r\n    }\r\n\r\n    set(x, y) {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n\r\n    clone() {\r\n        return new Vector(this._x, this._y);\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    set x(x) {\r\n        this._x = x;\r\n    }\r\n\r\n    set y(y) {\r\n        this._y = y;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class Matrix {\r\n    constructor() {\r\n        this._grid = [];\r\n    }\r\n\r\n    set(x, y, value) {\r\n        if (!this._grid[x]) {\r\n            this._grid[x] = [];\r\n        }\r\n        this._grid[x][y] = value;\r\n    }\r\n\r\n    get(x, y) {\r\n        const col = this._grid[x];\r\n        return col ? col[y] : undefined;\r\n    }\r\n\r\n    forEach(callback) {\r\n        this._grid.forEach((column, x) => {\r\n            column.forEach((value, y) => callback(x, y, value));\r\n        });\r\n    }\r\n\r\n    forEachInColumn(x, callback) {\r\n        const column = this._grid[x];\r\n        if (column) {\r\n            column.forEach((value, y) => callback(x, y, value));\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/math.js","export function loadImage(name) {\r\n    return new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.addEventListener('load', () => resolve(image));\r\n        image.addEventListener('error', () => reject(image));\r\n        image.src = name;\r\n    });\r\n}\r\n\r\nconst loadJson = (url) => {\r\n    return fetch(url).then(r => r.json());\r\n};\r\n\r\nexport function loadDataLevel(name) {\r\n    return loadData(`levels/${name}`);\r\n}\r\n\r\nexport function loadData(name) {\r\n    return loadJson(`data/${name}.json`);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/loaders/utils.js","import * as logger from './logger.js';\r\n\r\nexport class SpriteSheet {\r\n\r\n    constructor(image, mirrored = false, tileWidth, tileHeight) {\r\n        this._image = image;\r\n        this._tileWidth = tileWidth;\r\n        this._tileHeight = tileHeight;\r\n        this._mirrored = mirrored;\r\n\r\n        this._tiles = new Map();\r\n        this._animations = new Map();\r\n    }\r\n\r\n    register(tile, x, y, width, height) {\r\n        const mirrors = this._mirrored ? [false, true] : [false];\r\n\r\n        const tileImages = mirrors.map(mirrored => {\r\n            const tileImage = document.createElement('canvas');\r\n            width = width || this._tileWidth;\r\n            height = height || this._tileHeight;\r\n            tileImage.width = width;\r\n            tileImage.height = height;\r\n\r\n            const tileImageCtx = tileImage.getContext('2d');\r\n\r\n            // flip the image\r\n            if (mirrored) {\r\n                tileImageCtx.scale(-1, 1);\r\n                tileImageCtx.translate(-width, 0);\r\n            }\r\n\r\n            tileImageCtx.drawImage(this._image,\r\n                x, y,\r\n                width, height,\r\n                0, 0,\r\n                width, height);\r\n            return tileImage;\r\n        });\r\n\r\n        if (this._mirrored) {\r\n            // if mirrored then register both tile images as a coupl\r\n            this._tiles.set(tile, tileImages);\r\n        } else {\r\n            // if not mirrored then register the single tile image\r\n            this._tiles.set(tile, tileImages[0]);\r\n        }\r\n    }\r\n\r\n    registerTile(tile, indexX, indexY) {\r\n        this.register(tile, indexX * this._tileWidth, indexY * this._tileHeight);\r\n    }\r\n\r\n    registerAnimation(tile, animation) {\r\n        this._animations.set(tile, animation);\r\n    }\r\n\r\n    /**\r\n     * @param {(animation:Function, name:String)=>void} callback \r\n     */\r\n    forEachAnimation(callback) {\r\n        this._animations.forEach(callback);\r\n    }\r\n\r\n    draw(tile, context, x, y, mirrored = false) {\r\n        const tileImage = this._tiles.get(tile);\r\n        if (tileImage) {\r\n            let image = tileImage;\r\n            if (this._mirrored) {\r\n                // if sprites is mirror this means that 2 image tiles are registered for each name\r\n                // so we have to draw the desired one\r\n                image = tileImage[mirrored ? 1 : 0];\r\n            }\r\n            context.drawImage(image, x, y);\r\n\r\n            return [image.width, image.height];\r\n        }\r\n        \r\n        logger.logWarn(`No tile set for ${tile}`);\r\n        return [0, 0];\r\n    }\r\n\r\n    drawTile(tile, context, indexX, indexY, mirrored) {\r\n        this.draw(tile, context, indexX * this._tileWidth, indexY * this._tileHeight, mirrored);\r\n    }\r\n\r\n    drawTileAnim(tile, context, indexX, indexY, progress, mirrored) {\r\n        const animation = this._animations.get(tile);\r\n        if (animation) {\r\n            tile = animation(progress);\r\n        } else {\r\n            logger.logWarn(`No animation set for ${tile}`);\r\n        }\r\n        this.draw(tile, context, indexX * this._tileWidth, indexY * this._tileHeight, mirrored);\r\n    }\r\n\r\n    isTileAnim(tile) {\r\n        return this._animations.has(tile);\r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/SpriteSheet.js","import { Trait } from '../Trait.js';\r\nimport { Entity } from '../Entity.js';\r\n\r\nexport class BePhysicsTrait extends Trait {\r\n    constructor(gravity = 1500) {\r\n        super('physics');\r\n\r\n        this._gravity = gravity;\r\n        this._enabled = true;\r\n    }\r\n\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {Number} rate\r\n     * @param {Level} level  \r\n     */\r\n    update(entity, rate, level) {\r\n        // NOTE !!! : the x an y positions SHOULD be updated separately\r\n        // before checking for collisions \r\n        entity.pos.x += entity.vel.x * rate;\r\n        level.getTileCollider().checkX(entity);\r\n\r\n        entity.pos.y += entity.vel.y * rate;\r\n        level.getTileCollider().checkY(entity);\r\n\r\n        if (this._gravity) {\r\n            // NOTE !!! : applying the gravity SHOULD be after the tile collision check have been made\r\n            entity.vel.y += this._gravity * rate;\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/BePhysics.js","import { Trait } from '../Trait.js';\r\nimport { Entity } from '../Entity.js';\r\n\r\nexport class BeSolidTrait extends Trait {\r\n    constructor() {\r\n        super('solid', true);\r\n\r\n        this._enabled = true;\r\n    }\r\n\r\n    disable() {\r\n        this._enabled = false;\r\n    }\r\n\r\n    obstructed(entity, obstacle, direction) {\r\n        if (!this._enabled) {\r\n            return;\r\n        }\r\n\r\n        switch (direction) {\r\n            case Entity.COLLIDE_BOTTOM:\r\n                entity.bounds.bottom = obstacle.y1;\r\n                entity.vel.y = 0;\r\n                break;\r\n            case Entity.COLLIDE_TOP:\r\n                entity.bounds.top = obstacle.y2;\r\n                entity.vel.y = 0;\r\n                break;\r\n            case Entity.COLLIDE_RIGHT:\r\n                entity.bounds.right = obstacle.x1;\r\n                entity.vel.x = 0;\r\n                break;\r\n            case Entity.COLLIDE_LEFT:\r\n                entity.bounds.left = obstacle.x2;\r\n                entity.vel.x = 0;\r\n                break;\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/BeSolid.js","import { Trait } from '../Trait.js';\r\n\r\nexport class BeKillableTrait extends Trait {\r\n    /**\r\n     * \r\n     * @param {Number} deadTimeRemove 2 seconds by default\r\n     */\r\n    constructor(deadTimeRemove = 2) {\r\n        super('killable', true);\r\n        this._dead = false;\r\n        this._deadTimeRemove = deadTimeRemove;\r\n\r\n        this._deadTime = 0;\r\n    }\r\n\r\n    get dead() {\r\n        return this._dead;\r\n    }\r\n\r\n    kill() {\r\n        this.queueTask(() => { \r\n            this._dead = true; \r\n        });\r\n    }\r\n\r\n    revive() {\r\n        this.queueTask(() => {\r\n            this._dead = false;\r\n            this._deadTime = 0;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {Number} rate\r\n     * @param {Level} level  \r\n     */\r\n    update(entity, rate, level) {\r\n        // keep the entity for a while and then remove it from the level\r\n        if (this._dead) {\r\n            this._deadTime += rate;\r\n\r\n            if (this._deadTime >= this._deadTimeRemove) {\r\n                this.queueTask(() => {\r\n                    level.removeEntity(entity);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/BeKillable.js","/**\r\n * Common utility function that will be used when creating each entity.\r\n * It creates a 'draw' method that will be attached to each entity.\r\n * @param {SpriteSheet} sprites \r\n * @param {String} defaultTile \r\n */\r\nexport function createDraw(sprites, defaultTile) {\r\n\r\n    // the real draw function that will bve attached the entities\r\n    return function draw(context, level) {\r\n        const { tile, mirrored } = this.animate(level);\r\n        // if no tile to animate then draw the default \"idle\" one,\r\n        // tileSize is array with [width, height]\r\n        const tileSize = sprites.draw(tile || defaultTile, context, 0, 0, mirrored);\r\n\r\n        // TODO: The drawn tile size is not necessary the \"real\" size of the entity\r\n        // set the size of the entity to the size of the real drawn tile\r\n        // this.size.set(...tileSize);\r\n    };\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/entities/utils.js","export const CONFIG = {\r\n    RATE: 1 / 60,\r\n\r\n    VIEW_WIDTH: 256,\r\n    VIEW_HEIGHT: 240,\r\n\r\n    DEBUG_MARIO: false,\r\n    DEBUG_TILE_COLLISION: false,\r\n    DEBUG_VIEW_SCROLL: false\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/js/config.js","export class Tile {\r\n    /**\r\n     * @param {{tile: String, type: String}} tileSpec \r\n     */\r\n    constructor(tileSpec) {\r\n        this._name = tileSpec.name;\r\n        this._type = tileSpec.type;\r\n    }\r\n\r\n    /**\r\n     * @property\r\n     * @returns {String}\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * @property\r\n     * @returns {String}\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Tile.js","import { LayerManager } from './LayerManager.js';\r\nimport { Entity } from './Entity.js';\r\nimport { TileCollider } from './TileCollider.js';\r\nimport { EntityCollider } from './EntityCollider.js';\r\n\r\nconst PROPS_DEFAULT = { gravity: 0, time: 300 };\r\n\r\nexport class Level {\r\n    /**\r\n     * \r\n     * @param {String} name \r\n     * @param {Matrix} tiles \r\n     * @param {Number} tileSize \r\n     * @param {{gravity:Number, time:Number, ...}} props \r\n     */\r\n    constructor(name, tiles, tileSize, props = {}) {\r\n        this.NAME = name;\r\n        this._tileCollider = new TileCollider(tiles, tileSize);\r\n        this._layerManager = new LayerManager();\r\n        this._entities = new Set();\r\n\r\n        this._entityCollider = new EntityCollider(this._entities);\r\n\r\n        this._props = { ...PROPS_DEFAULT, ...props };\r\n\r\n        // compute the width and height from the tiles and tileSize\r\n        let maxX = 0, maxY = 0;\r\n        tiles.forEach((x, y, tile) => {\r\n            maxX = Math.max(maxX, x);\r\n            maxY = Math.max(maxY, y);\r\n            tile._name == 0;\r\n        });\r\n        this._width = maxX * tileSize;\r\n        this._height = maxY * tileSize;\r\n\r\n        this._totalTime = 0;\r\n    }\r\n\r\n    /**\r\n     * @returns {TileCollider}\r\n     */\r\n    getTileCollider() {\r\n        return this._tileCollider;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {(progress: Entity)} callback \r\n     */\r\n    forEachEntity(callback) {\r\n        this._entities.forEach(entity => callback(entity));\r\n    }\r\n\r\n    /**\r\n     * @param {(context: CanvasRenderingContext2D, view: View) => void} layer \r\n     */\r\n    addLayer(layer) {\r\n        this._layerManager.add(layer);\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity \r\n     */\r\n    addEntity(entity) {\r\n        this._entities.add(entity);\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @returns {Boolean} \r\n     */\r\n    removeEntity(entity) {\r\n        return this._entities.delete(entity);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} entity\r\n     * @returns {Boolean} \r\n     */\r\n    hasEntity(entity) {\r\n        return this._entities.has(entity);\r\n    }\r\n\r\n    getMario() {\r\n        return [...this._entities].find(entity => entity.NAME === 'mario');\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} name \r\n     */\r\n    getProp(name) {\r\n        return this._props[name];\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    getTotalTime() {\r\n        return this._totalTime;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    getWidth() {\r\n        return this._width;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    getHeight() {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} rate \r\n     */\r\n    update(rate) {\r\n        this._entities.forEach(entity => {\r\n            entity.update(rate, this);\r\n\r\n            // add some gravity to all entities\r\n            // NOTE !!! : applying the gravity SHOULD be after the tile collision check have been made\r\n            if (this._props.gravity) {\r\n                entity.vel.y += this._props.gravity * rate;\r\n            }\r\n        });\r\n\r\n        // check if entities collide with each other\r\n        // NOTE !!! : it SHOULD be after all entities have been passed through the first loop\r\n        this._entities.forEach(entity => {\r\n            this._entityCollider.check(entity);\r\n        });\r\n\r\n        // finally execute all queued tasks,\r\n        // in order to avoid updates in from the traits depending on the order they are registered\r\n        this._entities.forEach(entity => entity.finalize());\r\n\r\n        this._totalTime += rate;\r\n    }\r\n\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context \r\n     * @param {View} view \r\n     */\r\n    draw(context, view) {\r\n        this._layerManager.draw(context, view);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Level.js","export class TileResolver {\r\n    /**\r\n     * @param {Matrix} tiles \r\n     * @param {Number} tileSize \r\n     */\r\n    constructor(tiles, tileSize) {\r\n        this._tiles = tiles;\r\n        this._tileSize = tileSize;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    getTileSize() {\r\n        return this._tileSize;\r\n    }\r\n\r\n    toIndex(pos) {\r\n        return Math.floor(pos / this._tileSize);\r\n    }\r\n\r\n    toIndexRange(pos1, pos2) {\r\n        // this method is axis agnostic\r\n        const posMax = Math.ceil(pos2 / this._tileSize) * this._tileSize;\r\n\r\n        const indexRange = [];\r\n        let pos = pos1;\r\n        do {\r\n            indexRange.push(this.toIndex(pos));\r\n            pos += this._tileSize;\r\n        } while (pos < posMax);\r\n\r\n        return indexRange;\r\n    }\r\n\r\n    getByIndex(indexX, indexY) {\r\n        const tile = this._tiles.get(indexX, indexY);\r\n        if (tile) {\r\n            const x1 = indexX * this._tileSize;\r\n            const x2 = x1 + this._tileSize;\r\n            const y1 = indexY * this._tileSize;\r\n            const y2 = y1 + this._tileSize;\r\n            return {\r\n                tile, x1, x2, y1, y2\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getByPosition(posX, posY) {\r\n        return this.getByIndex(this.toIndex(posX), this.toIndex(posY));\r\n    }\r\n\r\n    getByRange(posX1, posX2, posY1, posY2) {\r\n        const tiles = [];\r\n\r\n        this.toIndexRange(posX1, posX2).forEach(indexX => {\r\n            this.toIndexRange(posY1, posY2).forEach(indexY => {\r\n                const tile = this.getByIndex(indexX, indexY);\r\n                if (tile) {\r\n                    tiles.push(tile);\r\n                }\r\n            });\r\n        });\r\n\r\n        return tiles;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/TileResolver.js","import { Trait } from '../Trait.js';\r\nimport { Entity } from '../Entity.js';\r\n\r\nexport class WanderTrait extends Trait {\r\n    constructor(velocity = -30, panicVelocity = 90) {\r\n        super('wander');\r\n        if (velocity === 0) {\r\n            throw new Error('Cannot have wander trait with 0 velocity');\r\n        }\r\n\r\n        this._paused = false;\r\n\r\n        this._velocity = velocity;\r\n        this._panicVelocity = Math.abs(panicVelocity); // prevent if passed negative number\r\n\r\n        // the distance \"walked\" when in single \"walking\" phase\r\n        this._distance = 0;\r\n    }\r\n\r\n    /**\r\n    * @returns {Number}\r\n    */\r\n    get velocity() {\r\n        return this._velocity;\r\n    }\r\n\r\n    /**\r\n     * @param {Number} velocity\r\n     */\r\n    set velocity(velocity) {\r\n        this._velocity = velocity;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get distance() {\r\n        return this._distance;\r\n    }\r\n\r\n    /**\r\n     * @param {Boolean} paused \r\n     */\r\n    pause(paused = true) {\r\n        this._paused = paused;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {Number} rate\r\n     * @param {Level} level  \r\n     */\r\n    update(entity, rate) {\r\n        if (this._paused) {\r\n            return;\r\n        }\r\n\r\n        // update just the 'x' coordinate of the velocity\r\n        entity.vel.x = this._velocity;\r\n\r\n        // measure the distance \"walked\" after the last stop\r\n        this._distance += Math.abs(entity.vel.x) * rate;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity \r\n     * @param {(progress: Number)} animation\r\n     */\r\n    animate(entity, animations) {\r\n        let tile;\r\n        if (this.distance > 0) {\r\n            // use main animation - it for sure exists\r\n            const animation = animations.get(this.NAME);\r\n            tile = animation(entity.lifetime);\r\n        }\r\n\r\n        return { tile, mirrored: entity.vel.x < 0 };\r\n    }\r\n\r\n    obstructed(entity, obstacle, direction) {\r\n        switch (direction) {\r\n            case Entity.COLLIDE_LEFT:\r\n            case Entity.COLLIDE_RIGHT:\r\n                this._distance = 0;\r\n                this._velocity = -this._velocity;\r\n                break;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/Wander.js","import { SpriteSheet } from './SpriteSheet.js';\r\n\r\nexport class Font {\r\n\r\n    /**\r\n     * \r\n     * @param {SpriteSheet} sprites \r\n     * @param {Number} lineHeight \r\n     */\r\n    constructor(sprites, lineHeight) {\r\n        this._sprites = sprites;\r\n        this._lineHeight = lineHeight;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get lineHeight() {\r\n        return this._lineHeight;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Sting} text \r\n     * @param {CanvasRenderingContext2D} context \r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     */\r\n    print(text, context, x, y) {\r\n        let offsetX = 0;\r\n        for (let char of text) {\r\n            const [charWidth] = this._sprites.draw(char, context, x + offsetX, y);\r\n            offsetX += charWidth;\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Font.js","import { CONFIG } from './config.js';\r\nimport { View } from './View.js';\r\nimport { Timer } from './Timer.js';\r\nimport { KeyboardManager } from './KeyboardManager.js';\r\nimport { setupMarioKeyboard } from './keyboard.js';\r\nimport { createLoadLevel } from './loaders/level.js';\r\nimport { loadEntities } from './entities/entities.js';\r\nimport { setupMouseControl } from './debug.js';\r\nimport { loadFont } from './loaders/font.js';\r\nimport {\r\n    createDebugTileCollisionLayer,\r\n    createDebugEntityLayer,\r\n    createDebugViewLayer\r\n} from './layers/debug.js';\r\nimport { createDashboardLayer } from './layers/dashboard.js';\r\n\r\nimport { Entity } from './Entity.js';\r\nimport { BePlayerControlTrait as BePlayerControl } from './traits/BePlayerControl.js';\r\n\r\n// FIXME: temporary this is here\r\n/**\r\n * \r\n * @param {Entity} player \r\n * @param {Level} level\r\n * @returns {Entity}\r\n */\r\nfunction createPlayerEnvironment(player, level) {\r\n    // create a fictitious entity\r\n    const playerEnv = new Entity();\r\n    playerEnv.draw = () => { };\r\n    playerEnv.registerTrait(new BePlayerControl(player, level.getProp('time')));\r\n    level.addEntity(playerEnv);\r\n    return playerEnv;\r\n}\r\n\r\nasync function main(canvas) {\r\n    const context = canvas.getContext('2d');\r\n    context.imageSmoothingEnabled = false;\r\n    context.mozImageSmoothingEnabled = false;\r\n    context.webkitImageSmoothingEnabled = false;\r\n\r\n    const keyboardManager = new KeyboardManager();\r\n\r\n    const entityFactory = await loadEntities();\r\n    const loadLevel = createLoadLevel(entityFactory);\r\n    const level = await loadLevel('1_1');\r\n\r\n    const view = new View(CONFIG.VIEW_WIDTH, CONFIG.VIEW_HEIGHT);\r\n\r\n    const mario = level.getMario();\r\n\r\n    // setup the keyboard actions for Mario\r\n    // adn start the keyboard manager\r\n    setupMarioKeyboard(mario, keyboardManager);\r\n    keyboardManager.start(window);\r\n\r\n    // DEBUG: add Mario easy replacement if needed\r\n    if (CONFIG.DEBUG_MARIO) {\r\n        setupMouseControl(mario, canvas, view);\r\n    }\r\n\r\n    // DEBUG: add visual collisions if needed\r\n    if (CONFIG.DEBUG_TILE_COLLISION) {\r\n        level.addLayer(createDebugTileCollisionLayer(level));\r\n        level.addLayer(createDebugEntityLayer(level));\r\n    }\r\n\r\n    if (CONFIG.DEBUG_VIEW_SCROLL) {\r\n        level.addLayer(createDebugViewLayer(view));\r\n    }\r\n\r\n    // FIXME: temporary this is here\r\n    const playerEnv = createPlayerEnvironment(mario, level);\r\n\r\n    const font = await loadFont();\r\n    level.addLayer(createDashboardLayer(font, playerEnv, level));\r\n\r\n    const timer = new Timer(CONFIG.RATE);\r\n    timer.update = function (rate) {\r\n        // update all level entities (including Mario)\r\n        level.update(rate);\r\n\r\n\r\n        // move the camera/view together with Mario\r\n        // TODO: Don't position Mario always in the center, allow some margin left and right\r\n        view.pos.x = Math.max(0, mario.pos.x - view.size.x / 2);\r\n\r\n        // draw next frame\r\n        level.draw(context, view);\r\n    };\r\n\r\n    timer.start();\r\n}\r\n\r\nconst canvas = document.getElementById('screen');\r\nmain(canvas);\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import { Vector } from './math.js';\r\n\r\nexport class View {\r\n    constructor(width, height) {\r\n        this._pos = new Vector(0, 0);\r\n        this._size = new Vector(width, height);\r\n    }\r\n\r\n    /**\r\n     * @returns {Vector}\r\n     */\r\n    get pos() {\r\n        return this._pos;\r\n    }\r\n\r\n    /**\r\n     * @returns {Vector}\r\n     */\r\n    get size() {\r\n        return this._size;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/View.js","export class Timer {\r\n    constructor(rate = 1 / 60) {\r\n        this._rate = rate;\r\n        this._lastTime = 0;\r\n        this._accumulatedTime = 0;\r\n    }\r\n\r\n    _updateProxy(time) {\r\n        this._accumulatedTime += (time - this._lastTime) / 1000;\r\n\r\n        // temporary fix for not updating so often\r\n        if (this._accumulatedTime > 1) {\r\n            this._accumulatedTime = 1;\r\n        }\r\n\r\n        while (this._accumulatedTime > this._rate) {\r\n            this._accumulatedTime -= this._rate;\r\n\r\n            this.update(this._rate);\r\n        }\r\n        this._lastTime = time;\r\n\r\n        this._enqueue();\r\n    }\r\n\r\n    _enqueue() {\r\n        requestAnimationFrame(this._updateProxy.bind(this));\r\n    }\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    update(rate) {\r\n        // users should overwrite it\r\n        throw new Error(\"Users should attach a real update method\");\r\n    }\r\n\r\n    start() {\r\n        this._enqueue();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Timer.js","import * as logger from './logger.js';\r\n\r\nexport const KEY_STATE_RELEASED = 0;\r\nexport const KEY_STATE_PRESSED = 1;\r\n\r\nexport class KeyboardManager {\r\n    constructor() {\r\n        // keyCode to registered callback\r\n        this._keyMap = new Map();\r\n\r\n        // down-up state for a key\r\n        this._keyState = new Map();\r\n\r\n        this._started = false;\r\n    }\r\n\r\n    start(window) {\r\n        if (this._started) {\r\n            logger.logWarn(\"KeyboardManager is already started\");\r\n            return;\r\n        }\r\n\r\n        logger.logDbg(\"KeyboardManager is started\");\r\n\r\n        ['keydown', 'keyup'].forEach(eventName => {\r\n            window.addEventListener(eventName, event => {\r\n                this._handleEvent(event);\r\n            });\r\n        });\r\n    }\r\n\r\n    register(key, callback) {\r\n        this._keyMap.set(key, callback);\r\n        // this._keyState.set(key, KEY_STATE_RELEASED);\r\n    }\r\n\r\n    _handleEvent(event) {\r\n        const key = event.keyCode;\r\n\r\n        const callback = this._keyMap.get(key);\r\n        if (!callback) {\r\n            // not interested in this key\r\n            return;\r\n        }\r\n\r\n        // no browser's default action on any registered keys\r\n        event.preventDefault();\r\n\r\n        const newState = event.type === \"keydown\" ? KEY_STATE_PRESSED : KEY_STATE_RELEASED;\r\n        if (this._keyState.get(key) !== newState) {\r\n            callback(newState);\r\n            this._keyState.set(key, newState);\r\n        }\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/KeyboardManager.js","// constants for the keyboard control - these are keyCode \r\nconst KEY_LEFT = 65;     // A\r\nconst KEY_RIGHT = 68;    // D\r\nconst KEY_TURBO = 79;    // O\r\nconst KEY_JUMP = 80;     // P\r\n\r\n/**\r\n * \r\n * @param {Entity} mario \r\n * @param {KeyboardManager} keyboardManager \r\n */\r\nexport function setupMarioKeyboard(mario, keyboardManager) {\r\n    keyboardManager.register(KEY_JUMP, keyState => {\r\n        if (keyState) {\r\n            mario.jump.start();\r\n        } else {\r\n            mario.jump.cancel();\r\n        }\r\n    });\r\n    keyboardManager.register(KEY_LEFT, keyState => {\r\n        mario.walk.left(!!keyState);\r\n    });\r\n    keyboardManager.register(KEY_RIGHT, keyState => {\r\n        mario.walk.right(!!keyState);\r\n    });\r\n    keyboardManager.register(KEY_TURBO, keyState => {\r\n        mario.walk.turbo(!!keyState);\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/keyboard.js","import * as logger from '../logger.js';\r\nimport { Tile } from '../Tile.js';\r\nimport { Level } from '../Level.js';\r\nimport { Matrix } from '../math.js';\r\nimport { createBackgroundLayer } from '../layers/background.js';\r\nimport { createEntitiesLayer } from '../layers/entities.js';\r\nimport { loadDataLevel } from './utils.js';\r\nimport { loadSprites } from './sprites.js';\r\n\r\nfunction* expandSpan(xStart, xLen, yStart, yLen) {\r\n    const xEnd = xStart + xLen;\r\n    const yEnd = yStart + yLen;\r\n    for (let x = xStart; x < xEnd; ++x) {\r\n        for (let y = yStart; y < yEnd; ++y) {\r\n            yield { x, y };\r\n        }\r\n    }\r\n}\r\n\r\nfunction expandRange(range) {\r\n    if (range.length === 4) {\r\n        const [xStart, xLen, yStart, yLen] = range;\r\n        return expandSpan(xStart, xLen, yStart, yLen);\r\n\r\n    } else if (range.length === 3) {\r\n        const [xStart, xLen, yStart] = range;\r\n        return expandSpan(xStart, xLen, yStart, 1);\r\n\r\n    } else if (range.length === 2) {\r\n        const [xStart, yStart] = range;\r\n        return expandSpan(xStart, 1, yStart, 1);\r\n    }\r\n    throw new Error(`Unsupported range params length ${range.length}`);\r\n}\r\n\r\nfunction* expandRanges(ranges) {\r\n    // for (const range of ranges) {\r\n    //     for (const item of expandRange(range)) {\r\n    //         yield item;\r\n    //     }\r\n    // }\r\n\r\n    // this is the same but with Yield Delegation construct\r\n    for (const range of ranges) {\r\n        yield* expandRange(range);\r\n    }\r\n}\r\n\r\n\r\nfunction* expandTiles(tiles, patterns) {\r\n\r\n    function* walkTiles(tiles, offsetX, offsetY) {\r\n        for (const tile of tiles) {\r\n            for (const { x, y } of expandRanges(tile.ranges)) {\r\n                // take in mind the 'offset'\r\n                const realX = x + offsetX;\r\n                const realY = y + offsetY;\r\n\r\n                // check if want to draw a pattern (a block of predefined tiles)\r\n                // e.g. like \"little\" backgrounds over the main\r\n                const patternName = tile.pattern;\r\n                if (patternName) {\r\n                    const patternSpec = patterns[patternName];\r\n                    if (patternSpec) {\r\n                        // Note - patterns can have patterns - e.g. recursion\r\n                        yield* walkTiles(patternSpec.tiles, realX, realY);\r\n                    } else {\r\n                        logger.logWarn(`No pattern defined with name ${patternName}`);\r\n                    }\r\n                } else {\r\n                    yield {\r\n                        x: realX, y: realY, tile: new Tile(tile)\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    yield* walkTiles(tiles, 0, 0);\r\n}\r\n\r\nfunction createGrid(tiles, patterns) {\r\n    const grid = new Matrix();\r\n    for (const { x, y, tile } of expandTiles(tiles, patterns)) {\r\n        grid.set(x, y, tile);\r\n    }\r\n\r\n    return grid;\r\n}\r\n\r\n\r\n// in order to get the 'entityFactory' from main.js will wrap 'loadLevel' in\r\n// another function that creates it\r\nexport function createLoadLevel(entityFactory) {\r\n    // now this entityFactory has multiple factory functions can be called multiple times\r\n    // e.g. : entityFactory = {mario, goomba, koopa, ... }\r\n\r\n\r\n    /**\r\n     * @param {String} name \r\n     * @returns {Promise<Level>}\r\n     */\r\n    function loadLevel(name) {\r\n        return loadDataLevel(name).\r\n            then(levelSpec => Promise.all([levelSpec, loadSprites(levelSpec.sprites)])).\r\n            then(([levelSpec, backgroundSprites]) => {\r\n                // parse the level's background tiles, entities and other props\r\n                const { layers, patterns, entities, props } = levelSpec;\r\n\r\n                // TODO: tileSize should be get from the backgroundSprites.getWidth()/getHeight()\r\n                const tileSize = 16;\r\n\r\n                // create the main collision grid\r\n                const mergedTiles = layers.reduce((mergedTiles, layerSpec) => {\r\n                    return mergedTiles.concat(layerSpec.tiles);\r\n                }, []);\r\n                const grid = createGrid(mergedTiles, patterns);\r\n\r\n                // create the level\r\n                const level = new Level(name, grid, tileSize, props);\r\n\r\n                // create all background layers - the drawing ones\r\n                layers.forEach(layerSpec => {\r\n                    const tiles = createGrid(layerSpec.tiles, patterns);\r\n                    level.addLayer(createBackgroundLayer(level, tiles, tileSize, backgroundSprites));\r\n                });\r\n\r\n\r\n                // attach entities to the Level\r\n                // Note that Mario will be additionally attached in 'main.js'\r\n                entities.forEach(entitySpec => {\r\n                    const { name, pos: [x, y] } = entitySpec;\r\n                    const createEntity = entityFactory[name];\r\n                    const entity = createEntity();\r\n                    level.addEntity(entity);\r\n                    entity.pos.set(x, y);\r\n                });\r\n\r\n                // create and add the entity layer\r\n                level.addLayer(createEntitiesLayer(level));\r\n\r\n                return level;\r\n            });\r\n    }\r\n    return loadLevel;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/loaders/level.js","export class LayerManager {\r\n    constructor() {\r\n        this._layers = [];\r\n    }\r\n\r\n    /**\r\n     * @param {(context: CanvasRenderingContext2D, view: View) => void} layer \r\n     */\r\n    add(layer) {\r\n        this._layers.push(layer);\r\n    }\r\n\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context \r\n     * @param {View} view \r\n     */\r\n    draw(context, view) {\r\n        this._layers.forEach(layer => layer(context, view));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/LayerManager.js","export class Bounds {\r\n    /**\r\n     * \r\n     * @param {Vector} pos \r\n     * @param {Vector} size \r\n     * @param {Vector} offset \r\n     */\r\n    constructor(pos, size, offset) {\r\n        this.pos = pos;\r\n        this.size = size;\r\n        this.offset = offset;\r\n    }\r\n\r\n    get bottom() {\r\n        return this.pos.y + this.size.y + this.offset.y;\r\n    }\r\n\r\n    set bottom(y) {\r\n        this.pos.y = y - (this.size.y + this.offset.y);\r\n    }\r\n\r\n    get top() {\r\n        return this.pos.y + this.offset.y;\r\n    }\r\n\r\n    set top(y) {\r\n        this.pos.y = y - this.offset.y;\r\n    }\r\n\r\n    get left() {\r\n        return this.pos.x + this.offset.x;\r\n    }\r\n\r\n    set left(x) {\r\n        this.pos.x = x - this.offset.x;\r\n    }\r\n\r\n    get right() {\r\n        return this.pos.x + this.size.x + this.offset.x;\r\n    }\r\n\r\n    set right(x) {\r\n        this.pos.x = x - (this.size.x + this.offset.x);\r\n    }\r\n\r\n    overlaps(otherBounds) {\r\n        return this.bottom > otherBounds.top &&\r\n            this.top < otherBounds.bottom &&\r\n            this.right > otherBounds.left &&\r\n            this.left < otherBounds.right;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/Bounds.js","import { Entity } from './Entity.js';\r\nimport { TileResolver } from './TileResolver.js';\r\n\r\nexport class TileCollider {\r\n    /**\r\n     * @param {Matrix} tiles \r\n     * @param {Number} tileSize \r\n     */\r\n    constructor(tiles, tileSize) {\r\n        this._tiles = new TileResolver(tiles, tileSize);\r\n    }\r\n\r\n    /**\r\n     * @returns {TileResolver}\r\n     */\r\n    getTileResolver() {\r\n        return this._tiles;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity \r\n     */\r\n    checkX(entity) {\r\n        // this will optimise to search for collisions only on the borders of the entity\r\n        // not also inside it as we don't need them\r\n        let posX;\r\n        if (entity.vel.x === 0) {\r\n            // we are not moving at all - don't do any checks\r\n            return;\r\n        } else if (entity.vel.x > 0) {\r\n            // moving forward/right\r\n            posX = entity.bounds.right;\r\n        } else {\r\n            // moving backwards/left\r\n            posX = entity.bounds.left;\r\n        }\r\n\r\n        const matches = this._tiles.getByRange(posX, posX,\r\n            entity.bounds.top, entity.bounds.bottom);\r\n\r\n        matches.forEach(match => {\r\n            // check if collided with a ground\r\n            if (match.tile.type !== 'ground') {\r\n                return;\r\n            }\r\n\r\n            // check if the entity is going right\r\n            if (entity.vel.x > 0) {\r\n                if (entity.bounds.right > match.x1) {\r\n                    entity.obstructedBy(match, Entity.COLLIDE_RIGHT);\r\n                }\r\n            }\r\n            // else if going left\r\n            else if (entity.vel.x < 0) {\r\n                if (entity.bounds.left < match.x2) {\r\n                    entity.obstructedBy(match, Entity.COLLIDE_LEFT);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity \r\n     */\r\n    checkY(entity) {\r\n        let posY;\r\n        if (entity.vel.y === 0) {\r\n            // we are not moving at all - don't do any checks\r\n            return;\r\n        } else if (entity.vel.y > 0) {\r\n            // moving down\r\n            posY = entity.bounds.bottom;\r\n        } else {\r\n            // moving up\r\n            posY = entity.bounds.top;\r\n        }\r\n\r\n        const matches = this._tiles.getByRange(entity.bounds.left, entity.bounds.right,\r\n            posY, posY);\r\n\r\n        matches.forEach(match => {\r\n            // check if collided with a ground\r\n            if (match.tile.type !== 'ground') {\r\n                return;\r\n            }\r\n\r\n            // check if the entity is going down (falling)\r\n            if (entity.vel.y > 0) {\r\n                if (entity.bounds.bottom > match.y1) {\r\n                    entity.obstructedBy(match, Entity.COLLIDE_BOTTOM);\r\n                }\r\n            }\r\n            // else if going up (jumping)\r\n            else if (entity.vel.y < 0) {\r\n                if (entity.bounds.top < match.y2) {\r\n                    entity.obstructedBy(match, Entity.COLLIDE_TOP);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/TileCollider.js","import { Entity } from './Entity.js';\r\n\r\nexport class EntityCollider {\r\n    /**\r\n     * \r\n     * @param {Set<Entity>} entities \r\n     */\r\n    constructor(entities) {\r\n        this._entities = entities;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Entity} entity \r\n     */\r\n    check(entity) {\r\n        this._entities.forEach(candidate => {\r\n            // skip the same entity\r\n            if (candidate === entity) {\r\n                return;\r\n            }\r\n\r\n            if (entity.bounds.overlaps(candidate.bounds)) {\r\n                // notify both entities for the collision between them\r\n                entity.collidedWith(candidate);\r\n                candidate.collidedWith(entity);\r\n            }\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/EntityCollider.js","import * as logger from '../logger.js';\r\nimport { CONFIG } from '../config.js';\r\nimport { TileResolver } from '../TileResolver.js';\r\n\r\n/**\r\n * Note - this will redraw the whole level every time\r\n * @param {Level} level \r\n * @param {Matrix} tiles \r\n * @param {SpriteSheet} sprites\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \r\n */\r\nexport function ___createBackgroundLayer(level, tiles, tileSize, sprites) {\r\n    // create a static/cached background image buffer from the level's tiles\r\n    const buffer = document.createElement('canvas');\r\n    buffer.width = level.getWidth();\r\n    buffer.height = level.getHeight();\r\n    const imageContext = buffer.getContext('2d');\r\n\r\n    tiles.forEach((x, y, tile) => {\r\n        sprites.drawTile(tile.name, imageContext, x, y);\r\n    });\r\n\r\n    return function (context, view) {\r\n        logger.logDbg(\"Background layer\");\r\n        context.drawImage(buffer, -view.pos.x, -view.pos.y);\r\n    };\r\n}\r\n\r\n/**\r\n * OPTIMIZATION - this will draw NEW columns only when only on demand (when needed while scrolling)\r\n * Note - old already drawn columns are already buffered\r\n * Note - with this case we still have a very huge buffer (as we've set the whole level's size) \r\n * in memory.\r\n * @param {Level} level\r\n * @param {Matrix} tiles \r\n * @param {SpriteSheet} sprites\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \r\n */\r\nexport function __createBackgroundLayer(level, tiles, tileSize, sprites) {\r\n    const tileResolver = new TileResolver(tiles, tileSize);\r\n\r\n    // create a static/cached background image buffer from the level's tiles\r\n    const buffer = document.createElement('canvas');\r\n    buffer.width = level.getWidth();\r\n    buffer.height = level.getHeight();\r\n    const bufferContext = buffer.getContext('2d');\r\n\r\n    function redraw(indexStart, indexEnd) {\r\n        for (let x = indexStart; x <= indexEnd; x++) {\r\n            tiles.forEachInColumn(x, (x, y, tile) => {\r\n                sprites.drawTile(tile.name, bufferContext, x, y);\r\n            });\r\n        }\r\n    }\r\n\r\n    let drawnIndexEnd = 0;\r\n    return function (context, view) {\r\n        logger.logDbg(\"Background layer\");\r\n\r\n        // redraw just the needed view\r\n        const drawWidth = tileResolver.toIndex(view.size.x);\r\n        const drawIndexStart = tileResolver.toIndex(view.pos.x);\r\n        const drawIndexEnd = drawIndexStart + drawWidth;\r\n        if (drawnIndexEnd < drawIndexEnd) {\r\n            drawnIndexEnd = drawIndexEnd;\r\n            logger.logDbg(\"Background layer - draw news column up to \", drawnIndexEnd);\r\n            redraw(drawIndexStart, drawIndexEnd);\r\n        }\r\n\r\n\r\n        context.drawImage(buffer, -view.pos.x, -view.pos.y);\r\n    };\r\n}\r\n\r\n/**\r\n * OPTIMIZATION - keep a small buffer in memory - just as needed to draw the view\r\n * so a little wider than view's size\r\n * ALso - we can redraw ONLY when there's a change in view's position\r\n * @param {Level} level \r\n * @param {Matrix} tiles\r\n * @param {SpriteSheet} sprites\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \r\n */\r\nexport function _createBackgroundLayer(level, tiles, tileSize, sprites) {\r\n    const tileResolver = new TileResolver(tiles, tileSize);\r\n\r\n    // create a static/cached background image buffer from the level's tiles\r\n    const buffer = document.createElement('canvas');\r\n    buffer.width = CONFIG.VIEW_WIDTH + tileSize;\r\n    buffer.height = CONFIG.VIEW_HEIGHT;\r\n    const bufferContext = buffer.getContext('2d');\r\n\r\n\r\n    function redraw(indexStart, indexEnd) {\r\n        let hasTileAnimations = false;\r\n        for (let x = indexStart; x <= indexEnd; x++) {\r\n            tiles.forEachInColumn(x, (x, y, tile) => {\r\n                const tileName = tile.name;\r\n                if (sprites.isTileAnim(tileName)) {\r\n                    // animate the tile\r\n                    sprites.drawTileAnim(tileName, bufferContext, x - indexStart, y, level.getTotalTime());\r\n                    hasTileAnimations = true;\r\n                } else {\r\n                    // normal tie tile draw\r\n                    sprites.drawTile(tileName, bufferContext, x - indexStart, y);\r\n                }\r\n            });\r\n        }\r\n        return hasTileAnimations;\r\n    }\r\n\r\n    let lastIndexStart, lastIndexEnd, hasTileAnimations;\r\n\r\n    return function (context, view) {\r\n        logger.logDbg(\"Background layer\");\r\n\r\n        // redraw just the needed view an ONLY when needed\r\n        const drawWidth = tileResolver.toIndex(view.size.x);\r\n        const drawIndexStart = tileResolver.toIndex(view.pos.x);\r\n        const drawIndexEnd = drawIndexStart + drawWidth;\r\n\r\n        // redraw if there are animations or view's positions has changed\r\n        if (hasTileAnimations ||\r\n            (lastIndexStart !== drawIndexStart && lastIndexEnd !== drawIndexEnd)) {\r\n            logger.logDbg(\"Background layer redrawing\");\r\n            hasTileAnimations = redraw(drawIndexStart, drawIndexEnd);\r\n            lastIndexStart = drawIndexStart;\r\n            lastIndexEnd = drawIndexEnd;\r\n        }\r\n\r\n        context.drawImage(buffer, -view.pos.x % tileSize, -view.pos.y);\r\n    };\r\n}\r\n\r\n/**\r\n * OPTIMIZATION - keep a small buffer in memory - just as needed to draw the view\r\n * so a little wider than view's size\r\n * ALso - we can redraw ONLY when there's a change in view's position\r\n * @param {Level} level \r\n * @param {Matrix} tiles\r\n * @param {SpriteSheet} sprites\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \r\n */\r\nexport function createBackgroundLayer(level, tiles, tileSize, sprites) {\r\n    const tileResolver = new TileResolver(tiles, tileSize);\r\n\r\n    // create a static/cached background image buffer from the level's tiles\r\n    const buffer = document.createElement('canvas');\r\n    buffer.width = CONFIG.VIEW_WIDTH + tileSize;\r\n    buffer.height = CONFIG.VIEW_HEIGHT;\r\n    const bufferContext = buffer.getContext('2d');\r\n\r\n\r\n    function redraw(indexStart, indexEnd) {\r\n        bufferContext.clearRect(0, 0, buffer.width, buffer.height);\r\n        for (let x = indexStart; x <= indexEnd; x++) {\r\n            tiles.forEachInColumn(x, (x, y, tile) => {\r\n                const tileName = tile.name;\r\n                if (sprites.isTileAnim(tileName)) {\r\n                    // animate the tile\r\n                    sprites.drawTileAnim(tileName, bufferContext, x - indexStart, y, level.getTotalTime());\r\n                } else {\r\n                    // normal tie tile draw\r\n                    sprites.drawTile(tileName, bufferContext, x - indexStart, y);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return function (context, view) {\r\n        logger.logDbg(\"Background layer\");\r\n\r\n        // redraw just the needed view an ONLY when needed\r\n        const drawWidth = tileResolver.toIndex(view.size.x);\r\n        const drawIndexStart = tileResolver.toIndex(view.pos.x);\r\n        const drawIndexEnd = drawIndexStart + drawWidth;\r\n\r\n        logger.logDbg(\"Background layer redrawing\");\r\n        redraw(drawIndexStart, drawIndexEnd);\r\n\r\n        context.drawImage(buffer, -view.pos.x % tileSize, -view.pos.y);\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/layers/background.js","import * as logger from '../logger.js';\r\n\r\n/**\r\n * @param {Level} level \r\n * @param {Number} maxEntityWidth \r\n * @param {Number} maxEntityHeight\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \r\n */\r\nexport function createEntitiesLayer(level, maxEntityWidth = 64, maxEntityHeight = 64) {\r\n    // create a middle image buffer in which each entity will be drawn first\r\n    const buffer = document.createElement('canvas');\r\n    buffer.width = maxEntityWidth;\r\n    buffer.height = maxEntityHeight;\r\n    const bufferContext = buffer.getContext('2d');\r\n\r\n    return function (context, view) {\r\n        logger.logDbg(\"Entities layer\");\r\n\r\n        const { x, y } = view.pos;\r\n        level.forEachEntity(entity => {\r\n            // draw the entity tile in the buffer image after it's been cleared\r\n            bufferContext.clearRect(0, 0, maxEntityWidth, maxEntityHeight);\r\n            entity.draw(bufferContext, level);\r\n\r\n            // draw the buffer image in the main canvas\r\n            context.drawImage(buffer, entity.pos.x - x, entity.pos.y - y);\r\n        });\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/layers/entities.js","export function createAnimation(frames, frameRate = 5) {\r\n    // the frameRate is used to reduce the 'progress' if needed as otherwise the frames\r\n    // will be changing too fast\r\n\r\n    if (frames instanceof Array) {\r\n        // progress - this has varios meangings depending on the context\r\n        // it could be distance when walking\r\n        // or simple time (seconds)\r\n        return function (progress) {\r\n            const frameIndex = Math.floor(progress / frameRate) % frames.length;\r\n            return frames[frameIndex];\r\n        };\r\n    }\r\n\r\n    // if just a single frame specified then return a \"fixed\" function\r\n    return function () {\r\n        return frames;\r\n    };\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/animation.js","import { loadMario } from './Mario.js';\r\nimport { loadGoomba } from './Goomba.js';\r\nimport { loadKoopa } from './Koopa.js';\r\n\r\nexport function loadEntities() {\r\n\r\n    // the aim is to have mfactory methods like:\r\n    // entityFactory.mario()\r\n    // entityFactory.goomba()\r\n    // entityFactory.koopa()\r\n\r\n    // I. simple version relying on the fact that each 'loadXXX' \r\n    // that resolves to a factory function that is named\r\n    // specifically like this: \"mari/goomba/koopa/....\"\r\n    const entityFactory = {};\r\n    return Promise.all([loadMario(), loadGoomba(), loadKoopa()]).\r\n        then(factories => {\r\n            factories.forEach(factory => entityFactory[factory.name] = factory);\r\n\r\n            return entityFactory;\r\n        });\r\n\r\n\r\n    // II. a different solution - specifically name the factories\r\n    // const entityFactory = {};\r\n    // function addAs(name) {\r\n    //     return factory => entityFactory[name] = factory;\r\n    // }\r\n    // return Promise.all([\r\n    //     loadMario().then(addAs('mario')),\r\n    //     loadGoomba().then(addAs('goomba')),\r\n    //     loadKoopa().then(addAs('koopa'))]).\r\n    //     then(() => entityFactory);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/entities/entities.js","import { Entity } from '../Entity.js';\r\nimport { WalkTrait as Walk } from '../traits/Walk.js';\r\nimport { JumpTrait as Jump } from '../traits/Jump.js';\r\nimport { BePhysicsTrait as BePhysics } from '../traits/BePhysics.js';\r\nimport { BeSolidTrait as BeSolid } from '../traits/BeSolid.js';\r\nimport { BeStomperTrait as BeStomper } from '../traits/BeStomper.js';\r\nimport { BeKillableTrait as BeKillable } from '../traits/BeKillable.js';\r\nimport { loadSprites } from '../loaders/sprites.js';\r\nimport { createDraw } from './utils.js';\r\n\r\n// loadMario() will be async\r\nexport function loadMario() {\r\n    return loadSprites('mario', true).\r\n        then(createMarioFactory);\r\n}\r\n\r\n/**\r\n * return a synchronous create function\r\n * @param {SpriteSheet} sprites \r\n */\r\nfunction createMarioFactory(sprites) {\r\n    // moved all the support/stateless functionality out of the createMario scope\r\n    // as they are needed to be created only ones \r\n\r\n    // create the draw method - common/static/stateless for all Goomba entities\r\n    const draw = createDraw(sprites, 'idle');\r\n\r\n    // createMario() will be synchronous\r\n    return function mario() {\r\n        const entity = new Entity('mario');\r\n        entity.size.set(14, 16);\r\n\r\n        entity.registerTrait(new BePhysics());\r\n        entity.registerTrait(new BeSolid());\r\n        entity.registerTrait(new BeStomper());\r\n        entity.registerTrait(new BeKillable(0));\r\n        entity.registerTrait(new Walk());\r\n        entity.registerTrait(new Jump());\r\n\r\n        entity.registerAnimationsFromSprites(sprites);\r\n\r\n        entity.draw = draw;\r\n\r\n        return entity;\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/entities/Mario.js","import { Trait } from '../Trait.js';\r\n\r\nconst DRAG_FACTOR_NORMAL = 1 / 1000;\r\nconst DRAG_FACTOR_TURBO = 1 / 5000;\r\n\r\nexport class WalkTrait extends Trait {\r\n    constructor(accelerate = true) {\r\n        super('walk');\r\n\r\n        this._accelerate = accelerate;\r\n\r\n        this._direction = 0;\r\n\r\n        // used if WalkTrait.IS_ACCELERATING is false\r\n        this._velocity = 100;\r\n\r\n        // used if WalkTrait.IS_ACCELERATING is true\r\n        this._acceleration = 400;\r\n        this._deacceleration = 300;\r\n        this._dragFactor = DRAG_FACTOR_NORMAL;\r\n\r\n        // the distance \"walked\" when in single \"walking\" phase\r\n        this._distance = 0;\r\n\r\n        // by default let the heading (last direction) be right\r\n        this._heading = 1;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get direction() {\r\n        return this._direction;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get distance() {\r\n        return this._distance;\r\n    }\r\n\r\n    /**\r\n     * The direction to where the entity is heading - \"left or right\" of course\r\n     * @returns {Number}\r\n     */\r\n    get heading() {\r\n        return this._heading;\r\n    }\r\n\r\n    /**\r\n     * Starts or stops moving left\r\n     * @param {boolean} startAction \r\n     */\r\n    left(startAction) {\r\n        this._direction += startAction ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * Starts or stops moving right\r\n     * @param {boolean} startAction \r\n     */\r\n    right(startAction) {\r\n        this._direction += startAction ? 1 : -1;\r\n    }\r\n\r\n    /**\r\n     * Starts or stops \"turbo\" (faster running)\r\n     * @param {boolean} startAction \r\n     */\r\n    turbo(startAction) {\r\n        this._dragFactor = startAction ? DRAG_FACTOR_TURBO : DRAG_FACTOR_NORMAL;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {Number} rate\r\n     * @param {Level} level  \r\n     */\r\n    update(entity, rate) {\r\n        // update just the 'x' coordinate of the velocity/acceleration\r\n        if (this._accelerate) {\r\n            this._updateAcceleration(entity, rate);\r\n        } else {\r\n            this._updateConstantVelocity(entity, rate);\r\n        }\r\n    }\r\n\r\n    _updateConstantVelocity(entity, rate) {\r\n        // this will be with static velocity\r\n        entity.vel.x = this._direction * this._velocity;\r\n\r\n        if (this._direction !== 0) {\r\n            // measure the distance \"walked\" after the last stop\r\n            this._distance += Math.abs(entity.vel.x) * rate;\r\n            // also remember where the entity is heading last\r\n            this._heading = this._direction;\r\n        } else {\r\n            this._distance = 0;\r\n        }\r\n    }\r\n\r\n    _updateAcceleration(entity, rate) {\r\n        if (this._direction !== 0) {\r\n            // this will be with incrementing speed - e.g. accelerating\r\n            entity.vel.x += this._direction * (this._acceleration * rate);\r\n\r\n            // also remember where the entity is heading last\r\n            // but don't allow to turn while jumping\r\n            if (!entity.jump || !entity.jump.falling) {\r\n                // check if there's Jump trait also\r\n                this._heading = this._direction;\r\n            }\r\n        } else if (entity.vel.x !== 0) {\r\n            // if stopped walking (e.g. this._direction is 0)\r\n            // but it's still moving because of the acceleration\r\n            // then apply some DEacceleration that will stop him completely\r\n\r\n            // this will in fact speed up the drag\r\n            const deaccel = Math.min(Math.abs(entity.vel.x), this._deacceleration * rate);\r\n            entity.vel.x -= entity.vel.x > 0 ? deaccel : -deaccel;\r\n        } else {\r\n            this._distance = 0;\r\n        }\r\n\r\n        if (entity.vel.x !== 0) {\r\n            // this will add some drag - the higher the velocity the greater the drag\r\n            // it will be always with the opposite sign (+/- ) the velocity, so we'll be always\r\n            // subtracting from the velocity - so real drag\r\n\r\n            // note - put the drag \r\n            // 1. while moving (e.g a slowing little by little and thus applying a max speed)\r\n            // 2. even if stopped walking (e.g. this._direction is 0) - this will allow to \"slide\" a little as it has some inercia \r\n            const drag = this._dragFactor * entity.vel.x * Math.abs(entity.vel.x);\r\n            entity.vel.x -= drag;\r\n        }\r\n\r\n        // measure the distance \"walked\" after the last stop\r\n        this._distance += Math.abs(entity.vel.x) * rate;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity \r\n     * @param {(progress: Number)} animation\r\n     * @param {Number} levelTotalTime \r\n     */\r\n    animate(entity, animations, levelTotalTime) {\r\n        let tile;\r\n        if (this.distance > 0) {\r\n            if ((entity.vel.x > 0 && this.direction < 0) ||\r\n                (entity.vel.x < 0 && this.direction > 0)) {\r\n                // when \"breaking\" - e.g. changing the direction\r\n\r\n                // use the 'break' animation\r\n                const animation = animations.get('break');\r\n                if (animation) {\r\n                    tile = animation(levelTotalTime);\r\n                }\r\n            } else {\r\n                // use main animation - it for sure exists\r\n                const animation = animations.get(this.NAME);\r\n                tile = animation(this.distance);\r\n            }\r\n        }\r\n        const mirrored = this.heading < 0;\r\n\r\n        return { tile, mirrored };\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/Walk.js","import { Trait } from '../Trait.js';\r\nimport { Entity } from '../Entity.js';\r\n\r\nexport class JumpTrait extends Trait {\r\n    constructor() {\r\n        super('jump');\r\n\r\n        this._duration = 0.3;\r\n        this._velocity = 200;\r\n        this._engagedTime = 0;\r\n\r\n        // state to indicate whether we can jump - it can only from when touched a 'ground'\r\n        // this means that there will be needed a 2 step-update in order to animate\r\n        this._ready = 0;\r\n\r\n        // allow a grace time in which we can jump, e.g.\r\n        // next jump can occur while falling and start\r\n        // is pressed when very close to the ground (allow a grace period)\r\n        this._requestTime = 0;\r\n        this._gracePeriod = 0.2; // seconds\r\n\r\n        // the faster we walk/run the higher the jump\r\n        this._speedBoost = 0.3;\r\n    }\r\n\r\n    /**\r\n     * @returns {boolean}\r\n     */\r\n    get falling() {\r\n        return this._ready < 0;\r\n    }\r\n\r\n    start() {\r\n        this._requestTime = this._gracePeriod;\r\n    }\r\n\r\n    cancel() {\r\n        this._engagedTime = 0;\r\n        this._requestTime = 0;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {Number} rate\r\n     * @param {Level} level  \r\n     */\r\n    update(entity, rate) {\r\n        // check if we've pressed to 'start'\r\n        // then we'll start to look for an opportunaty to jump\r\n        if (this._requestTime > 0) {\r\n            if (this._ready > 0) {\r\n                this._engagedTime = this._duration;\r\n                this._requestTime = 0;\r\n            } else {\r\n                this._requestTime -= rate;\r\n            }\r\n        }\r\n\r\n        if (this._engagedTime > 0) {\r\n            // update just the 'y' coordinate\r\n            // the faster we run the more speed we gain and thus higher jump\r\n            entity.vel.y = -(this._velocity + Math.abs(entity.vel.x) * this._speedBoost);\r\n            this._engagedTime -= rate;\r\n        }\r\n\r\n        this._ready--;\r\n    }\r\n\r\n    obstructed(entity, obstacle, direction) {\r\n        switch (direction) {\r\n            case Entity.COLLIDE_BOTTOM:\r\n                // make ready to jump\r\n                this._ready = 1;\r\n                break;\r\n            case Entity.COLLIDE_TOP:\r\n                // stop the jumping \r\n                this.cancel();\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity \r\n     * @param {Map<name:String, (progress: Number)>} animations\r\n     * @param {Number} levelTotalTime \r\n     */\r\n    animate(entity, animations, levelTotalTime) {\r\n        let tile;\r\n\r\n        // catch the case when jumping\r\n        if (this.falling) {\r\n            // get the main animation - it for sure exists\r\n            const animation = animations.get(this.NAME);\r\n            tile = animation(levelTotalTime);\r\n        }\r\n\r\n        return { tile };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/Jump.js","import { Trait } from '../Trait.js';\r\n\r\nexport class BeStomperTrait extends Trait {\r\n    constructor() {\r\n        super('stomper', true);\r\n\r\n        this._bounceVelocity = 400;\r\n\r\n        /**\r\n         * @param {Function[]}\r\n         */\r\n        this._stompListeners = [];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Function} callback \r\n     */\r\n    addListener(callback) {\r\n        this._stompListeners.push(callback);\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} us \r\n     * @param {Entity} otherEntity \r\n     */\r\n    collided(us, otherEntity) {\r\n        if (!otherEntity.killable || otherEntity.killable.dead) {\r\n            return;\r\n        }\r\n\r\n        if (us.pos.y < otherEntity.pos.y) {\r\n            this.onStomp(us, otherEntity);\r\n            this._stompListeners.forEach(callback => callback(us, otherEntity));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} us \r\n     * @param {Entity} otherEntity \r\n     */\r\n    onStomp(us, otherEntity) {\r\n        // go to the top of the other entity, not to collide agin with it on the next check\r\n        us.bounds.bottom = otherEntity.bounds.top;\r\n\r\n        // make the stomper bounce\r\n        us.vel.y = -this._bounceVelocity;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/BeStomper.js","import { Entity } from '../Entity.js';\r\nimport { Trait } from '../Trait.js';\r\nimport { WanderTrait as Wander } from '../traits/Wander.js';\r\nimport { BePhysicsTrait as BePhysics } from '../traits/BePhysics.js';\r\nimport { BeSolidTrait as BeSolid } from '../traits/BeSolid.js';\r\nimport { BeKillableTrait as BeKillable } from '../traits/BeKillable.js';\r\nimport { loadSprites } from '../loaders/sprites.js';\r\nimport { createDraw } from './utils.js';\r\n\r\nexport function loadGoomba() {\r\n    return loadSprites('goomba', true).\r\n        then(createGoombaFactory);\r\n}\r\n\r\n\r\n/**\r\n * return a synchronous create function\r\n * @param {SpriteSheet} sprites \r\n */\r\nfunction createGoombaFactory(sprites) {\r\n\r\n    // create the draw method - common/static/stateless for all Goomba entities\r\n    const defDraw = createDraw(sprites, 'walk-1');\r\n    const draw = function (context, level) {\r\n        if (this.killable.dead) {\r\n            sprites.draw('flat', context, 0, 0);\r\n            return;\r\n        }\r\n        defDraw.call(this, context, level);\r\n    };\r\n\r\n    return function goomba() {\r\n        const entity = new Entity('goomba');\r\n        entity.size.set(16, 16);\r\n\r\n        entity.registerTrait(new Behavior());\r\n        entity.registerTrait(new BePhysics());\r\n        entity.registerTrait(new BeSolid());\r\n        entity.registerTrait(new BeKillable());\r\n        entity.registerTrait(new Wander());\r\n\r\n        entity.registerAnimationsFromSprites(sprites);\r\n\r\n        entity.draw = draw;\r\n\r\n        return entity;\r\n    };\r\n}\r\n\r\nclass Behavior extends Trait {\r\n    constructor() {\r\n        super('behavior', true);\r\n    }\r\n\r\n    collided(goomba, otherEntity) {\r\n        if (goomba.killable.dead) {\r\n            // we are already dead - don't interact again on next collisions\r\n            return;\r\n        }\r\n\r\n        // don't check if the other entity is 'Mario'\r\n        // but if the other entity has a special feature,\r\n        // in this case for a trait named 'stomper'\r\n        if (otherEntity.stomper) {\r\n            // Goomba is killed only if the stomper (like Mario) is falling on it\r\n            if (otherEntity.pos.y < goomba.pos.y) {\r\n                // make us stop moving\r\n                goomba.vel.x = 0;\r\n                goomba.wander.pause();\r\n\r\n                // make us killed\r\n                goomba.killable.kill();\r\n            } else {\r\n                // make the stomper killed\r\n                if (otherEntity.killable) {\r\n                    otherEntity.killable.kill();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/entities/Goomba.js","import { Entity } from '../Entity.js';\r\nimport { Trait } from '../Trait.js';\r\nimport { WanderTrait as Wander } from '../traits/Wander.js';\r\nimport { BePhysicsTrait as BePhysics } from '../traits/BePhysics.js';\r\nimport { BeSolidTrait as BeSolid } from '../traits/BeSolid.js';\r\nimport { BeKillableTrait as BeKillable } from '../traits/BeKillable.js';\r\nimport { loadSprites } from '../loaders/sprites.js';\r\nimport { createDraw } from './utils.js';\r\n\r\nexport function loadKoopa() {\r\n    return loadSprites('koopa', true).\r\n        then(createKoopaFactory);\r\n}\r\n\r\n/**\r\n * return a synchronous create function\r\n * @param {SpriteSheet} sprites \r\n */\r\nfunction createKoopaFactory(sprites) {\r\n\r\n    // create the draw method - common/static/stateless for all Koopa entities\r\n    const draw = createDraw(sprites, 'walk-1');\r\n\r\n    return function koopa() {\r\n        const entity = new Entity('koopa');\r\n        entity.size.set(16, 16);\r\n        entity.offset.y = 8;\r\n\r\n        entity.registerTrait(new Behavior());\r\n        entity.registerTrait(new BePhysics());\r\n        entity.registerTrait(new BeSolid());\r\n        entity.registerTrait(new BeKillable());\r\n        entity.registerTrait(new Wander(30));\r\n\r\n        entity.registerAnimationsFromSprites(sprites);\r\n\r\n        entity.draw = draw;\r\n\r\n        return entity;\r\n    };\r\n}\r\n\r\nconst STATE_WALKING = Symbol();\r\nconst STATE_HIDING = Symbol();\r\nconst STATE_PANICING = Symbol();\r\n\r\nclass Behavior extends Trait {\r\n    constructor() {\r\n        super('behavior', true);\r\n\r\n        this._unhideTime = 5;\r\n        this._hidingTime = 0;\r\n\r\n        this._panicVelocity = 300;\r\n        this._wanderVelocity = null;\r\n\r\n        this._state = STATE_WALKING;\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean}\r\n     */\r\n    get hiding() {\r\n        return this._state === STATE_HIDING ||\r\n            this._state === STATE_PANICING;\r\n    }\r\n\r\n    _hide(koopa) {\r\n        koopa.vel.x = 0;\r\n        koopa.wander.pause();\r\n        if (this._wanderVelocity === null) {\r\n            this._wanderVelocity = koopa.wander.velocity;\r\n        }\r\n\r\n        this._state = STATE_HIDING;\r\n        this._hidingTime = 0;\r\n    }\r\n\r\n    _unhide(koopa) {\r\n        koopa.wander.pause(false);\r\n        if (this._wanderVelocity !== null) {\r\n            koopa.wander.velocity = this._wanderVelocity;\r\n        }\r\n        this._state = STATE_WALKING;\r\n    }\r\n\r\n    _handleStopm(koopa, otherEntity) {\r\n        if (this._state === STATE_WALKING ||\r\n            this._state === STATE_PANICING) {\r\n            // make us hide\r\n            this._hide(koopa);\r\n        } else {\r\n            // make us killed\r\n            koopa.killable.kill();\r\n            // make it not 'collidable'\r\n            koopa.solid.disable();\r\n            // make the koopa's shell bounce up a little and continue\r\n            koopa.wander.pause(false);\r\n            koopa.vel.y = -200;\r\n        }\r\n    }\r\n\r\n    _handleNudge(koopa, otherEntity) {\r\n        if (this._state === STATE_WALKING) {\r\n            // make the stomper killed\r\n            if (otherEntity.killable) {\r\n                otherEntity.killable.kill();\r\n            }\r\n        } else if (this._state === STATE_HIDING) {\r\n            // make the stomper kick the koopa's shell\r\n            koopa.wander.velocity = this._panicVelocity * Math.sign(otherEntity.vel.x);\r\n            koopa.wander.pause(false);\r\n            this._state = STATE_PANICING;\r\n        } else {\r\n            // TODO: kill the stomper only if not in the same direction\r\n            if (otherEntity.killable) {\r\n                otherEntity.killable.kill();\r\n            }\r\n        }\r\n    }\r\n\r\n    collided(koopa, otherEntity) {\r\n        if (koopa.killable.dead) {\r\n            // we are already dead - don't interact again on next collisions\r\n            return;\r\n        }\r\n\r\n        if (otherEntity.stomper) {\r\n            // Koopa is hided first and after that killed\r\n            if (otherEntity.pos.y < koopa.pos.y) {\r\n                this._handleStopm(koopa, otherEntity);\r\n            } else {\r\n                this._handleNudge(koopa, otherEntity);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(koopa, rate) {\r\n        if (this._state === STATE_HIDING && !koopa.killable.dead) {\r\n            this._hidingTime += rate;\r\n\r\n            if (this._hidingTime >= this._unhideTime) {\r\n                this._unhide(koopa);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity \r\n     * @param {(progress: Number)} animation\r\n     */\r\n    animate(entity, animations) {\r\n        let tile = this.hiding ? 'hiding' : undefined;\r\n        if (this._state === STATE_HIDING) {\r\n            if (this._hidingTime > 3) {\r\n                // use 'wake' animation - it for sure exists\r\n                const animation = animations.get('wake');\r\n                if (animation) {\r\n                    tile = animation(this._hidingTime);\r\n                }\r\n            }\r\n        }\r\n\r\n        return { tile };\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/entities/Koopa.js","\r\n// debug utility\r\n// 1. Reposition an entity to the clicked position when mouse Left button is pressed\r\n// 2. Scroll the view when the RIGHT mouse button is pressed\r\nexport function setupMouseControl(entity, canvas, view) {\r\n    let lastMouseEvent = null;\r\n    ['mousedown', 'mousemove'].forEach(eventName => {\r\n        canvas.addEventListener(eventName, event => {\r\n            if (event.buttons === 1) {\r\n                // reposition the entity to the desired position\r\n                entity.vel.set(0, 0);\r\n                entity.pos.set(event.offsetX + view.pos.x, event.offsetY + view.pos.y);\r\n            } else if (event.buttons === 2 && lastMouseEvent &&\r\n                lastMouseEvent.buttons === 2 && lastMouseEvent.type === 'mousemove') {\r\n                // move the whole view\r\n                view.pos.x -= event.offsetX - lastMouseEvent.offsetX;\r\n            }\r\n\r\n            lastMouseEvent = event;\r\n        });\r\n    });\r\n\r\n    // prevent the context menu appear on the canvas\r\n    canvas.addEventListener('contextmenu', event => event.preventDefault());\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/debug.js","import { Font } from '../Font.js';\r\nimport { SpriteSheet } from '../SpriteSheet.js';\r\nimport { loadImage } from './utils.js';\r\n\r\nconst CHARS = ' !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~';\r\nconst CHAR_SIZE = 8;\r\n\r\n/**\r\n * @returns {Promise<Font>}\r\n */\r\nexport function loadFont() {\r\n    return loadImage('img/font.png')\r\n        .then(image => {\r\n            const fontSprite = new SpriteSheet(image, false, CHAR_SIZE, CHAR_SIZE);\r\n            const rowLen = image.width;\r\n\r\n            // register all characters ()\r\n            for (let [index, char] of [...CHARS].entries()) {\r\n                const x = (index * CHAR_SIZE) % rowLen;\r\n                const y = Math.floor(index * CHAR_SIZE / rowLen) * CHAR_SIZE;\r\n                fontSprite.register(char, x, y);\r\n            }\r\n\r\n            return new Font(fontSprite, CHAR_SIZE);\r\n        });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/loaders/font.js","import * as logger from '../logger.js';\r\n\r\n/**\r\n * @param {Level} level\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \r\n */\r\nexport function createDebugTileCollisionLayer(level) {\r\n    const tileResolver = level.getTileCollider().getTileResolver();\r\n    const tileSize = tileResolver.getTileSize();\r\n\r\n    const collisionTiles = [];\r\n    // create a SPY on the resolver method\r\n    const getIndexByORIG = tileResolver.getByIndex;\r\n    tileResolver.getByIndex = function (indexX, indexY) {\r\n        collisionTiles.push({ indexX, indexY });\r\n        return getIndexByORIG.call(this, indexX, indexY);\r\n    };\r\n\r\n    return function (context, view) {\r\n        logger.logDbg(\"Debug tile-collision layer\", collisionTiles.length);\r\n\r\n        const { x, y } = view.pos;\r\n        // draw a box around each collision-tile\r\n        context.strokeStyle = 'green';\r\n        collisionTiles.forEach(({ indexX, indexY }) => {\r\n            context.beginPath();\r\n            context.rect(indexX * tileSize - x, indexY * tileSize - y,\r\n                tileSize, tileSize);\r\n            context.stroke();\r\n        });\r\n        collisionTiles.length = 0;\r\n    };\r\n}\r\n\r\n/**\r\n * @param {Level} level\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void} \r\n */\r\nexport function createDebugEntityLayer(level) {\r\n    return function (context, view) {\r\n        logger.logDbg(\"Debug entity layer\");\r\n\r\n        const { x, y } = view.pos;\r\n\r\n        // draw a box around each entity\r\n        // Note - the entity may not be perfectly fit in a grid tile\r\n        context.strokeStyle = 'red';\r\n        level.forEachEntity(entity => {\r\n            context.beginPath();\r\n            context.rect(entity.bounds.left - x, entity.bounds.top - y,\r\n                entity.size.x, entity.size.y);\r\n            context.stroke();\r\n        });\r\n    };\r\n}\r\n\r\n/**\r\n * @param {View} view\r\n * @returns {(context: CanvasRenderingContext2D, view: View) => void}\r\n */\r\nexport function createDebugViewLayer(viewToDraw) {\r\n    return function (context, view) {\r\n        context.strokeStyle = 'purple';\r\n        context.beginPath();\r\n        context.rect(viewToDraw.pos.x - view.pos.x, viewToDraw.pos.y - view.pos.y,\r\n            view.size.x, view.size.y);\r\n        context.stroke();\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/layers/debug.js","import * as logger from '../logger.js';\r\nimport { Font } from '../Font.js';\r\nimport { Level } from '../Level.js';\r\n\r\n\r\nfunction pad(number, len = 6) {\r\n    return ('' + Math.floor(number)).padStart(len, '0');\r\n}\r\n\r\n/**\r\n * @param {Font} font\r\n * @param {Entity} playerEnv \r\n * @param {Level} level \r\n * @returns {(context: CanvasRenderingContext2D) => void} \r\n */\r\nexport function createDashboardLayer(font, playerEnv, level) {\r\n\r\n    const LINE1 = font.lineHeight;\r\n    const LINE2 = font.lineHeight * 2;\r\n\r\n    /**\r\n     * @param {CanvasRenderingContext2D} context\r\n     */\r\n    return function (context) {\r\n        logger.logDbg(\"Dashboard layer\");\r\n\r\n        const { score, coins, remainTime } = playerEnv.control;\r\n\r\n        font.print('MARIO', context, 16, LINE1);\r\n        font.print(pad(score, 6), context, 16, LINE2);\r\n\r\n        // NOTE - the '@' and 'x' are replaced in the 'font.png'\r\n        // similar trick like font-icon\r\n        font.print('@x' + pad(coins, 2), context, 96, LINE2);\r\n\r\n        font.print('WORLD', context, 152, LINE1);\r\n        font.print(level.NAME, context, 160, LINE2);\r\n\r\n        font.print('TIME', context, 208, LINE1);\r\n        font.print(pad(remainTime, 3), context, 216, LINE2);\r\n    };\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/layers/dashboard.js","import { Trait } from '../Trait.js';\r\n\r\nexport class BePlayerControlTrait extends Trait {\r\n    /**\r\n     * @param {Entity} player\r\n     * @param {Number} playerTime\r\n     */\r\n    constructor(player, playerTime = -1) {\r\n        super('control', true);\r\n\r\n        this._player = player;\r\n        this._checkpoint = this._player.pos.clone();\r\n\r\n        this._playerTime = playerTime;\r\n        this._remainTime = this._playerTime;\r\n        this._timeSpeed = 2;\r\n\r\n        this._score = 0;\r\n        this._coins = 0;\r\n\r\n        // add a stomper listener\r\n        this._player.stomper.addListener(() => this._score += 100);\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get score() {\r\n        return this._score;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get coins() {\r\n        return this._coins;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get remainTime() {\r\n        return this._remainTime;\r\n    }\r\n\r\n    /**\r\n     * @param {Entity} entity\r\n     * @param {Number} rate\r\n     * @param {Level} level  \r\n     */\r\n    update(entity, rate, level) {\r\n        // revive the killed entity\r\n        if (!level.hasEntity(this._player)) {\r\n            this._player.killable.revive();\r\n            this._player.pos.set(this._checkpoint.x, this._checkpoint.y);\r\n            level.addEntity(this._player);\r\n\r\n            // reset again the player's remaining time\r\n            this._remainTime = this._playerTime;\r\n        } else {\r\n\r\n            // update player's remaining time (if there's such a need)\r\n            if (this._playerTime > 0) {\r\n                this._remainTime -= rate * this._timeSpeed;\r\n            }\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/traits/BePlayerControl.js"],"sourceRoot":""}